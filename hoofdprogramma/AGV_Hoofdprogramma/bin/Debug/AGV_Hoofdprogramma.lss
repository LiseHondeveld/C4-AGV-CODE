
bin\Debug\AGV_Hoofdprogramma.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000010a  00800200  000021ae  00002262  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000021ae  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000022  0080030a  0080030a  0000236c  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  0000236c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 00000260  00000000  00000000  0000236f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000004b8  00000000  00000000  000025cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000287f  00000000  00000000  00002a87  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001562  00000000  00000000  00005306  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001d11  00000000  00000000  00006868  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000320  00000000  00000000  0000857c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005d4  00000000  00000000  0000889c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008ae  00000000  00000000  00008e70  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000971e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 f1 07 	jmp	0xfe2	; 0xfe2 <__vector_11>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 e5 06 	jmp	0xdca	; 0xdca <__vector_31>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 ad 06 	jmp	0xd5a	; 0xd5a <__vector_33>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__vector_45>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ee ea       	ldi	r30, 0xAE	; 174
      fc:	f1 e2       	ldi	r31, 0x21	; 33
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	aa 30       	cpi	r26, 0x0A	; 10
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	13 e0       	ldi	r17, 0x03	; 3
     110:	aa e0       	ldi	r26, 0x0A	; 10
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ac 32       	cpi	r26, 0x2C	; 44
     11a:	b1 07       	cpc	r27, r17
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 6d 0a 	call	0x14da	; 0x14da <main>
     122:	0c 94 d5 10 	jmp	0x21aa	; 0x21aa <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <boomdetectie>:
#include <avr/delay.h>
#include "agv_ultrasoon.h"
#include "agv_motor.h"

void boomdetectie(void)
{
     12a:	df 93       	push	r29
     12c:	cf 93       	push	r28
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62
     132:	e8 97       	sbiw	r28, 0x38	; 56
     134:	0f b6       	in	r0, 0x3f	; 63
     136:	f8 94       	cli
     138:	de bf       	out	0x3e, r29	; 62
     13a:	0f be       	out	0x3f, r0	; 63
     13c:	cd bf       	out	0x3d, r28	; 61
    if (agv_ultrasoon_boom_links <= 10)
     13e:	80 91 1e 03 	lds	r24, 0x031E
     142:	90 91 1f 03 	lds	r25, 0x031F
     146:	8b 30       	cpi	r24, 0x0B	; 11
     148:	91 05       	cpc	r25, r1
     14a:	08 f0       	brcs	.+2      	; 0x14e <boomdetectie+0x24>
     14c:	f0 c0       	rjmp	.+480    	; 0x32e <boomdetectie+0x204>
    {
        DirectieMotorL = 0;
     14e:	10 92 0b 03 	sts	0x030B, r1
     152:	10 92 0a 03 	sts	0x030A, r1
        DirectieMotorR = 0;// karretje niet rijden
     156:	10 92 0d 03 	sts	0x030D, r1
     15a:	10 92 0c 03 	sts	0x030C, r1

        agv_buzzer_aan();
     15e:	0e 94 ed 02 	call	0x5da	; 0x5da <agv_buzzer_aan>
     162:	80 e0       	ldi	r24, 0x00	; 0
     164:	90 e0       	ldi	r25, 0x00	; 0
     166:	a8 ec       	ldi	r26, 0xC8	; 200
     168:	b3 e4       	ldi	r27, 0x43	; 67
     16a:	8d ab       	std	Y+53, r24	; 0x35
     16c:	9e ab       	std	Y+54, r25	; 0x36
     16e:	af ab       	std	Y+55, r26	; 0x37
     170:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     172:	6d a9       	ldd	r22, Y+53	; 0x35
     174:	7e a9       	ldd	r23, Y+54	; 0x36
     176:	8f a9       	ldd	r24, Y+55	; 0x37
     178:	98 ad       	ldd	r25, Y+56	; 0x38
     17a:	20 e0       	ldi	r18, 0x00	; 0
     17c:	30 e0       	ldi	r19, 0x00	; 0
     17e:	4a e7       	ldi	r20, 0x7A	; 122
     180:	55 e4       	ldi	r21, 0x45	; 69
     182:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__mulsf3>
     186:	dc 01       	movw	r26, r24
     188:	cb 01       	movw	r24, r22
     18a:	89 ab       	std	Y+49, r24	; 0x31
     18c:	9a ab       	std	Y+50, r25	; 0x32
     18e:	ab ab       	std	Y+51, r26	; 0x33
     190:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     192:	69 a9       	ldd	r22, Y+49	; 0x31
     194:	7a a9       	ldd	r23, Y+50	; 0x32
     196:	8b a9       	ldd	r24, Y+51	; 0x33
     198:	9c a9       	ldd	r25, Y+52	; 0x34
     19a:	20 e0       	ldi	r18, 0x00	; 0
     19c:	30 e0       	ldi	r19, 0x00	; 0
     19e:	40 e8       	ldi	r20, 0x80	; 128
     1a0:	5f e3       	ldi	r21, 0x3F	; 63
     1a2:	0e 94 ac 0d 	call	0x1b58	; 0x1b58 <__ltsf2>
     1a6:	88 23       	and	r24, r24
     1a8:	2c f4       	brge	.+10     	; 0x1b4 <boomdetectie+0x8a>
		__ticks = 1;
     1aa:	81 e0       	ldi	r24, 0x01	; 1
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	98 ab       	std	Y+48, r25	; 0x30
     1b0:	8f a7       	std	Y+47, r24	; 0x2f
     1b2:	3f c0       	rjmp	.+126    	; 0x232 <boomdetectie+0x108>
	else if (__tmp > 65535)
     1b4:	69 a9       	ldd	r22, Y+49	; 0x31
     1b6:	7a a9       	ldd	r23, Y+50	; 0x32
     1b8:	8b a9       	ldd	r24, Y+51	; 0x33
     1ba:	9c a9       	ldd	r25, Y+52	; 0x34
     1bc:	20 e0       	ldi	r18, 0x00	; 0
     1be:	3f ef       	ldi	r19, 0xFF	; 255
     1c0:	4f e7       	ldi	r20, 0x7F	; 127
     1c2:	57 e4       	ldi	r21, 0x47	; 71
     1c4:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <__gtsf2>
     1c8:	18 16       	cp	r1, r24
     1ca:	4c f5       	brge	.+82     	; 0x21e <boomdetectie+0xf4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1cc:	6d a9       	ldd	r22, Y+53	; 0x35
     1ce:	7e a9       	ldd	r23, Y+54	; 0x36
     1d0:	8f a9       	ldd	r24, Y+55	; 0x37
     1d2:	98 ad       	ldd	r25, Y+56	; 0x38
     1d4:	20 e0       	ldi	r18, 0x00	; 0
     1d6:	30 e0       	ldi	r19, 0x00	; 0
     1d8:	40 e2       	ldi	r20, 0x20	; 32
     1da:	51 e4       	ldi	r21, 0x41	; 65
     1dc:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__mulsf3>
     1e0:	dc 01       	movw	r26, r24
     1e2:	cb 01       	movw	r24, r22
     1e4:	bc 01       	movw	r22, r24
     1e6:	cd 01       	movw	r24, r26
     1e8:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     1ec:	dc 01       	movw	r26, r24
     1ee:	cb 01       	movw	r24, r22
     1f0:	98 ab       	std	Y+48, r25	; 0x30
     1f2:	8f a7       	std	Y+47, r24	; 0x2f
     1f4:	0f c0       	rjmp	.+30     	; 0x214 <boomdetectie+0xea>
     1f6:	80 e9       	ldi	r24, 0x90	; 144
     1f8:	91 e0       	ldi	r25, 0x01	; 1
     1fa:	9e a7       	std	Y+46, r25	; 0x2e
     1fc:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1fe:	8d a5       	ldd	r24, Y+45	; 0x2d
     200:	9e a5       	ldd	r25, Y+46	; 0x2e
     202:	01 97       	sbiw	r24, 0x01	; 1
     204:	f1 f7       	brne	.-4      	; 0x202 <boomdetectie+0xd8>
     206:	9e a7       	std	Y+46, r25	; 0x2e
     208:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     20a:	8f a5       	ldd	r24, Y+47	; 0x2f
     20c:	98 a9       	ldd	r25, Y+48	; 0x30
     20e:	01 97       	sbiw	r24, 0x01	; 1
     210:	98 ab       	std	Y+48, r25	; 0x30
     212:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     214:	8f a5       	ldd	r24, Y+47	; 0x2f
     216:	98 a9       	ldd	r25, Y+48	; 0x30
     218:	00 97       	sbiw	r24, 0x00	; 0
     21a:	69 f7       	brne	.-38     	; 0x1f6 <boomdetectie+0xcc>
     21c:	14 c0       	rjmp	.+40     	; 0x246 <boomdetectie+0x11c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     21e:	69 a9       	ldd	r22, Y+49	; 0x31
     220:	7a a9       	ldd	r23, Y+50	; 0x32
     222:	8b a9       	ldd	r24, Y+51	; 0x33
     224:	9c a9       	ldd	r25, Y+52	; 0x34
     226:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     22a:	dc 01       	movw	r26, r24
     22c:	cb 01       	movw	r24, r22
     22e:	98 ab       	std	Y+48, r25	; 0x30
     230:	8f a7       	std	Y+47, r24	; 0x2f
     232:	8f a5       	ldd	r24, Y+47	; 0x2f
     234:	98 a9       	ldd	r25, Y+48	; 0x30
     236:	9c a7       	std	Y+44, r25	; 0x2c
     238:	8b a7       	std	Y+43, r24	; 0x2b
     23a:	8b a5       	ldd	r24, Y+43	; 0x2b
     23c:	9c a5       	ldd	r25, Y+44	; 0x2c
     23e:	01 97       	sbiw	r24, 0x01	; 1
     240:	f1 f7       	brne	.-4      	; 0x23e <boomdetectie+0x114>
     242:	9c a7       	std	Y+44, r25	; 0x2c
     244:	8b a7       	std	Y+43, r24	; 0x2b
        _delay_ms(400);
        agv_buzzer_uit();
     246:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <agv_buzzer_uit>
     24a:	80 e0       	ldi	r24, 0x00	; 0
     24c:	90 e0       	ldi	r25, 0x00	; 0
     24e:	aa e7       	ldi	r26, 0x7A	; 122
     250:	b4 e4       	ldi	r27, 0x44	; 68
     252:	8f a3       	std	Y+39, r24	; 0x27
     254:	98 a7       	std	Y+40, r25	; 0x28
     256:	a9 a7       	std	Y+41, r26	; 0x29
     258:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     25a:	6f a1       	ldd	r22, Y+39	; 0x27
     25c:	78 a5       	ldd	r23, Y+40	; 0x28
     25e:	89 a5       	ldd	r24, Y+41	; 0x29
     260:	9a a5       	ldd	r25, Y+42	; 0x2a
     262:	20 e0       	ldi	r18, 0x00	; 0
     264:	30 e0       	ldi	r19, 0x00	; 0
     266:	4a e7       	ldi	r20, 0x7A	; 122
     268:	55 e4       	ldi	r21, 0x45	; 69
     26a:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__mulsf3>
     26e:	dc 01       	movw	r26, r24
     270:	cb 01       	movw	r24, r22
     272:	8b a3       	std	Y+35, r24	; 0x23
     274:	9c a3       	std	Y+36, r25	; 0x24
     276:	ad a3       	std	Y+37, r26	; 0x25
     278:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     27a:	6b a1       	ldd	r22, Y+35	; 0x23
     27c:	7c a1       	ldd	r23, Y+36	; 0x24
     27e:	8d a1       	ldd	r24, Y+37	; 0x25
     280:	9e a1       	ldd	r25, Y+38	; 0x26
     282:	20 e0       	ldi	r18, 0x00	; 0
     284:	30 e0       	ldi	r19, 0x00	; 0
     286:	40 e8       	ldi	r20, 0x80	; 128
     288:	5f e3       	ldi	r21, 0x3F	; 63
     28a:	0e 94 ac 0d 	call	0x1b58	; 0x1b58 <__ltsf2>
     28e:	88 23       	and	r24, r24
     290:	2c f4       	brge	.+10     	; 0x29c <boomdetectie+0x172>
		__ticks = 1;
     292:	81 e0       	ldi	r24, 0x01	; 1
     294:	90 e0       	ldi	r25, 0x00	; 0
     296:	9a a3       	std	Y+34, r25	; 0x22
     298:	89 a3       	std	Y+33, r24	; 0x21
     29a:	3f c0       	rjmp	.+126    	; 0x31a <boomdetectie+0x1f0>
	else if (__tmp > 65535)
     29c:	6b a1       	ldd	r22, Y+35	; 0x23
     29e:	7c a1       	ldd	r23, Y+36	; 0x24
     2a0:	8d a1       	ldd	r24, Y+37	; 0x25
     2a2:	9e a1       	ldd	r25, Y+38	; 0x26
     2a4:	20 e0       	ldi	r18, 0x00	; 0
     2a6:	3f ef       	ldi	r19, 0xFF	; 255
     2a8:	4f e7       	ldi	r20, 0x7F	; 127
     2aa:	57 e4       	ldi	r21, 0x47	; 71
     2ac:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <__gtsf2>
     2b0:	18 16       	cp	r1, r24
     2b2:	4c f5       	brge	.+82     	; 0x306 <boomdetectie+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2b4:	6f a1       	ldd	r22, Y+39	; 0x27
     2b6:	78 a5       	ldd	r23, Y+40	; 0x28
     2b8:	89 a5       	ldd	r24, Y+41	; 0x29
     2ba:	9a a5       	ldd	r25, Y+42	; 0x2a
     2bc:	20 e0       	ldi	r18, 0x00	; 0
     2be:	30 e0       	ldi	r19, 0x00	; 0
     2c0:	40 e2       	ldi	r20, 0x20	; 32
     2c2:	51 e4       	ldi	r21, 0x41	; 65
     2c4:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__mulsf3>
     2c8:	dc 01       	movw	r26, r24
     2ca:	cb 01       	movw	r24, r22
     2cc:	bc 01       	movw	r22, r24
     2ce:	cd 01       	movw	r24, r26
     2d0:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     2d4:	dc 01       	movw	r26, r24
     2d6:	cb 01       	movw	r24, r22
     2d8:	9a a3       	std	Y+34, r25	; 0x22
     2da:	89 a3       	std	Y+33, r24	; 0x21
     2dc:	0f c0       	rjmp	.+30     	; 0x2fc <boomdetectie+0x1d2>
     2de:	80 e9       	ldi	r24, 0x90	; 144
     2e0:	91 e0       	ldi	r25, 0x01	; 1
     2e2:	98 a3       	std	Y+32, r25	; 0x20
     2e4:	8f 8f       	std	Y+31, r24	; 0x1f
     2e6:	8f 8d       	ldd	r24, Y+31	; 0x1f
     2e8:	98 a1       	ldd	r25, Y+32	; 0x20
     2ea:	01 97       	sbiw	r24, 0x01	; 1
     2ec:	f1 f7       	brne	.-4      	; 0x2ea <boomdetectie+0x1c0>
     2ee:	98 a3       	std	Y+32, r25	; 0x20
     2f0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2f2:	89 a1       	ldd	r24, Y+33	; 0x21
     2f4:	9a a1       	ldd	r25, Y+34	; 0x22
     2f6:	01 97       	sbiw	r24, 0x01	; 1
     2f8:	9a a3       	std	Y+34, r25	; 0x22
     2fa:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2fc:	89 a1       	ldd	r24, Y+33	; 0x21
     2fe:	9a a1       	ldd	r25, Y+34	; 0x22
     300:	00 97       	sbiw	r24, 0x00	; 0
     302:	69 f7       	brne	.-38     	; 0x2de <boomdetectie+0x1b4>
     304:	14 c0       	rjmp	.+40     	; 0x32e <boomdetectie+0x204>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     306:	6b a1       	ldd	r22, Y+35	; 0x23
     308:	7c a1       	ldd	r23, Y+36	; 0x24
     30a:	8d a1       	ldd	r24, Y+37	; 0x25
     30c:	9e a1       	ldd	r25, Y+38	; 0x26
     30e:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     312:	dc 01       	movw	r26, r24
     314:	cb 01       	movw	r24, r22
     316:	9a a3       	std	Y+34, r25	; 0x22
     318:	89 a3       	std	Y+33, r24	; 0x21
     31a:	89 a1       	ldd	r24, Y+33	; 0x21
     31c:	9a a1       	ldd	r25, Y+34	; 0x22
     31e:	9e 8f       	std	Y+30, r25	; 0x1e
     320:	8d 8f       	std	Y+29, r24	; 0x1d
     322:	8d 8d       	ldd	r24, Y+29	; 0x1d
     324:	9e 8d       	ldd	r25, Y+30	; 0x1e
     326:	01 97       	sbiw	r24, 0x01	; 1
     328:	f1 f7       	brne	.-4      	; 0x326 <boomdetectie+0x1fc>
     32a:	9e 8f       	std	Y+30, r25	; 0x1e
     32c:	8d 8f       	std	Y+29, r24	; 0x1d
        _delay_ms(1000);
        // buzzer aan voor 1 sec
    }
    if (agv_ultrasoon_boom_rechts <=10)
     32e:	80 91 20 03 	lds	r24, 0x0320
     332:	90 91 21 03 	lds	r25, 0x0321
     336:	8b 30       	cpi	r24, 0x0B	; 11
     338:	91 05       	cpc	r25, r1
     33a:	08 f0       	brcs	.+2      	; 0x33e <boomdetectie+0x214>
     33c:	f0 c0       	rjmp	.+480    	; 0x51e <boomdetectie+0x3f4>
    {
        DirectieMotorL = 0;
     33e:	10 92 0b 03 	sts	0x030B, r1
     342:	10 92 0a 03 	sts	0x030A, r1
        DirectieMotorR = 0;// karretje niet rijden
     346:	10 92 0d 03 	sts	0x030D, r1
     34a:	10 92 0c 03 	sts	0x030C, r1

        agv_buzzer_aan(); // buzzer aan voor 1 sec
     34e:	0e 94 ed 02 	call	0x5da	; 0x5da <agv_buzzer_aan>
     352:	80 e0       	ldi	r24, 0x00	; 0
     354:	90 e0       	ldi	r25, 0x00	; 0
     356:	a8 ec       	ldi	r26, 0xC8	; 200
     358:	b3 e4       	ldi	r27, 0x43	; 67
     35a:	89 8f       	std	Y+25, r24	; 0x19
     35c:	9a 8f       	std	Y+26, r25	; 0x1a
     35e:	ab 8f       	std	Y+27, r26	; 0x1b
     360:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     362:	69 8d       	ldd	r22, Y+25	; 0x19
     364:	7a 8d       	ldd	r23, Y+26	; 0x1a
     366:	8b 8d       	ldd	r24, Y+27	; 0x1b
     368:	9c 8d       	ldd	r25, Y+28	; 0x1c
     36a:	20 e0       	ldi	r18, 0x00	; 0
     36c:	30 e0       	ldi	r19, 0x00	; 0
     36e:	4a e7       	ldi	r20, 0x7A	; 122
     370:	55 e4       	ldi	r21, 0x45	; 69
     372:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__mulsf3>
     376:	dc 01       	movw	r26, r24
     378:	cb 01       	movw	r24, r22
     37a:	8d 8b       	std	Y+21, r24	; 0x15
     37c:	9e 8b       	std	Y+22, r25	; 0x16
     37e:	af 8b       	std	Y+23, r26	; 0x17
     380:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     382:	6d 89       	ldd	r22, Y+21	; 0x15
     384:	7e 89       	ldd	r23, Y+22	; 0x16
     386:	8f 89       	ldd	r24, Y+23	; 0x17
     388:	98 8d       	ldd	r25, Y+24	; 0x18
     38a:	20 e0       	ldi	r18, 0x00	; 0
     38c:	30 e0       	ldi	r19, 0x00	; 0
     38e:	40 e8       	ldi	r20, 0x80	; 128
     390:	5f e3       	ldi	r21, 0x3F	; 63
     392:	0e 94 ac 0d 	call	0x1b58	; 0x1b58 <__ltsf2>
     396:	88 23       	and	r24, r24
     398:	2c f4       	brge	.+10     	; 0x3a4 <boomdetectie+0x27a>
		__ticks = 1;
     39a:	81 e0       	ldi	r24, 0x01	; 1
     39c:	90 e0       	ldi	r25, 0x00	; 0
     39e:	9c 8b       	std	Y+20, r25	; 0x14
     3a0:	8b 8b       	std	Y+19, r24	; 0x13
     3a2:	3f c0       	rjmp	.+126    	; 0x422 <boomdetectie+0x2f8>
	else if (__tmp > 65535)
     3a4:	6d 89       	ldd	r22, Y+21	; 0x15
     3a6:	7e 89       	ldd	r23, Y+22	; 0x16
     3a8:	8f 89       	ldd	r24, Y+23	; 0x17
     3aa:	98 8d       	ldd	r25, Y+24	; 0x18
     3ac:	20 e0       	ldi	r18, 0x00	; 0
     3ae:	3f ef       	ldi	r19, 0xFF	; 255
     3b0:	4f e7       	ldi	r20, 0x7F	; 127
     3b2:	57 e4       	ldi	r21, 0x47	; 71
     3b4:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <__gtsf2>
     3b8:	18 16       	cp	r1, r24
     3ba:	4c f5       	brge	.+82     	; 0x40e <boomdetectie+0x2e4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3bc:	69 8d       	ldd	r22, Y+25	; 0x19
     3be:	7a 8d       	ldd	r23, Y+26	; 0x1a
     3c0:	8b 8d       	ldd	r24, Y+27	; 0x1b
     3c2:	9c 8d       	ldd	r25, Y+28	; 0x1c
     3c4:	20 e0       	ldi	r18, 0x00	; 0
     3c6:	30 e0       	ldi	r19, 0x00	; 0
     3c8:	40 e2       	ldi	r20, 0x20	; 32
     3ca:	51 e4       	ldi	r21, 0x41	; 65
     3cc:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__mulsf3>
     3d0:	dc 01       	movw	r26, r24
     3d2:	cb 01       	movw	r24, r22
     3d4:	bc 01       	movw	r22, r24
     3d6:	cd 01       	movw	r24, r26
     3d8:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     3dc:	dc 01       	movw	r26, r24
     3de:	cb 01       	movw	r24, r22
     3e0:	9c 8b       	std	Y+20, r25	; 0x14
     3e2:	8b 8b       	std	Y+19, r24	; 0x13
     3e4:	0f c0       	rjmp	.+30     	; 0x404 <boomdetectie+0x2da>
     3e6:	80 e9       	ldi	r24, 0x90	; 144
     3e8:	91 e0       	ldi	r25, 0x01	; 1
     3ea:	9a 8b       	std	Y+18, r25	; 0x12
     3ec:	89 8b       	std	Y+17, r24	; 0x11
     3ee:	89 89       	ldd	r24, Y+17	; 0x11
     3f0:	9a 89       	ldd	r25, Y+18	; 0x12
     3f2:	01 97       	sbiw	r24, 0x01	; 1
     3f4:	f1 f7       	brne	.-4      	; 0x3f2 <boomdetectie+0x2c8>
     3f6:	9a 8b       	std	Y+18, r25	; 0x12
     3f8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3fa:	8b 89       	ldd	r24, Y+19	; 0x13
     3fc:	9c 89       	ldd	r25, Y+20	; 0x14
     3fe:	01 97       	sbiw	r24, 0x01	; 1
     400:	9c 8b       	std	Y+20, r25	; 0x14
     402:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     404:	8b 89       	ldd	r24, Y+19	; 0x13
     406:	9c 89       	ldd	r25, Y+20	; 0x14
     408:	00 97       	sbiw	r24, 0x00	; 0
     40a:	69 f7       	brne	.-38     	; 0x3e6 <boomdetectie+0x2bc>
     40c:	14 c0       	rjmp	.+40     	; 0x436 <boomdetectie+0x30c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     40e:	6d 89       	ldd	r22, Y+21	; 0x15
     410:	7e 89       	ldd	r23, Y+22	; 0x16
     412:	8f 89       	ldd	r24, Y+23	; 0x17
     414:	98 8d       	ldd	r25, Y+24	; 0x18
     416:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     41a:	dc 01       	movw	r26, r24
     41c:	cb 01       	movw	r24, r22
     41e:	9c 8b       	std	Y+20, r25	; 0x14
     420:	8b 8b       	std	Y+19, r24	; 0x13
     422:	8b 89       	ldd	r24, Y+19	; 0x13
     424:	9c 89       	ldd	r25, Y+20	; 0x14
     426:	98 8b       	std	Y+16, r25	; 0x10
     428:	8f 87       	std	Y+15, r24	; 0x0f
     42a:	8f 85       	ldd	r24, Y+15	; 0x0f
     42c:	98 89       	ldd	r25, Y+16	; 0x10
     42e:	01 97       	sbiw	r24, 0x01	; 1
     430:	f1 f7       	brne	.-4      	; 0x42e <boomdetectie+0x304>
     432:	98 8b       	std	Y+16, r25	; 0x10
     434:	8f 87       	std	Y+15, r24	; 0x0f
        _delay_ms(400);
        agv_buzzer_uit();
     436:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <agv_buzzer_uit>
     43a:	80 e0       	ldi	r24, 0x00	; 0
     43c:	90 e0       	ldi	r25, 0x00	; 0
     43e:	aa e7       	ldi	r26, 0x7A	; 122
     440:	b4 e4       	ldi	r27, 0x44	; 68
     442:	8b 87       	std	Y+11, r24	; 0x0b
     444:	9c 87       	std	Y+12, r25	; 0x0c
     446:	ad 87       	std	Y+13, r26	; 0x0d
     448:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     44a:	6b 85       	ldd	r22, Y+11	; 0x0b
     44c:	7c 85       	ldd	r23, Y+12	; 0x0c
     44e:	8d 85       	ldd	r24, Y+13	; 0x0d
     450:	9e 85       	ldd	r25, Y+14	; 0x0e
     452:	20 e0       	ldi	r18, 0x00	; 0
     454:	30 e0       	ldi	r19, 0x00	; 0
     456:	4a e7       	ldi	r20, 0x7A	; 122
     458:	55 e4       	ldi	r21, 0x45	; 69
     45a:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__mulsf3>
     45e:	dc 01       	movw	r26, r24
     460:	cb 01       	movw	r24, r22
     462:	8f 83       	std	Y+7, r24	; 0x07
     464:	98 87       	std	Y+8, r25	; 0x08
     466:	a9 87       	std	Y+9, r26	; 0x09
     468:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     46a:	6f 81       	ldd	r22, Y+7	; 0x07
     46c:	78 85       	ldd	r23, Y+8	; 0x08
     46e:	89 85       	ldd	r24, Y+9	; 0x09
     470:	9a 85       	ldd	r25, Y+10	; 0x0a
     472:	20 e0       	ldi	r18, 0x00	; 0
     474:	30 e0       	ldi	r19, 0x00	; 0
     476:	40 e8       	ldi	r20, 0x80	; 128
     478:	5f e3       	ldi	r21, 0x3F	; 63
     47a:	0e 94 ac 0d 	call	0x1b58	; 0x1b58 <__ltsf2>
     47e:	88 23       	and	r24, r24
     480:	2c f4       	brge	.+10     	; 0x48c <boomdetectie+0x362>
		__ticks = 1;
     482:	81 e0       	ldi	r24, 0x01	; 1
     484:	90 e0       	ldi	r25, 0x00	; 0
     486:	9e 83       	std	Y+6, r25	; 0x06
     488:	8d 83       	std	Y+5, r24	; 0x05
     48a:	3f c0       	rjmp	.+126    	; 0x50a <boomdetectie+0x3e0>
	else if (__tmp > 65535)
     48c:	6f 81       	ldd	r22, Y+7	; 0x07
     48e:	78 85       	ldd	r23, Y+8	; 0x08
     490:	89 85       	ldd	r24, Y+9	; 0x09
     492:	9a 85       	ldd	r25, Y+10	; 0x0a
     494:	20 e0       	ldi	r18, 0x00	; 0
     496:	3f ef       	ldi	r19, 0xFF	; 255
     498:	4f e7       	ldi	r20, 0x7F	; 127
     49a:	57 e4       	ldi	r21, 0x47	; 71
     49c:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <__gtsf2>
     4a0:	18 16       	cp	r1, r24
     4a2:	4c f5       	brge	.+82     	; 0x4f6 <boomdetectie+0x3cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4a4:	6b 85       	ldd	r22, Y+11	; 0x0b
     4a6:	7c 85       	ldd	r23, Y+12	; 0x0c
     4a8:	8d 85       	ldd	r24, Y+13	; 0x0d
     4aa:	9e 85       	ldd	r25, Y+14	; 0x0e
     4ac:	20 e0       	ldi	r18, 0x00	; 0
     4ae:	30 e0       	ldi	r19, 0x00	; 0
     4b0:	40 e2       	ldi	r20, 0x20	; 32
     4b2:	51 e4       	ldi	r21, 0x41	; 65
     4b4:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__mulsf3>
     4b8:	dc 01       	movw	r26, r24
     4ba:	cb 01       	movw	r24, r22
     4bc:	bc 01       	movw	r22, r24
     4be:	cd 01       	movw	r24, r26
     4c0:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     4c4:	dc 01       	movw	r26, r24
     4c6:	cb 01       	movw	r24, r22
     4c8:	9e 83       	std	Y+6, r25	; 0x06
     4ca:	8d 83       	std	Y+5, r24	; 0x05
     4cc:	0f c0       	rjmp	.+30     	; 0x4ec <boomdetectie+0x3c2>
     4ce:	80 e9       	ldi	r24, 0x90	; 144
     4d0:	91 e0       	ldi	r25, 0x01	; 1
     4d2:	9c 83       	std	Y+4, r25	; 0x04
     4d4:	8b 83       	std	Y+3, r24	; 0x03
     4d6:	8b 81       	ldd	r24, Y+3	; 0x03
     4d8:	9c 81       	ldd	r25, Y+4	; 0x04
     4da:	01 97       	sbiw	r24, 0x01	; 1
     4dc:	f1 f7       	brne	.-4      	; 0x4da <boomdetectie+0x3b0>
     4de:	9c 83       	std	Y+4, r25	; 0x04
     4e0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4e2:	8d 81       	ldd	r24, Y+5	; 0x05
     4e4:	9e 81       	ldd	r25, Y+6	; 0x06
     4e6:	01 97       	sbiw	r24, 0x01	; 1
     4e8:	9e 83       	std	Y+6, r25	; 0x06
     4ea:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4ec:	8d 81       	ldd	r24, Y+5	; 0x05
     4ee:	9e 81       	ldd	r25, Y+6	; 0x06
     4f0:	00 97       	sbiw	r24, 0x00	; 0
     4f2:	69 f7       	brne	.-38     	; 0x4ce <boomdetectie+0x3a4>
     4f4:	14 c0       	rjmp	.+40     	; 0x51e <boomdetectie+0x3f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4f6:	6f 81       	ldd	r22, Y+7	; 0x07
     4f8:	78 85       	ldd	r23, Y+8	; 0x08
     4fa:	89 85       	ldd	r24, Y+9	; 0x09
     4fc:	9a 85       	ldd	r25, Y+10	; 0x0a
     4fe:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     502:	dc 01       	movw	r26, r24
     504:	cb 01       	movw	r24, r22
     506:	9e 83       	std	Y+6, r25	; 0x06
     508:	8d 83       	std	Y+5, r24	; 0x05
     50a:	8d 81       	ldd	r24, Y+5	; 0x05
     50c:	9e 81       	ldd	r25, Y+6	; 0x06
     50e:	9a 83       	std	Y+2, r25	; 0x02
     510:	89 83       	std	Y+1, r24	; 0x01
     512:	89 81       	ldd	r24, Y+1	; 0x01
     514:	9a 81       	ldd	r25, Y+2	; 0x02
     516:	01 97       	sbiw	r24, 0x01	; 1
     518:	f1 f7       	brne	.-4      	; 0x516 <boomdetectie+0x3ec>
     51a:	9a 83       	std	Y+2, r25	; 0x02
     51c:	89 83       	std	Y+1, r24	; 0x01
        _delay_ms(1000);
    }
}
     51e:	e8 96       	adiw	r28, 0x38	; 56
     520:	0f b6       	in	r0, 0x3f	; 63
     522:	f8 94       	cli
     524:	de bf       	out	0x3e, r29	; 62
     526:	0f be       	out	0x3f, r0	; 63
     528:	cd bf       	out	0x3d, r28	; 61
     52a:	cf 91       	pop	r28
     52c:	df 91       	pop	r29
     52e:	08 95       	ret

00000530 <obstakeldetectie>:

void obstakeldetectie(void)
{
     530:	df 93       	push	r29
     532:	cf 93       	push	r28
     534:	cd b7       	in	r28, 0x3d	; 61
     536:	de b7       	in	r29, 0x3e	; 62
    if ((agv_ultrasoon_voor_midden <= 7) || (agv_ultrasoon_voor_rechts <= 7) || (agv_ultrasoon_voor_links <= 7))
     538:	80 91 24 03 	lds	r24, 0x0324
     53c:	90 91 25 03 	lds	r25, 0x0325
     540:	88 30       	cpi	r24, 0x08	; 8
     542:	91 05       	cpc	r25, r1
     544:	70 f0       	brcs	.+28     	; 0x562 <obstakeldetectie+0x32>
     546:	80 91 26 03 	lds	r24, 0x0326
     54a:	90 91 27 03 	lds	r25, 0x0327
     54e:	88 30       	cpi	r24, 0x08	; 8
     550:	91 05       	cpc	r25, r1
     552:	38 f0       	brcs	.+14     	; 0x562 <obstakeldetectie+0x32>
     554:	80 91 22 03 	lds	r24, 0x0322
     558:	90 91 23 03 	lds	r25, 0x0323
     55c:	88 30       	cpi	r24, 0x08	; 8
     55e:	91 05       	cpc	r25, r1
     560:	50 f4       	brcc	.+20     	; 0x576 <obstakeldetectie+0x46>
    {
        TIMSK4 &= ~(1<<TOIE4);
     562:	a2 e7       	ldi	r26, 0x72	; 114
     564:	b0 e0       	ldi	r27, 0x00	; 0
     566:	e2 e7       	ldi	r30, 0x72	; 114
     568:	f0 e0       	ldi	r31, 0x00	; 0
     56a:	80 81       	ld	r24, Z
     56c:	8e 7f       	andi	r24, 0xFE	; 254
     56e:	8c 93       	st	X, r24
        agv_buzzer_aan();
     570:	0e 94 ed 02 	call	0x5da	; 0x5da <agv_buzzer_aan>
     574:	09 c0       	rjmp	.+18     	; 0x588 <obstakeldetectie+0x58>
    }
    else
    {
        TIMSK4 |= (1<<TOIE4);
     576:	a2 e7       	ldi	r26, 0x72	; 114
     578:	b0 e0       	ldi	r27, 0x00	; 0
     57a:	e2 e7       	ldi	r30, 0x72	; 114
     57c:	f0 e0       	ldi	r31, 0x00	; 0
     57e:	80 81       	ld	r24, Z
     580:	81 60       	ori	r24, 0x01	; 1
     582:	8c 93       	st	X, r24
        agv_buzzer_uit();
     584:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <agv_buzzer_uit>
    }
}
     588:	cf 91       	pop	r28
     58a:	df 91       	pop	r29
     58c:	08 95       	ret

0000058e <agv_buzzer_init>:
#include <avr/io.h>

void agv_buzzer_init(void) //Functie voor de buzzer
{
     58e:	df 93       	push	r29
     590:	cf 93       	push	r28
     592:	cd b7       	in	r28, 0x3d	; 61
     594:	de b7       	in	r29, 0x3e	; 62
    DDRL |= (1<<PL3); //Pin 46 configureren van de arduino
     596:	aa e0       	ldi	r26, 0x0A	; 10
     598:	b1 e0       	ldi	r27, 0x01	; 1
     59a:	ea e0       	ldi	r30, 0x0A	; 10
     59c:	f1 e0       	ldi	r31, 0x01	; 1
     59e:	80 81       	ld	r24, Z
     5a0:	88 60       	ori	r24, 0x08	; 8
     5a2:	8c 93       	st	X, r24
    TCCR5A = (0<<WGM51) | (1<<WGM50) | (0<<COM5A1); //Instellen fast PWM 8-bit
     5a4:	e0 e2       	ldi	r30, 0x20	; 32
     5a6:	f1 e0       	ldi	r31, 0x01	; 1
     5a8:	81 e0       	ldi	r24, 0x01	; 1
     5aa:	80 83       	st	Z, r24
    TCCR5B |= (1<<CS52) | (0<<CS51) | (0<<CS50); //Prescaler 256
     5ac:	a1 e2       	ldi	r26, 0x21	; 33
     5ae:	b1 e0       	ldi	r27, 0x01	; 1
     5b0:	e1 e2       	ldi	r30, 0x21	; 33
     5b2:	f1 e0       	ldi	r31, 0x01	; 1
     5b4:	80 81       	ld	r24, Z
     5b6:	84 60       	ori	r24, 0x04	; 4
     5b8:	8c 93       	st	X, r24
    TCCR5B |= (0<<WGM53) | (1<<WGM32); //Instellen fast PWM 8-bit
     5ba:	a1 e2       	ldi	r26, 0x21	; 33
     5bc:	b1 e0       	ldi	r27, 0x01	; 1
     5be:	e1 e2       	ldi	r30, 0x21	; 33
     5c0:	f1 e0       	ldi	r31, 0x01	; 1
     5c2:	80 81       	ld	r24, Z
     5c4:	88 60       	ori	r24, 0x08	; 8
     5c6:	8c 93       	st	X, r24
    OCR5A = 192; //Duty cycle (hier kan je de volume mee aanpassen)
     5c8:	e8 e2       	ldi	r30, 0x28	; 40
     5ca:	f1 e0       	ldi	r31, 0x01	; 1
     5cc:	80 ec       	ldi	r24, 0xC0	; 192
     5ce:	90 e0       	ldi	r25, 0x00	; 0
     5d0:	91 83       	std	Z+1, r25	; 0x01
     5d2:	80 83       	st	Z, r24
}
     5d4:	cf 91       	pop	r28
     5d6:	df 91       	pop	r29
     5d8:	08 95       	ret

000005da <agv_buzzer_aan>:

void agv_buzzer_aan(void) //Functie buzzer aan
{
     5da:	df 93       	push	r29
     5dc:	cf 93       	push	r28
     5de:	cd b7       	in	r28, 0x3d	; 61
     5e0:	de b7       	in	r29, 0x3e	; 62
     TCCR5A |= (1<<COM5A1); //Buzzer aan
     5e2:	a0 e2       	ldi	r26, 0x20	; 32
     5e4:	b1 e0       	ldi	r27, 0x01	; 1
     5e6:	e0 e2       	ldi	r30, 0x20	; 32
     5e8:	f1 e0       	ldi	r31, 0x01	; 1
     5ea:	80 81       	ld	r24, Z
     5ec:	80 68       	ori	r24, 0x80	; 128
     5ee:	8c 93       	st	X, r24
}
     5f0:	cf 91       	pop	r28
     5f2:	df 91       	pop	r29
     5f4:	08 95       	ret

000005f6 <agv_buzzer_uit>:

void agv_buzzer_uit(void) //Functie buzzer uit
{
     5f6:	df 93       	push	r29
     5f8:	cf 93       	push	r28
     5fa:	cd b7       	in	r28, 0x3d	; 61
     5fc:	de b7       	in	r29, 0x3e	; 62
    TCCR5A &= ~(1<<COM5A1); //Buzzer uit
     5fe:	a0 e2       	ldi	r26, 0x20	; 32
     600:	b1 e0       	ldi	r27, 0x01	; 1
     602:	e0 e2       	ldi	r30, 0x20	; 32
     604:	f1 e0       	ldi	r31, 0x01	; 1
     606:	80 81       	ld	r24, Z
     608:	8f 77       	andi	r24, 0x7F	; 127
     60a:	8c 93       	st	X, r24
}
     60c:	cf 91       	pop	r28
     60e:	df 91       	pop	r29
     610:	08 95       	ret

00000612 <agv_motor_init>:
int DirectieMotorR = 0;
int MotorTrackingPositieL = 0;
int MotorTrackingPositieR = 0;

void agv_motor_init()
{
     612:	df 93       	push	r29
     614:	cf 93       	push	r28
     616:	cd b7       	in	r28, 0x3d	; 61
     618:	de b7       	in	r29, 0x3e	; 62
    //timer 4 instellen op elke ms
    cli();
     61a:	f8 94       	cli
    DDRA |= 0b10101010;
     61c:	a1 e2       	ldi	r26, 0x21	; 33
     61e:	b0 e0       	ldi	r27, 0x00	; 0
     620:	e1 e2       	ldi	r30, 0x21	; 33
     622:	f0 e0       	ldi	r31, 0x00	; 0
     624:	80 81       	ld	r24, Z
     626:	8a 6a       	ori	r24, 0xAA	; 170
     628:	8c 93       	st	X, r24
    DDRC |= 0b01010101;
     62a:	a7 e2       	ldi	r26, 0x27	; 39
     62c:	b0 e0       	ldi	r27, 0x00	; 0
     62e:	e7 e2       	ldi	r30, 0x27	; 39
     630:	f0 e0       	ldi	r31, 0x00	; 0
     632:	80 81       	ld	r24, Z
     634:	85 65       	ori	r24, 0x55	; 85
     636:	8c 93       	st	X, r24
    TCCR4A = 0;
     638:	e0 ea       	ldi	r30, 0xA0	; 160
     63a:	f0 e0       	ldi	r31, 0x00	; 0
     63c:	10 82       	st	Z, r1
    TCCR4B = 0;
     63e:	e1 ea       	ldi	r30, 0xA1	; 161
     640:	f0 e0       	ldi	r31, 0x00	; 0
     642:	10 82       	st	Z, r1
    TCNT4 = 6;
     644:	e4 ea       	ldi	r30, 0xA4	; 164
     646:	f0 e0       	ldi	r31, 0x00	; 0
     648:	86 e0       	ldi	r24, 0x06	; 6
     64a:	90 e0       	ldi	r25, 0x00	; 0
     64c:	91 83       	std	Z+1, r25	; 0x01
     64e:	80 83       	st	Z, r24
    TCCR4A |= (1 << WGM01);
     650:	a0 ea       	ldi	r26, 0xA0	; 160
     652:	b0 e0       	ldi	r27, 0x00	; 0
     654:	e0 ea       	ldi	r30, 0xA0	; 160
     656:	f0 e0       	ldi	r31, 0x00	; 0
     658:	80 81       	ld	r24, Z
     65a:	82 60       	ori	r24, 0x02	; 2
     65c:	8c 93       	st	X, r24
    TCCR4B |= (1 << CS41) | (1 << CS40);//prescaler 64
     65e:	a1 ea       	ldi	r26, 0xA1	; 161
     660:	b0 e0       	ldi	r27, 0x00	; 0
     662:	e1 ea       	ldi	r30, 0xA1	; 161
     664:	f0 e0       	ldi	r31, 0x00	; 0
     666:	80 81       	ld	r24, Z
     668:	83 60       	ori	r24, 0x03	; 3
     66a:	8c 93       	st	X, r24
    TIMSK4 |= (1 << TOIE4);
     66c:	a2 e7       	ldi	r26, 0x72	; 114
     66e:	b0 e0       	ldi	r27, 0x00	; 0
     670:	e2 e7       	ldi	r30, 0x72	; 114
     672:	f0 e0       	ldi	r31, 0x00	; 0
     674:	80 81       	ld	r24, Z
     676:	81 60       	ori	r24, 0x01	; 1
     678:	8c 93       	st	X, r24
    sei();
     67a:	78 94       	sei
}
     67c:	cf 91       	pop	r28
     67e:	df 91       	pop	r29
     680:	08 95       	ret

00000682 <time_current_ms>:

int time_current_ms(int update){//0 = return, 1 = time++
     682:	df 93       	push	r29
     684:	cf 93       	push	r28
     686:	cd b7       	in	r28, 0x3d	; 61
     688:	de b7       	in	r29, 0x3e	; 62
     68a:	ad 97       	sbiw	r28, 0x2d	; 45
     68c:	0f b6       	in	r0, 0x3f	; 63
     68e:	f8 94       	cli
     690:	de bf       	out	0x3e, r29	; 62
     692:	0f be       	out	0x3f, r0	; 63
     694:	cd bf       	out	0x3d, r28	; 61
     696:	9a 83       	std	Y+2, r25	; 0x02
     698:	89 83       	std	Y+1, r24	; 0x01
    static unsigned long long int time_ms = 0;
    if (update == 1){
     69a:	89 81       	ldd	r24, Y+1	; 0x01
     69c:	9a 81       	ldd	r25, Y+2	; 0x02
     69e:	81 30       	cpi	r24, 0x01	; 1
     6a0:	91 05       	cpc	r25, r1
     6a2:	09 f0       	breq	.+2      	; 0x6a6 <time_current_ms+0x24>
     6a4:	f4 c0       	rjmp	.+488    	; 0x88e <time_current_ms+0x20c>
        time_ms++;
     6a6:	80 91 12 03 	lds	r24, 0x0312
     6aa:	8b 83       	std	Y+3, r24	; 0x03
     6ac:	90 91 13 03 	lds	r25, 0x0313
     6b0:	9c 83       	std	Y+4, r25	; 0x04
     6b2:	80 91 14 03 	lds	r24, 0x0314
     6b6:	8d 83       	std	Y+5, r24	; 0x05
     6b8:	90 91 15 03 	lds	r25, 0x0315
     6bc:	9e 83       	std	Y+6, r25	; 0x06
     6be:	80 91 16 03 	lds	r24, 0x0316
     6c2:	8f 83       	std	Y+7, r24	; 0x07
     6c4:	90 91 17 03 	lds	r25, 0x0317
     6c8:	98 87       	std	Y+8, r25	; 0x08
     6ca:	80 91 18 03 	lds	r24, 0x0318
     6ce:	89 87       	std	Y+9, r24	; 0x09
     6d0:	90 91 19 03 	lds	r25, 0x0319
     6d4:	9a 87       	std	Y+10, r25	; 0x0a
     6d6:	81 e0       	ldi	r24, 0x01	; 1
     6d8:	8b 87       	std	Y+11, r24	; 0x0b
     6da:	1c 86       	std	Y+12, r1	; 0x0c
     6dc:	1d 86       	std	Y+13, r1	; 0x0d
     6de:	1e 86       	std	Y+14, r1	; 0x0e
     6e0:	1f 86       	std	Y+15, r1	; 0x0f
     6e2:	18 8a       	std	Y+16, r1	; 0x10
     6e4:	19 8a       	std	Y+17, r1	; 0x11
     6e6:	1a 8a       	std	Y+18, r1	; 0x12
     6e8:	9b 81       	ldd	r25, Y+3	; 0x03
     6ea:	8b 85       	ldd	r24, Y+11	; 0x0b
     6ec:	98 0f       	add	r25, r24
     6ee:	9b 8b       	std	Y+19, r25	; 0x13
     6f0:	91 e0       	ldi	r25, 0x01	; 1
     6f2:	9b 8f       	std	Y+27, r25	; 0x1b
     6f4:	8b 89       	ldd	r24, Y+19	; 0x13
     6f6:	9b 81       	ldd	r25, Y+3	; 0x03
     6f8:	89 17       	cp	r24, r25
     6fa:	08 f0       	brcs	.+2      	; 0x6fe <time_current_ms+0x7c>
     6fc:	1b 8e       	std	Y+27, r1	; 0x1b
     6fe:	8c 81       	ldd	r24, Y+4	; 0x04
     700:	9c 85       	ldd	r25, Y+12	; 0x0c
     702:	89 0f       	add	r24, r25
     704:	8c 8b       	std	Y+20, r24	; 0x14
     706:	81 e0       	ldi	r24, 0x01	; 1
     708:	8c 8f       	std	Y+28, r24	; 0x1c
     70a:	9c 89       	ldd	r25, Y+20	; 0x14
     70c:	8c 81       	ldd	r24, Y+4	; 0x04
     70e:	98 17       	cp	r25, r24
     710:	08 f0       	brcs	.+2      	; 0x714 <time_current_ms+0x92>
     712:	1c 8e       	std	Y+28, r1	; 0x1c
     714:	9b 8d       	ldd	r25, Y+27	; 0x1b
     716:	8c 89       	ldd	r24, Y+20	; 0x14
     718:	98 0f       	add	r25, r24
     71a:	9d 8f       	std	Y+29, r25	; 0x1d
     71c:	91 e0       	ldi	r25, 0x01	; 1
     71e:	9e 8f       	std	Y+30, r25	; 0x1e
     720:	8d 8d       	ldd	r24, Y+29	; 0x1d
     722:	9c 89       	ldd	r25, Y+20	; 0x14
     724:	89 17       	cp	r24, r25
     726:	08 f0       	brcs	.+2      	; 0x72a <time_current_ms+0xa8>
     728:	1e 8e       	std	Y+30, r1	; 0x1e
     72a:	8c 8d       	ldd	r24, Y+28	; 0x1c
     72c:	9e 8d       	ldd	r25, Y+30	; 0x1e
     72e:	89 2b       	or	r24, r25
     730:	8c 8f       	std	Y+28, r24	; 0x1c
     732:	8d 8d       	ldd	r24, Y+29	; 0x1d
     734:	8c 8b       	std	Y+20, r24	; 0x14
     736:	9d 81       	ldd	r25, Y+5	; 0x05
     738:	8d 85       	ldd	r24, Y+13	; 0x0d
     73a:	98 0f       	add	r25, r24
     73c:	9d 8b       	std	Y+21, r25	; 0x15
     73e:	91 e0       	ldi	r25, 0x01	; 1
     740:	9f 8f       	std	Y+31, r25	; 0x1f
     742:	8d 89       	ldd	r24, Y+21	; 0x15
     744:	9d 81       	ldd	r25, Y+5	; 0x05
     746:	89 17       	cp	r24, r25
     748:	08 f0       	brcs	.+2      	; 0x74c <time_current_ms+0xca>
     74a:	1f 8e       	std	Y+31, r1	; 0x1f
     74c:	8c 8d       	ldd	r24, Y+28	; 0x1c
     74e:	9d 89       	ldd	r25, Y+21	; 0x15
     750:	89 0f       	add	r24, r25
     752:	88 a3       	std	Y+32, r24	; 0x20
     754:	81 e0       	ldi	r24, 0x01	; 1
     756:	89 a3       	std	Y+33, r24	; 0x21
     758:	98 a1       	ldd	r25, Y+32	; 0x20
     75a:	8d 89       	ldd	r24, Y+21	; 0x15
     75c:	98 17       	cp	r25, r24
     75e:	08 f0       	brcs	.+2      	; 0x762 <time_current_ms+0xe0>
     760:	19 a2       	std	Y+33, r1	; 0x21
     762:	9f 8d       	ldd	r25, Y+31	; 0x1f
     764:	89 a1       	ldd	r24, Y+33	; 0x21
     766:	98 2b       	or	r25, r24
     768:	9f 8f       	std	Y+31, r25	; 0x1f
     76a:	98 a1       	ldd	r25, Y+32	; 0x20
     76c:	9d 8b       	std	Y+21, r25	; 0x15
     76e:	8e 81       	ldd	r24, Y+6	; 0x06
     770:	9e 85       	ldd	r25, Y+14	; 0x0e
     772:	89 0f       	add	r24, r25
     774:	8e 8b       	std	Y+22, r24	; 0x16
     776:	81 e0       	ldi	r24, 0x01	; 1
     778:	8a a3       	std	Y+34, r24	; 0x22
     77a:	9e 89       	ldd	r25, Y+22	; 0x16
     77c:	8e 81       	ldd	r24, Y+6	; 0x06
     77e:	98 17       	cp	r25, r24
     780:	08 f0       	brcs	.+2      	; 0x784 <time_current_ms+0x102>
     782:	1a a2       	std	Y+34, r1	; 0x22
     784:	9f 8d       	ldd	r25, Y+31	; 0x1f
     786:	8e 89       	ldd	r24, Y+22	; 0x16
     788:	98 0f       	add	r25, r24
     78a:	9b a3       	std	Y+35, r25	; 0x23
     78c:	91 e0       	ldi	r25, 0x01	; 1
     78e:	9c a3       	std	Y+36, r25	; 0x24
     790:	8b a1       	ldd	r24, Y+35	; 0x23
     792:	9e 89       	ldd	r25, Y+22	; 0x16
     794:	89 17       	cp	r24, r25
     796:	08 f0       	brcs	.+2      	; 0x79a <time_current_ms+0x118>
     798:	1c a2       	std	Y+36, r1	; 0x24
     79a:	8a a1       	ldd	r24, Y+34	; 0x22
     79c:	9c a1       	ldd	r25, Y+36	; 0x24
     79e:	89 2b       	or	r24, r25
     7a0:	8a a3       	std	Y+34, r24	; 0x22
     7a2:	8b a1       	ldd	r24, Y+35	; 0x23
     7a4:	8e 8b       	std	Y+22, r24	; 0x16
     7a6:	9f 81       	ldd	r25, Y+7	; 0x07
     7a8:	8f 85       	ldd	r24, Y+15	; 0x0f
     7aa:	98 0f       	add	r25, r24
     7ac:	9f 8b       	std	Y+23, r25	; 0x17
     7ae:	91 e0       	ldi	r25, 0x01	; 1
     7b0:	9d a3       	std	Y+37, r25	; 0x25
     7b2:	8f 89       	ldd	r24, Y+23	; 0x17
     7b4:	9f 81       	ldd	r25, Y+7	; 0x07
     7b6:	89 17       	cp	r24, r25
     7b8:	08 f0       	brcs	.+2      	; 0x7bc <time_current_ms+0x13a>
     7ba:	1d a2       	std	Y+37, r1	; 0x25
     7bc:	8a a1       	ldd	r24, Y+34	; 0x22
     7be:	9f 89       	ldd	r25, Y+23	; 0x17
     7c0:	89 0f       	add	r24, r25
     7c2:	8e a3       	std	Y+38, r24	; 0x26
     7c4:	81 e0       	ldi	r24, 0x01	; 1
     7c6:	8f a3       	std	Y+39, r24	; 0x27
     7c8:	9e a1       	ldd	r25, Y+38	; 0x26
     7ca:	8f 89       	ldd	r24, Y+23	; 0x17
     7cc:	98 17       	cp	r25, r24
     7ce:	08 f0       	brcs	.+2      	; 0x7d2 <time_current_ms+0x150>
     7d0:	1f a2       	std	Y+39, r1	; 0x27
     7d2:	9d a1       	ldd	r25, Y+37	; 0x25
     7d4:	8f a1       	ldd	r24, Y+39	; 0x27
     7d6:	98 2b       	or	r25, r24
     7d8:	9d a3       	std	Y+37, r25	; 0x25
     7da:	9e a1       	ldd	r25, Y+38	; 0x26
     7dc:	9f 8b       	std	Y+23, r25	; 0x17
     7de:	88 85       	ldd	r24, Y+8	; 0x08
     7e0:	98 89       	ldd	r25, Y+16	; 0x10
     7e2:	89 0f       	add	r24, r25
     7e4:	88 8f       	std	Y+24, r24	; 0x18
     7e6:	81 e0       	ldi	r24, 0x01	; 1
     7e8:	88 a7       	std	Y+40, r24	; 0x28
     7ea:	98 8d       	ldd	r25, Y+24	; 0x18
     7ec:	88 85       	ldd	r24, Y+8	; 0x08
     7ee:	98 17       	cp	r25, r24
     7f0:	08 f0       	brcs	.+2      	; 0x7f4 <time_current_ms+0x172>
     7f2:	18 a6       	std	Y+40, r1	; 0x28
     7f4:	9d a1       	ldd	r25, Y+37	; 0x25
     7f6:	88 8d       	ldd	r24, Y+24	; 0x18
     7f8:	98 0f       	add	r25, r24
     7fa:	99 a7       	std	Y+41, r25	; 0x29
     7fc:	91 e0       	ldi	r25, 0x01	; 1
     7fe:	9a a7       	std	Y+42, r25	; 0x2a
     800:	89 a5       	ldd	r24, Y+41	; 0x29
     802:	98 8d       	ldd	r25, Y+24	; 0x18
     804:	89 17       	cp	r24, r25
     806:	08 f0       	brcs	.+2      	; 0x80a <time_current_ms+0x188>
     808:	1a a6       	std	Y+42, r1	; 0x2a
     80a:	88 a5       	ldd	r24, Y+40	; 0x28
     80c:	9a a5       	ldd	r25, Y+42	; 0x2a
     80e:	89 2b       	or	r24, r25
     810:	88 a7       	std	Y+40, r24	; 0x28
     812:	89 a5       	ldd	r24, Y+41	; 0x29
     814:	88 8f       	std	Y+24, r24	; 0x18
     816:	99 85       	ldd	r25, Y+9	; 0x09
     818:	89 89       	ldd	r24, Y+17	; 0x11
     81a:	98 0f       	add	r25, r24
     81c:	99 8f       	std	Y+25, r25	; 0x19
     81e:	91 e0       	ldi	r25, 0x01	; 1
     820:	9b a7       	std	Y+43, r25	; 0x2b
     822:	89 8d       	ldd	r24, Y+25	; 0x19
     824:	99 85       	ldd	r25, Y+9	; 0x09
     826:	89 17       	cp	r24, r25
     828:	08 f0       	brcs	.+2      	; 0x82c <time_current_ms+0x1aa>
     82a:	1b a6       	std	Y+43, r1	; 0x2b
     82c:	88 a5       	ldd	r24, Y+40	; 0x28
     82e:	99 8d       	ldd	r25, Y+25	; 0x19
     830:	89 0f       	add	r24, r25
     832:	8c a7       	std	Y+44, r24	; 0x2c
     834:	81 e0       	ldi	r24, 0x01	; 1
     836:	8d a7       	std	Y+45, r24	; 0x2d
     838:	9c a5       	ldd	r25, Y+44	; 0x2c
     83a:	89 8d       	ldd	r24, Y+25	; 0x19
     83c:	98 17       	cp	r25, r24
     83e:	08 f0       	brcs	.+2      	; 0x842 <time_current_ms+0x1c0>
     840:	1d a6       	std	Y+45, r1	; 0x2d
     842:	9b a5       	ldd	r25, Y+43	; 0x2b
     844:	8d a5       	ldd	r24, Y+45	; 0x2d
     846:	98 2b       	or	r25, r24
     848:	9b a7       	std	Y+43, r25	; 0x2b
     84a:	9c a5       	ldd	r25, Y+44	; 0x2c
     84c:	99 8f       	std	Y+25, r25	; 0x19
     84e:	8a 85       	ldd	r24, Y+10	; 0x0a
     850:	9a 89       	ldd	r25, Y+18	; 0x12
     852:	89 0f       	add	r24, r25
     854:	8a 8f       	std	Y+26, r24	; 0x1a
     856:	8b a5       	ldd	r24, Y+43	; 0x2b
     858:	9a 8d       	ldd	r25, Y+26	; 0x1a
     85a:	89 0f       	add	r24, r25
     85c:	8a 8f       	std	Y+26, r24	; 0x1a
     85e:	2b 89       	ldd	r18, Y+19	; 0x13
     860:	3c 89       	ldd	r19, Y+20	; 0x14
     862:	4d 89       	ldd	r20, Y+21	; 0x15
     864:	5e 89       	ldd	r21, Y+22	; 0x16
     866:	6f 89       	ldd	r22, Y+23	; 0x17
     868:	78 8d       	ldd	r23, Y+24	; 0x18
     86a:	89 8d       	ldd	r24, Y+25	; 0x19
     86c:	9a 8d       	ldd	r25, Y+26	; 0x1a
     86e:	20 93 12 03 	sts	0x0312, r18
     872:	30 93 13 03 	sts	0x0313, r19
     876:	40 93 14 03 	sts	0x0314, r20
     87a:	50 93 15 03 	sts	0x0315, r21
     87e:	60 93 16 03 	sts	0x0316, r22
     882:	70 93 17 03 	sts	0x0317, r23
     886:	80 93 18 03 	sts	0x0318, r24
     88a:	90 93 19 03 	sts	0x0319, r25
    }
    return(time_ms);
     88e:	20 91 12 03 	lds	r18, 0x0312
     892:	30 91 13 03 	lds	r19, 0x0313
     896:	40 91 14 03 	lds	r20, 0x0314
     89a:	50 91 15 03 	lds	r21, 0x0315
     89e:	60 91 16 03 	lds	r22, 0x0316
     8a2:	70 91 17 03 	lds	r23, 0x0317
     8a6:	80 91 18 03 	lds	r24, 0x0318
     8aa:	90 91 19 03 	lds	r25, 0x0319
     8ae:	c9 01       	movw	r24, r18
}
     8b0:	ad 96       	adiw	r28, 0x2d	; 45
     8b2:	0f b6       	in	r0, 0x3f	; 63
     8b4:	f8 94       	cli
     8b6:	de bf       	out	0x3e, r29	; 62
     8b8:	0f be       	out	0x3f, r0	; 63
     8ba:	cd bf       	out	0x3d, r28	; 61
     8bc:	cf 91       	pop	r28
     8be:	df 91       	pop	r29
     8c0:	08 95       	ret

000008c2 <__vector_45>:

ISR(TIMER4_OVF_vect){
     8c2:	1f 92       	push	r1
     8c4:	0f 92       	push	r0
     8c6:	0f b6       	in	r0, 0x3f	; 63
     8c8:	0f 92       	push	r0
     8ca:	00 90 5b 00 	lds	r0, 0x005B
     8ce:	0f 92       	push	r0
     8d0:	11 24       	eor	r1, r1
     8d2:	2f 93       	push	r18
     8d4:	3f 93       	push	r19
     8d6:	4f 93       	push	r20
     8d8:	5f 93       	push	r21
     8da:	6f 93       	push	r22
     8dc:	7f 93       	push	r23
     8de:	8f 93       	push	r24
     8e0:	9f 93       	push	r25
     8e2:	af 93       	push	r26
     8e4:	bf 93       	push	r27
     8e6:	ef 93       	push	r30
     8e8:	ff 93       	push	r31
     8ea:	df 93       	push	r29
     8ec:	cf 93       	push	r28
     8ee:	00 d0       	rcall	.+0      	; 0x8f0 <__vector_45+0x2e>
     8f0:	0f 92       	push	r0
     8f2:	cd b7       	in	r28, 0x3d	; 61
     8f4:	de b7       	in	r29, 0x3e	; 62
    //1ms timer code:
    TCNT4 = 6;
     8f6:	e4 ea       	ldi	r30, 0xA4	; 164
     8f8:	f0 e0       	ldi	r31, 0x00	; 0
     8fa:	86 e0       	ldi	r24, 0x06	; 6
     8fc:	90 e0       	ldi	r25, 0x00	; 0
     8fe:	91 83       	std	Z+1, r25	; 0x01
     900:	80 83       	st	Z, r24
    time_current_ms(1);
     902:	81 e0       	ldi	r24, 0x01	; 1
     904:	90 e0       	ldi	r25, 0x00	; 0
     906:	0e 94 41 03 	call	0x682	; 0x682 <time_current_ms>
    //1ms motor code:
    static int motorpositieL = 0;//int aangemaakt om de positie van de linker motor te kunnen aansturen.
    motorpositieL = motorpositieL - DirectieMotorL;
     90a:	20 91 1c 03 	lds	r18, 0x031C
     90e:	30 91 1d 03 	lds	r19, 0x031D
     912:	80 91 0a 03 	lds	r24, 0x030A
     916:	90 91 0b 03 	lds	r25, 0x030B
     91a:	a9 01       	movw	r20, r18
     91c:	48 1b       	sub	r20, r24
     91e:	59 0b       	sbc	r21, r25
     920:	ca 01       	movw	r24, r20
     922:	90 93 1d 03 	sts	0x031D, r25
     926:	80 93 1c 03 	sts	0x031C, r24
    MotorTrackingPositieL = MotorTrackingPositieL + DirectieMotorL;
     92a:	20 91 0e 03 	lds	r18, 0x030E
     92e:	30 91 0f 03 	lds	r19, 0x030F
     932:	80 91 0a 03 	lds	r24, 0x030A
     936:	90 91 0b 03 	lds	r25, 0x030B
     93a:	82 0f       	add	r24, r18
     93c:	93 1f       	adc	r25, r19
     93e:	90 93 0f 03 	sts	0x030F, r25
     942:	80 93 0e 03 	sts	0x030E, r24
    static int motorpositieR = 0;//int aangemaakt om de positie van de linker motor te kunnen aansturen.
    motorpositieR = motorpositieR + DirectieMotorR;
     946:	20 91 1a 03 	lds	r18, 0x031A
     94a:	30 91 1b 03 	lds	r19, 0x031B
     94e:	80 91 0c 03 	lds	r24, 0x030C
     952:	90 91 0d 03 	lds	r25, 0x030D
     956:	82 0f       	add	r24, r18
     958:	93 1f       	adc	r25, r19
     95a:	90 93 1b 03 	sts	0x031B, r25
     95e:	80 93 1a 03 	sts	0x031A, r24
    MotorTrackingPositieR = MotorTrackingPositieR + DirectieMotorR;
     962:	20 91 10 03 	lds	r18, 0x0310
     966:	30 91 11 03 	lds	r19, 0x0311
     96a:	80 91 0c 03 	lds	r24, 0x030C
     96e:	90 91 0d 03 	lds	r25, 0x030D
     972:	82 0f       	add	r24, r18
     974:	93 1f       	adc	r25, r19
     976:	90 93 11 03 	sts	0x0311, r25
     97a:	80 93 10 03 	sts	0x0310, r24

    if(motorpositieL == -1)
     97e:	80 91 1c 03 	lds	r24, 0x031C
     982:	90 91 1d 03 	lds	r25, 0x031D
     986:	5f ef       	ldi	r21, 0xFF	; 255
     988:	8f 3f       	cpi	r24, 0xFF	; 255
     98a:	95 07       	cpc	r25, r21
     98c:	39 f4       	brne	.+14     	; 0x99c <__vector_45+0xda>
    {
        motorpositieL = 7;
     98e:	87 e0       	ldi	r24, 0x07	; 7
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	90 93 1d 03 	sts	0x031D, r25
     996:	80 93 1c 03 	sts	0x031C, r24
     99a:	0b c0       	rjmp	.+22     	; 0x9b2 <__vector_45+0xf0>
    }
    else if(motorpositieL == 8)
     99c:	80 91 1c 03 	lds	r24, 0x031C
     9a0:	90 91 1d 03 	lds	r25, 0x031D
     9a4:	88 30       	cpi	r24, 0x08	; 8
     9a6:	91 05       	cpc	r25, r1
     9a8:	21 f4       	brne	.+8      	; 0x9b2 <__vector_45+0xf0>
    {
        motorpositieL = 0;
     9aa:	10 92 1d 03 	sts	0x031D, r1
     9ae:	10 92 1c 03 	sts	0x031C, r1
    }
    if(motorpositieR == -1)
     9b2:	80 91 1a 03 	lds	r24, 0x031A
     9b6:	90 91 1b 03 	lds	r25, 0x031B
     9ba:	2f ef       	ldi	r18, 0xFF	; 255
     9bc:	8f 3f       	cpi	r24, 0xFF	; 255
     9be:	92 07       	cpc	r25, r18
     9c0:	39 f4       	brne	.+14     	; 0x9d0 <__vector_45+0x10e>
    {
        motorpositieR = 7;
     9c2:	87 e0       	ldi	r24, 0x07	; 7
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	90 93 1b 03 	sts	0x031B, r25
     9ca:	80 93 1a 03 	sts	0x031A, r24
     9ce:	0b c0       	rjmp	.+22     	; 0x9e6 <__vector_45+0x124>
    }
    else if(motorpositieR == 8)
     9d0:	80 91 1a 03 	lds	r24, 0x031A
     9d4:	90 91 1b 03 	lds	r25, 0x031B
     9d8:	88 30       	cpi	r24, 0x08	; 8
     9da:	91 05       	cpc	r25, r1
     9dc:	21 f4       	brne	.+8      	; 0x9e6 <__vector_45+0x124>
    {
        motorpositieR = 0;
     9de:	10 92 1b 03 	sts	0x031B, r1
     9e2:	10 92 1a 03 	sts	0x031A, r1
    }

    switch(motorpositieL)
     9e6:	40 91 1c 03 	lds	r20, 0x031C
     9ea:	50 91 1d 03 	lds	r21, 0x031D
     9ee:	5c 83       	std	Y+4, r21	; 0x04
     9f0:	4b 83       	std	Y+3, r20	; 0x03
     9f2:	8b 81       	ldd	r24, Y+3	; 0x03
     9f4:	9c 81       	ldd	r25, Y+4	; 0x04
     9f6:	84 30       	cpi	r24, 0x04	; 4
     9f8:	91 05       	cpc	r25, r1
     9fa:	c9 f1       	breq	.+114    	; 0xa6e <__vector_45+0x1ac>
     9fc:	4b 81       	ldd	r20, Y+3	; 0x03
     9fe:	5c 81       	ldd	r21, Y+4	; 0x04
     a00:	45 30       	cpi	r20, 0x05	; 5
     a02:	51 05       	cpc	r21, r1
     a04:	84 f4       	brge	.+32     	; 0xa26 <__vector_45+0x164>
     a06:	8b 81       	ldd	r24, Y+3	; 0x03
     a08:	9c 81       	ldd	r25, Y+4	; 0x04
     a0a:	82 30       	cpi	r24, 0x02	; 2
     a0c:	91 05       	cpc	r25, r1
     a0e:	29 f1       	breq	.+74     	; 0xa5a <__vector_45+0x198>
     a10:	4b 81       	ldd	r20, Y+3	; 0x03
     a12:	5c 81       	ldd	r21, Y+4	; 0x04
     a14:	43 30       	cpi	r20, 0x03	; 3
     a16:	51 05       	cpc	r21, r1
     a18:	2c f5       	brge	.+74     	; 0xa64 <__vector_45+0x1a2>
     a1a:	8b 81       	ldd	r24, Y+3	; 0x03
     a1c:	9c 81       	ldd	r25, Y+4	; 0x04
     a1e:	81 30       	cpi	r24, 0x01	; 1
     a20:	91 05       	cpc	r25, r1
     a22:	b1 f0       	breq	.+44     	; 0xa50 <__vector_45+0x18e>
     a24:	3c c0       	rjmp	.+120    	; 0xa9e <__vector_45+0x1dc>
     a26:	4b 81       	ldd	r20, Y+3	; 0x03
     a28:	5c 81       	ldd	r21, Y+4	; 0x04
     a2a:	46 30       	cpi	r20, 0x06	; 6
     a2c:	51 05       	cpc	r21, r1
     a2e:	49 f1       	breq	.+82     	; 0xa82 <__vector_45+0x1c0>
     a30:	8b 81       	ldd	r24, Y+3	; 0x03
     a32:	9c 81       	ldd	r25, Y+4	; 0x04
     a34:	86 30       	cpi	r24, 0x06	; 6
     a36:	91 05       	cpc	r25, r1
     a38:	fc f0       	brlt	.+62     	; 0xa78 <__vector_45+0x1b6>
     a3a:	4b 81       	ldd	r20, Y+3	; 0x03
     a3c:	5c 81       	ldd	r21, Y+4	; 0x04
     a3e:	47 30       	cpi	r20, 0x07	; 7
     a40:	51 05       	cpc	r21, r1
     a42:	21 f1       	breq	.+72     	; 0xa8c <__vector_45+0x1ca>
     a44:	8b 81       	ldd	r24, Y+3	; 0x03
     a46:	9c 81       	ldd	r25, Y+4	; 0x04
     a48:	88 30       	cpi	r24, 0x08	; 8
     a4a:	91 05       	cpc	r25, r1
     a4c:	21 f1       	breq	.+72     	; 0xa96 <__vector_45+0x1d4>
     a4e:	27 c0       	rjmp	.+78     	; 0xa9e <__vector_45+0x1dc>
    {
    case 1:
        PORTC = 0b00000101;
     a50:	e8 e2       	ldi	r30, 0x28	; 40
     a52:	f0 e0       	ldi	r31, 0x00	; 0
     a54:	85 e0       	ldi	r24, 0x05	; 5
     a56:	80 83       	st	Z, r24
     a58:	22 c0       	rjmp	.+68     	; 0xa9e <__vector_45+0x1dc>
        break;
    case 2:
        PORTC = 0b00000100;
     a5a:	e8 e2       	ldi	r30, 0x28	; 40
     a5c:	f0 e0       	ldi	r31, 0x00	; 0
     a5e:	84 e0       	ldi	r24, 0x04	; 4
     a60:	80 83       	st	Z, r24
     a62:	1d c0       	rjmp	.+58     	; 0xa9e <__vector_45+0x1dc>
        break;
    case 3:
        PORTC = 0b00010100;
     a64:	e8 e2       	ldi	r30, 0x28	; 40
     a66:	f0 e0       	ldi	r31, 0x00	; 0
     a68:	84 e1       	ldi	r24, 0x14	; 20
     a6a:	80 83       	st	Z, r24
     a6c:	18 c0       	rjmp	.+48     	; 0xa9e <__vector_45+0x1dc>
        break;
    case 4:
        PORTC = 0b00010000;
     a6e:	e8 e2       	ldi	r30, 0x28	; 40
     a70:	f0 e0       	ldi	r31, 0x00	; 0
     a72:	80 e1       	ldi	r24, 0x10	; 16
     a74:	80 83       	st	Z, r24
     a76:	13 c0       	rjmp	.+38     	; 0xa9e <__vector_45+0x1dc>
        break;
    case 5:
        PORTC = 0b01010000;
     a78:	e8 e2       	ldi	r30, 0x28	; 40
     a7a:	f0 e0       	ldi	r31, 0x00	; 0
     a7c:	80 e5       	ldi	r24, 0x50	; 80
     a7e:	80 83       	st	Z, r24
     a80:	0e c0       	rjmp	.+28     	; 0xa9e <__vector_45+0x1dc>
        break;
    case 6:
        PORTC = 0b01000000;
     a82:	e8 e2       	ldi	r30, 0x28	; 40
     a84:	f0 e0       	ldi	r31, 0x00	; 0
     a86:	80 e4       	ldi	r24, 0x40	; 64
     a88:	80 83       	st	Z, r24
     a8a:	09 c0       	rjmp	.+18     	; 0xa9e <__vector_45+0x1dc>
        break;
    case 7:
        PORTC = 0b01000001;
     a8c:	e8 e2       	ldi	r30, 0x28	; 40
     a8e:	f0 e0       	ldi	r31, 0x00	; 0
     a90:	81 e4       	ldi	r24, 0x41	; 65
     a92:	80 83       	st	Z, r24
     a94:	04 c0       	rjmp	.+8      	; 0xa9e <__vector_45+0x1dc>
        break;
    case 8:
        PORTC = 0b00000001;
     a96:	e8 e2       	ldi	r30, 0x28	; 40
     a98:	f0 e0       	ldi	r31, 0x00	; 0
     a9a:	81 e0       	ldi	r24, 0x01	; 1
     a9c:	80 83       	st	Z, r24
        break;
    }
    switch(motorpositieR)
     a9e:	40 91 1a 03 	lds	r20, 0x031A
     aa2:	50 91 1b 03 	lds	r21, 0x031B
     aa6:	5a 83       	std	Y+2, r21	; 0x02
     aa8:	49 83       	std	Y+1, r20	; 0x01
     aaa:	89 81       	ldd	r24, Y+1	; 0x01
     aac:	9a 81       	ldd	r25, Y+2	; 0x02
     aae:	84 30       	cpi	r24, 0x04	; 4
     ab0:	91 05       	cpc	r25, r1
     ab2:	c9 f1       	breq	.+114    	; 0xb26 <__vector_45+0x264>
     ab4:	49 81       	ldd	r20, Y+1	; 0x01
     ab6:	5a 81       	ldd	r21, Y+2	; 0x02
     ab8:	45 30       	cpi	r20, 0x05	; 5
     aba:	51 05       	cpc	r21, r1
     abc:	84 f4       	brge	.+32     	; 0xade <__vector_45+0x21c>
     abe:	89 81       	ldd	r24, Y+1	; 0x01
     ac0:	9a 81       	ldd	r25, Y+2	; 0x02
     ac2:	82 30       	cpi	r24, 0x02	; 2
     ac4:	91 05       	cpc	r25, r1
     ac6:	29 f1       	breq	.+74     	; 0xb12 <__vector_45+0x250>
     ac8:	49 81       	ldd	r20, Y+1	; 0x01
     aca:	5a 81       	ldd	r21, Y+2	; 0x02
     acc:	43 30       	cpi	r20, 0x03	; 3
     ace:	51 05       	cpc	r21, r1
     ad0:	2c f5       	brge	.+74     	; 0xb1c <__vector_45+0x25a>
     ad2:	89 81       	ldd	r24, Y+1	; 0x01
     ad4:	9a 81       	ldd	r25, Y+2	; 0x02
     ad6:	81 30       	cpi	r24, 0x01	; 1
     ad8:	91 05       	cpc	r25, r1
     ada:	b1 f0       	breq	.+44     	; 0xb08 <__vector_45+0x246>
     adc:	3c c0       	rjmp	.+120    	; 0xb56 <__vector_45+0x294>
     ade:	49 81       	ldd	r20, Y+1	; 0x01
     ae0:	5a 81       	ldd	r21, Y+2	; 0x02
     ae2:	46 30       	cpi	r20, 0x06	; 6
     ae4:	51 05       	cpc	r21, r1
     ae6:	49 f1       	breq	.+82     	; 0xb3a <__vector_45+0x278>
     ae8:	89 81       	ldd	r24, Y+1	; 0x01
     aea:	9a 81       	ldd	r25, Y+2	; 0x02
     aec:	86 30       	cpi	r24, 0x06	; 6
     aee:	91 05       	cpc	r25, r1
     af0:	fc f0       	brlt	.+62     	; 0xb30 <__vector_45+0x26e>
     af2:	49 81       	ldd	r20, Y+1	; 0x01
     af4:	5a 81       	ldd	r21, Y+2	; 0x02
     af6:	47 30       	cpi	r20, 0x07	; 7
     af8:	51 05       	cpc	r21, r1
     afa:	21 f1       	breq	.+72     	; 0xb44 <__vector_45+0x282>
     afc:	89 81       	ldd	r24, Y+1	; 0x01
     afe:	9a 81       	ldd	r25, Y+2	; 0x02
     b00:	88 30       	cpi	r24, 0x08	; 8
     b02:	91 05       	cpc	r25, r1
     b04:	21 f1       	breq	.+72     	; 0xb4e <__vector_45+0x28c>
     b06:	27 c0       	rjmp	.+78     	; 0xb56 <__vector_45+0x294>
    {
    case 1:
        PORTA = 0b00001010;
     b08:	e2 e2       	ldi	r30, 0x22	; 34
     b0a:	f0 e0       	ldi	r31, 0x00	; 0
     b0c:	8a e0       	ldi	r24, 0x0A	; 10
     b0e:	80 83       	st	Z, r24
     b10:	22 c0       	rjmp	.+68     	; 0xb56 <__vector_45+0x294>
        break;
    case 2:
        PORTA = 0b00000010;
     b12:	e2 e2       	ldi	r30, 0x22	; 34
     b14:	f0 e0       	ldi	r31, 0x00	; 0
     b16:	82 e0       	ldi	r24, 0x02	; 2
     b18:	80 83       	st	Z, r24
     b1a:	1d c0       	rjmp	.+58     	; 0xb56 <__vector_45+0x294>
        break;
    case 3:
        PORTA = 0b10000010;
     b1c:	e2 e2       	ldi	r30, 0x22	; 34
     b1e:	f0 e0       	ldi	r31, 0x00	; 0
     b20:	82 e8       	ldi	r24, 0x82	; 130
     b22:	80 83       	st	Z, r24
     b24:	18 c0       	rjmp	.+48     	; 0xb56 <__vector_45+0x294>
        break;
    case 4:
        PORTA = 0b10000000;
     b26:	e2 e2       	ldi	r30, 0x22	; 34
     b28:	f0 e0       	ldi	r31, 0x00	; 0
     b2a:	80 e8       	ldi	r24, 0x80	; 128
     b2c:	80 83       	st	Z, r24
     b2e:	13 c0       	rjmp	.+38     	; 0xb56 <__vector_45+0x294>
        break;
    case 5:
        PORTA = 0b10100000;
     b30:	e2 e2       	ldi	r30, 0x22	; 34
     b32:	f0 e0       	ldi	r31, 0x00	; 0
     b34:	80 ea       	ldi	r24, 0xA0	; 160
     b36:	80 83       	st	Z, r24
     b38:	0e c0       	rjmp	.+28     	; 0xb56 <__vector_45+0x294>
        break;
    case 6:
        PORTA = 0b00100000;
     b3a:	e2 e2       	ldi	r30, 0x22	; 34
     b3c:	f0 e0       	ldi	r31, 0x00	; 0
     b3e:	80 e2       	ldi	r24, 0x20	; 32
     b40:	80 83       	st	Z, r24
     b42:	09 c0       	rjmp	.+18     	; 0xb56 <__vector_45+0x294>
        break;
    case 7:
        PORTA = 0b00101000;
     b44:	e2 e2       	ldi	r30, 0x22	; 34
     b46:	f0 e0       	ldi	r31, 0x00	; 0
     b48:	88 e2       	ldi	r24, 0x28	; 40
     b4a:	80 83       	st	Z, r24
     b4c:	04 c0       	rjmp	.+8      	; 0xb56 <__vector_45+0x294>
        break;
    case 8:
        PORTA = 0b00001000;
     b4e:	e2 e2       	ldi	r30, 0x22	; 34
     b50:	f0 e0       	ldi	r31, 0x00	; 0
     b52:	88 e0       	ldi	r24, 0x08	; 8
     b54:	80 83       	st	Z, r24
        break;
    }
}
     b56:	0f 90       	pop	r0
     b58:	0f 90       	pop	r0
     b5a:	0f 90       	pop	r0
     b5c:	0f 90       	pop	r0
     b5e:	cf 91       	pop	r28
     b60:	df 91       	pop	r29
     b62:	ff 91       	pop	r31
     b64:	ef 91       	pop	r30
     b66:	bf 91       	pop	r27
     b68:	af 91       	pop	r26
     b6a:	9f 91       	pop	r25
     b6c:	8f 91       	pop	r24
     b6e:	7f 91       	pop	r23
     b70:	6f 91       	pop	r22
     b72:	5f 91       	pop	r21
     b74:	4f 91       	pop	r20
     b76:	3f 91       	pop	r19
     b78:	2f 91       	pop	r18
     b7a:	0f 90       	pop	r0
     b7c:	00 92 5b 00 	sts	0x005B, r0
     b80:	0f 90       	pop	r0
     b82:	0f be       	out	0x3f, r0	; 63
     b84:	0f 90       	pop	r0
     b86:	1f 90       	pop	r1
     b88:	18 95       	reti

00000b8a <PredefinedBocht>:

void PredefinedBocht(void)
{
     b8a:	df 93       	push	r29
     b8c:	cf 93       	push	r28
     b8e:	cd b7       	in	r28, 0x3d	; 61
     b90:	de b7       	in	r29, 0x3e	; 62
    MotorTrackingPositieL = 0;
     b92:	10 92 0f 03 	sts	0x030F, r1
     b96:	10 92 0e 03 	sts	0x030E, r1
    MotorTrackingPositieR = 0;
     b9a:	10 92 11 03 	sts	0x0311, r1
     b9e:	10 92 10 03 	sts	0x0310, r1
     ba2:	0e c0       	rjmp	.+28     	; 0xbc0 <PredefinedBocht+0x36>
    while(MotorTrackingPositieL < 528*8)
    {
        DirectieMotorL = 1;
     ba4:	81 e0       	ldi	r24, 0x01	; 1
     ba6:	90 e0       	ldi	r25, 0x00	; 0
     ba8:	90 93 0b 03 	sts	0x030B, r25
     bac:	80 93 0a 03 	sts	0x030A, r24
        DirectieMotorR = 1;
     bb0:	81 e0       	ldi	r24, 0x01	; 1
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	90 93 0d 03 	sts	0x030D, r25
     bb8:	80 93 0c 03 	sts	0x030C, r24
        obstakeldetectie();
     bbc:	0e 94 98 02 	call	0x530	; 0x530 <obstakeldetectie>

void PredefinedBocht(void)
{
    MotorTrackingPositieL = 0;
    MotorTrackingPositieR = 0;
    while(MotorTrackingPositieL < 528*8)
     bc0:	80 91 0e 03 	lds	r24, 0x030E
     bc4:	90 91 0f 03 	lds	r25, 0x030F
     bc8:	20 e1       	ldi	r18, 0x10	; 16
     bca:	80 38       	cpi	r24, 0x80	; 128
     bcc:	92 07       	cpc	r25, r18
     bce:	54 f3       	brlt	.-44     	; 0xba4 <PredefinedBocht+0x1a>
    {
        DirectieMotorL = 1;
        DirectieMotorR = 1;
        obstakeldetectie();
    }
    MotorTrackingPositieL = 0;
     bd0:	10 92 0f 03 	sts	0x030F, r1
     bd4:	10 92 0e 03 	sts	0x030E, r1
    MotorTrackingPositieR = 0;
     bd8:	10 92 11 03 	sts	0x0311, r1
     bdc:	10 92 10 03 	sts	0x0310, r1
     be0:	0e c0       	rjmp	.+28     	; 0xbfe <PredefinedBocht+0x74>
    while(MotorTrackingPositieL < 300*8)
    {
        DirectieMotorL = 1;
     be2:	81 e0       	ldi	r24, 0x01	; 1
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	90 93 0b 03 	sts	0x030B, r25
     bea:	80 93 0a 03 	sts	0x030A, r24
        DirectieMotorR = -1;
     bee:	8f ef       	ldi	r24, 0xFF	; 255
     bf0:	9f ef       	ldi	r25, 0xFF	; 255
     bf2:	90 93 0d 03 	sts	0x030D, r25
     bf6:	80 93 0c 03 	sts	0x030C, r24
        obstakeldetectie();
     bfa:	0e 94 98 02 	call	0x530	; 0x530 <obstakeldetectie>
        DirectieMotorR = 1;
        obstakeldetectie();
    }
    MotorTrackingPositieL = 0;
    MotorTrackingPositieR = 0;
    while(MotorTrackingPositieL < 300*8)
     bfe:	80 91 0e 03 	lds	r24, 0x030E
     c02:	90 91 0f 03 	lds	r25, 0x030F
     c06:	29 e0       	ldi	r18, 0x09	; 9
     c08:	80 36       	cpi	r24, 0x60	; 96
     c0a:	92 07       	cpc	r25, r18
     c0c:	54 f3       	brlt	.-44     	; 0xbe2 <PredefinedBocht+0x58>
    {
        DirectieMotorL = 1;
        DirectieMotorR = -1;
        obstakeldetectie();
    }
    MotorTrackingPositieL = 0;
     c0e:	10 92 0f 03 	sts	0x030F, r1
     c12:	10 92 0e 03 	sts	0x030E, r1
    MotorTrackingPositieR = 0;
     c16:	10 92 11 03 	sts	0x0311, r1
     c1a:	10 92 10 03 	sts	0x0310, r1
     c1e:	0e c0       	rjmp	.+28     	; 0xc3c <PredefinedBocht+0xb2>
    while(MotorTrackingPositieL < 1000*8)
    {
        DirectieMotorL = 1;
     c20:	81 e0       	ldi	r24, 0x01	; 1
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	90 93 0b 03 	sts	0x030B, r25
     c28:	80 93 0a 03 	sts	0x030A, r24
        DirectieMotorR = 1;
     c2c:	81 e0       	ldi	r24, 0x01	; 1
     c2e:	90 e0       	ldi	r25, 0x00	; 0
     c30:	90 93 0d 03 	sts	0x030D, r25
     c34:	80 93 0c 03 	sts	0x030C, r24
        obstakeldetectie();
     c38:	0e 94 98 02 	call	0x530	; 0x530 <obstakeldetectie>
        DirectieMotorR = -1;
        obstakeldetectie();
    }
    MotorTrackingPositieL = 0;
    MotorTrackingPositieR = 0;
    while(MotorTrackingPositieL < 1000*8)
     c3c:	80 91 0e 03 	lds	r24, 0x030E
     c40:	90 91 0f 03 	lds	r25, 0x030F
     c44:	2f e1       	ldi	r18, 0x1F	; 31
     c46:	80 34       	cpi	r24, 0x40	; 64
     c48:	92 07       	cpc	r25, r18
     c4a:	54 f3       	brlt	.-44     	; 0xc20 <PredefinedBocht+0x96>
    {
        DirectieMotorL = 1;
        DirectieMotorR = 1;
        obstakeldetectie();
    }
    MotorTrackingPositieL = 0;
     c4c:	10 92 0f 03 	sts	0x030F, r1
     c50:	10 92 0e 03 	sts	0x030E, r1
    MotorTrackingPositieR = 0;
     c54:	10 92 11 03 	sts	0x0311, r1
     c58:	10 92 10 03 	sts	0x0310, r1
     c5c:	0e c0       	rjmp	.+28     	; 0xc7a <PredefinedBocht+0xf0>
    while(MotorTrackingPositieL < 300*8)
    {
        DirectieMotorL = 1;
     c5e:	81 e0       	ldi	r24, 0x01	; 1
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	90 93 0b 03 	sts	0x030B, r25
     c66:	80 93 0a 03 	sts	0x030A, r24
        DirectieMotorR = -1;
     c6a:	8f ef       	ldi	r24, 0xFF	; 255
     c6c:	9f ef       	ldi	r25, 0xFF	; 255
     c6e:	90 93 0d 03 	sts	0x030D, r25
     c72:	80 93 0c 03 	sts	0x030C, r24
        obstakeldetectie();
     c76:	0e 94 98 02 	call	0x530	; 0x530 <obstakeldetectie>
        DirectieMotorR = 1;
        obstakeldetectie();
    }
    MotorTrackingPositieL = 0;
    MotorTrackingPositieR = 0;
    while(MotorTrackingPositieL < 300*8)
     c7a:	80 91 0e 03 	lds	r24, 0x030E
     c7e:	90 91 0f 03 	lds	r25, 0x030F
     c82:	29 e0       	ldi	r18, 0x09	; 9
     c84:	80 36       	cpi	r24, 0x60	; 96
     c86:	92 07       	cpc	r25, r18
     c88:	54 f3       	brlt	.-44     	; 0xc5e <PredefinedBocht+0xd4>
     c8a:	0e c0       	rjmp	.+28     	; 0xca8 <PredefinedBocht+0x11e>
        DirectieMotorR = -1;
        obstakeldetectie();
    }
        while(MotorTrackingPositieL < 828*8)
    {
        DirectieMotorL = 1;
     c8c:	81 e0       	ldi	r24, 0x01	; 1
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	90 93 0b 03 	sts	0x030B, r25
     c94:	80 93 0a 03 	sts	0x030A, r24
        DirectieMotorR = 1;
     c98:	81 e0       	ldi	r24, 0x01	; 1
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	90 93 0d 03 	sts	0x030D, r25
     ca0:	80 93 0c 03 	sts	0x030C, r24
        obstakeldetectie();
     ca4:	0e 94 98 02 	call	0x530	; 0x530 <obstakeldetectie>
    {
        DirectieMotorL = 1;
        DirectieMotorR = -1;
        obstakeldetectie();
    }
        while(MotorTrackingPositieL < 828*8)
     ca8:	80 91 0e 03 	lds	r24, 0x030E
     cac:	90 91 0f 03 	lds	r25, 0x030F
     cb0:	29 e1       	ldi	r18, 0x19	; 25
     cb2:	80 3e       	cpi	r24, 0xE0	; 224
     cb4:	92 07       	cpc	r25, r18
     cb6:	54 f3       	brlt	.-44     	; 0xc8c <PredefinedBocht+0x102>
    {
        DirectieMotorL = 1;
        DirectieMotorR = 1;
        obstakeldetectie();
    }
    MotorTrackingPositieL = 0;
     cb8:	10 92 0f 03 	sts	0x030F, r1
     cbc:	10 92 0e 03 	sts	0x030E, r1
    MotorTrackingPositieR = 0;
     cc0:	10 92 11 03 	sts	0x0311, r1
     cc4:	10 92 10 03 	sts	0x0310, r1
    DirectieMotorL = 0;
     cc8:	10 92 0b 03 	sts	0x030B, r1
     ccc:	10 92 0a 03 	sts	0x030A, r1
    DirectieMotorR = 0;
     cd0:	10 92 0d 03 	sts	0x030D, r1
     cd4:	10 92 0c 03 	sts	0x030C, r1
}
     cd8:	cf 91       	pop	r28
     cda:	df 91       	pop	r29
     cdc:	08 95       	ret

00000cde <agv_ultrasoon_init>:
volatile uint16_t agv_ultrasoon_voor_midden = 0;
volatile uint16_t agv_ultrasoon_voor_rechts = 0;
volatile uint8_t agv_ultrasoon_current_sensor = 2;

void agv_ultrasoon_init()
{
     cde:	df 93       	push	r29
     ce0:	cf 93       	push	r28
     ce2:	cd b7       	in	r28, 0x3d	; 61
     ce4:	de b7       	in	r29, 0x3e	; 62
    cli();
     ce6:	f8 94       	cli
    TCCR3A |= (1<<COM3A1) | (1<<WGM31);
     ce8:	a0 e9       	ldi	r26, 0x90	; 144
     cea:	b0 e0       	ldi	r27, 0x00	; 0
     cec:	e0 e9       	ldi	r30, 0x90	; 144
     cee:	f0 e0       	ldi	r31, 0x00	; 0
     cf0:	80 81       	ld	r24, Z
     cf2:	82 68       	ori	r24, 0x82	; 130
     cf4:	8c 93       	st	X, r24
    TCCR3B |= (1<<WGM33) | (1<<CS31) | (1<<WGM32);//wgm33 wgm32 wgm31
     cf6:	a1 e9       	ldi	r26, 0x91	; 145
     cf8:	b0 e0       	ldi	r27, 0x00	; 0
     cfa:	e1 e9       	ldi	r30, 0x91	; 145
     cfc:	f0 e0       	ldi	r31, 0x00	; 0
     cfe:	80 81       	ld	r24, Z
     d00:	8a 61       	ori	r24, 0x1A	; 26
     d02:	8c 93       	st	X, r24
    ICR3 = 32768;
     d04:	e6 e9       	ldi	r30, 0x96	; 150
     d06:	f0 e0       	ldi	r31, 0x00	; 0
     d08:	80 e0       	ldi	r24, 0x00	; 0
     d0a:	90 e8       	ldi	r25, 0x80	; 128
     d0c:	91 83       	std	Z+1, r25	; 0x01
     d0e:	80 83       	st	Z, r24
    OCR3A = 20;//10microsec
     d10:	e8 e9       	ldi	r30, 0x98	; 152
     d12:	f0 e0       	ldi	r31, 0x00	; 0
     d14:	84 e1       	ldi	r24, 0x14	; 20
     d16:	90 e0       	ldi	r25, 0x00	; 0
     d18:	91 83       	std	Z+1, r25	; 0x01
     d1a:	80 83       	st	Z, r24
    OCR3B = 5500;// (10microsec + 480microsec+ marge) *2
     d1c:	ea e9       	ldi	r30, 0x9A	; 154
     d1e:	f0 e0       	ldi	r31, 0x00	; 0
     d20:	8c e7       	ldi	r24, 0x7C	; 124
     d22:	95 e1       	ldi	r25, 0x15	; 21
     d24:	91 83       	std	Z+1, r25	; 0x01
     d26:	80 83       	st	Z, r24
    DDRE |= (1<<PE3);
     d28:	ad e2       	ldi	r26, 0x2D	; 45
     d2a:	b0 e0       	ldi	r27, 0x00	; 0
     d2c:	ed e2       	ldi	r30, 0x2D	; 45
     d2e:	f0 e0       	ldi	r31, 0x00	; 0
     d30:	80 81       	ld	r24, Z
     d32:	88 60       	ori	r24, 0x08	; 8
     d34:	8c 93       	st	X, r24
    TIMSK3 |= (1<<ICIE3) | (1<<OCIE3B);
     d36:	a1 e7       	ldi	r26, 0x71	; 113
     d38:	b0 e0       	ldi	r27, 0x00	; 0
     d3a:	e1 e7       	ldi	r30, 0x71	; 113
     d3c:	f0 e0       	ldi	r31, 0x00	; 0
     d3e:	80 81       	ld	r24, Z
     d40:	84 62       	ori	r24, 0x24	; 36
     d42:	8c 93       	st	X, r24
    //pin change interrupt:
    PCICR |= (1<<PCIE2);//enables pci 16 tot 23
     d44:	a8 e6       	ldi	r26, 0x68	; 104
     d46:	b0 e0       	ldi	r27, 0x00	; 0
     d48:	e8 e6       	ldi	r30, 0x68	; 104
     d4a:	f0 e0       	ldi	r31, 0x00	; 0
     d4c:	80 81       	ld	r24, Z
     d4e:	84 60       	ori	r24, 0x04	; 4
     d50:	8c 93       	st	X, r24
    sei();
     d52:	78 94       	sei
}
     d54:	cf 91       	pop	r28
     d56:	df 91       	pop	r29
     d58:	08 95       	ret

00000d5a <__vector_33>:

ISR(TIMER3_COMPB_vect)
{
     d5a:	1f 92       	push	r1
     d5c:	0f 92       	push	r0
     d5e:	0f b6       	in	r0, 0x3f	; 63
     d60:	0f 92       	push	r0
     d62:	00 90 5b 00 	lds	r0, 0x005B
     d66:	0f 92       	push	r0
     d68:	11 24       	eor	r1, r1
     d6a:	8f 93       	push	r24
     d6c:	af 93       	push	r26
     d6e:	bf 93       	push	r27
     d70:	ef 93       	push	r30
     d72:	ff 93       	push	r31
     d74:	df 93       	push	r29
     d76:	cf 93       	push	r28
     d78:	cd b7       	in	r28, 0x3d	; 61
     d7a:	de b7       	in	r29, 0x3e	; 62
    agv_ultrasoon_current_sensor = (agv_ultrasoon_current_sensor<<1);
     d7c:	80 91 00 02 	lds	r24, 0x0200
     d80:	88 0f       	add	r24, r24
     d82:	80 93 00 02 	sts	0x0200, r24
    if (agv_ultrasoon_current_sensor == (1<<6))//0b00100000
     d86:	80 91 00 02 	lds	r24, 0x0200
     d8a:	80 34       	cpi	r24, 0x40	; 64
     d8c:	19 f4       	brne	.+6      	; 0xd94 <__vector_33+0x3a>
    {
        agv_ultrasoon_current_sensor = 2;
     d8e:	82 e0       	ldi	r24, 0x02	; 2
     d90:	80 93 00 02 	sts	0x0200, r24

    }
    PCMSK2 = agv_ultrasoon_current_sensor;
     d94:	ed e6       	ldi	r30, 0x6D	; 109
     d96:	f0 e0       	ldi	r31, 0x00	; 0
     d98:	80 91 00 02 	lds	r24, 0x0200
     d9c:	80 83       	st	Z, r24
    //PORTA = agv_ultrasoon_current_sensor;
    TIMSK3 |= (1<<OCIE3B);
     d9e:	a1 e7       	ldi	r26, 0x71	; 113
     da0:	b0 e0       	ldi	r27, 0x00	; 0
     da2:	e1 e7       	ldi	r30, 0x71	; 113
     da4:	f0 e0       	ldi	r31, 0x00	; 0
     da6:	80 81       	ld	r24, Z
     da8:	84 60       	ori	r24, 0x04	; 4
     daa:	8c 93       	st	X, r24
}
     dac:	cf 91       	pop	r28
     dae:	df 91       	pop	r29
     db0:	ff 91       	pop	r31
     db2:	ef 91       	pop	r30
     db4:	bf 91       	pop	r27
     db6:	af 91       	pop	r26
     db8:	8f 91       	pop	r24
     dba:	0f 90       	pop	r0
     dbc:	00 92 5b 00 	sts	0x005B, r0
     dc0:	0f 90       	pop	r0
     dc2:	0f be       	out	0x3f, r0	; 63
     dc4:	0f 90       	pop	r0
     dc6:	1f 90       	pop	r1
     dc8:	18 95       	reti

00000dca <__vector_31>:

ISR(TIMER3_CAPT_vect)
{
     dca:	1f 92       	push	r1
     dcc:	0f 92       	push	r0
     dce:	0f b6       	in	r0, 0x3f	; 63
     dd0:	0f 92       	push	r0
     dd2:	00 90 5b 00 	lds	r0, 0x005B
     dd6:	0f 92       	push	r0
     dd8:	11 24       	eor	r1, r1
     dda:	2f 93       	push	r18
     ddc:	3f 93       	push	r19
     dde:	4f 93       	push	r20
     de0:	5f 93       	push	r21
     de2:	6f 93       	push	r22
     de4:	7f 93       	push	r23
     de6:	8f 93       	push	r24
     de8:	9f 93       	push	r25
     dea:	af 93       	push	r26
     dec:	bf 93       	push	r27
     dee:	ef 93       	push	r30
     df0:	ff 93       	push	r31
     df2:	df 93       	push	r29
     df4:	cf 93       	push	r28
     df6:	cd b7       	in	r28, 0x3d	; 61
     df8:	de b7       	in	r29, 0x3e	; 62
    //zet max naar sensorwaarde
    if(agv_ultrasoon_current_sensor == 0b00000010)
     dfa:	80 91 00 02 	lds	r24, 0x0200
     dfe:	82 30       	cpi	r24, 0x02	; 2
     e00:	41 f5       	brne	.+80     	; 0xe52 <__vector_31+0x88>
    {
        agv_ultrasoon_boom_rechts = (ICR3 - 4454)/4*0.0343;
     e02:	e6 e9       	ldi	r30, 0x96	; 150
     e04:	f0 e0       	ldi	r31, 0x00	; 0
     e06:	80 81       	ld	r24, Z
     e08:	91 81       	ldd	r25, Z+1	; 0x01
     e0a:	86 56       	subi	r24, 0x66	; 102
     e0c:	91 41       	sbci	r25, 0x11	; 17
     e0e:	96 95       	lsr	r25
     e10:	87 95       	ror	r24
     e12:	96 95       	lsr	r25
     e14:	87 95       	ror	r24
     e16:	cc 01       	movw	r24, r24
     e18:	a0 e0       	ldi	r26, 0x00	; 0
     e1a:	b0 e0       	ldi	r27, 0x00	; 0
     e1c:	bc 01       	movw	r22, r24
     e1e:	cd 01       	movw	r24, r26
     e20:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <__floatunsisf>
     e24:	dc 01       	movw	r26, r24
     e26:	cb 01       	movw	r24, r22
     e28:	bc 01       	movw	r22, r24
     e2a:	cd 01       	movw	r24, r26
     e2c:	28 e2       	ldi	r18, 0x28	; 40
     e2e:	3e e7       	ldi	r19, 0x7E	; 126
     e30:	4c e0       	ldi	r20, 0x0C	; 12
     e32:	5d e3       	ldi	r21, 0x3D	; 61
     e34:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__mulsf3>
     e38:	dc 01       	movw	r26, r24
     e3a:	cb 01       	movw	r24, r22
     e3c:	bc 01       	movw	r22, r24
     e3e:	cd 01       	movw	r24, r26
     e40:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     e44:	dc 01       	movw	r26, r24
     e46:	cb 01       	movw	r24, r22
     e48:	90 93 21 03 	sts	0x0321, r25
     e4c:	80 93 20 03 	sts	0x0320, r24
     e50:	af c0       	rjmp	.+350    	; 0xfb0 <__vector_31+0x1e6>
    }
    else if(agv_ultrasoon_current_sensor == 0b00000100)
     e52:	80 91 00 02 	lds	r24, 0x0200
     e56:	84 30       	cpi	r24, 0x04	; 4
     e58:	41 f5       	brne	.+80     	; 0xeaa <__vector_31+0xe0>
    {
        agv_ultrasoon_boom_links = (ICR3 - 4454)/4*0.0343;
     e5a:	e6 e9       	ldi	r30, 0x96	; 150
     e5c:	f0 e0       	ldi	r31, 0x00	; 0
     e5e:	80 81       	ld	r24, Z
     e60:	91 81       	ldd	r25, Z+1	; 0x01
     e62:	86 56       	subi	r24, 0x66	; 102
     e64:	91 41       	sbci	r25, 0x11	; 17
     e66:	96 95       	lsr	r25
     e68:	87 95       	ror	r24
     e6a:	96 95       	lsr	r25
     e6c:	87 95       	ror	r24
     e6e:	cc 01       	movw	r24, r24
     e70:	a0 e0       	ldi	r26, 0x00	; 0
     e72:	b0 e0       	ldi	r27, 0x00	; 0
     e74:	bc 01       	movw	r22, r24
     e76:	cd 01       	movw	r24, r26
     e78:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <__floatunsisf>
     e7c:	dc 01       	movw	r26, r24
     e7e:	cb 01       	movw	r24, r22
     e80:	bc 01       	movw	r22, r24
     e82:	cd 01       	movw	r24, r26
     e84:	28 e2       	ldi	r18, 0x28	; 40
     e86:	3e e7       	ldi	r19, 0x7E	; 126
     e88:	4c e0       	ldi	r20, 0x0C	; 12
     e8a:	5d e3       	ldi	r21, 0x3D	; 61
     e8c:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__mulsf3>
     e90:	dc 01       	movw	r26, r24
     e92:	cb 01       	movw	r24, r22
     e94:	bc 01       	movw	r22, r24
     e96:	cd 01       	movw	r24, r26
     e98:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     e9c:	dc 01       	movw	r26, r24
     e9e:	cb 01       	movw	r24, r22
     ea0:	90 93 1f 03 	sts	0x031F, r25
     ea4:	80 93 1e 03 	sts	0x031E, r24
     ea8:	83 c0       	rjmp	.+262    	; 0xfb0 <__vector_31+0x1e6>
    }
    else if(agv_ultrasoon_current_sensor == 0b00001000)
     eaa:	80 91 00 02 	lds	r24, 0x0200
     eae:	88 30       	cpi	r24, 0x08	; 8
     eb0:	41 f5       	brne	.+80     	; 0xf02 <__vector_31+0x138>
    {
        agv_ultrasoon_voor_rechts = (ICR3 - 4454)/4*0.0343;
     eb2:	e6 e9       	ldi	r30, 0x96	; 150
     eb4:	f0 e0       	ldi	r31, 0x00	; 0
     eb6:	80 81       	ld	r24, Z
     eb8:	91 81       	ldd	r25, Z+1	; 0x01
     eba:	86 56       	subi	r24, 0x66	; 102
     ebc:	91 41       	sbci	r25, 0x11	; 17
     ebe:	96 95       	lsr	r25
     ec0:	87 95       	ror	r24
     ec2:	96 95       	lsr	r25
     ec4:	87 95       	ror	r24
     ec6:	cc 01       	movw	r24, r24
     ec8:	a0 e0       	ldi	r26, 0x00	; 0
     eca:	b0 e0       	ldi	r27, 0x00	; 0
     ecc:	bc 01       	movw	r22, r24
     ece:	cd 01       	movw	r24, r26
     ed0:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <__floatunsisf>
     ed4:	dc 01       	movw	r26, r24
     ed6:	cb 01       	movw	r24, r22
     ed8:	bc 01       	movw	r22, r24
     eda:	cd 01       	movw	r24, r26
     edc:	28 e2       	ldi	r18, 0x28	; 40
     ede:	3e e7       	ldi	r19, 0x7E	; 126
     ee0:	4c e0       	ldi	r20, 0x0C	; 12
     ee2:	5d e3       	ldi	r21, 0x3D	; 61
     ee4:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__mulsf3>
     ee8:	dc 01       	movw	r26, r24
     eea:	cb 01       	movw	r24, r22
     eec:	bc 01       	movw	r22, r24
     eee:	cd 01       	movw	r24, r26
     ef0:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     ef4:	dc 01       	movw	r26, r24
     ef6:	cb 01       	movw	r24, r22
     ef8:	90 93 27 03 	sts	0x0327, r25
     efc:	80 93 26 03 	sts	0x0326, r24
     f00:	57 c0       	rjmp	.+174    	; 0xfb0 <__vector_31+0x1e6>
    }
    else if(agv_ultrasoon_current_sensor == 0b00010000)
     f02:	80 91 00 02 	lds	r24, 0x0200
     f06:	80 31       	cpi	r24, 0x10	; 16
     f08:	41 f5       	brne	.+80     	; 0xf5a <__vector_31+0x190>
    {
        agv_ultrasoon_voor_midden = (ICR3 - 4454)/4*0.0343;
     f0a:	e6 e9       	ldi	r30, 0x96	; 150
     f0c:	f0 e0       	ldi	r31, 0x00	; 0
     f0e:	80 81       	ld	r24, Z
     f10:	91 81       	ldd	r25, Z+1	; 0x01
     f12:	86 56       	subi	r24, 0x66	; 102
     f14:	91 41       	sbci	r25, 0x11	; 17
     f16:	96 95       	lsr	r25
     f18:	87 95       	ror	r24
     f1a:	96 95       	lsr	r25
     f1c:	87 95       	ror	r24
     f1e:	cc 01       	movw	r24, r24
     f20:	a0 e0       	ldi	r26, 0x00	; 0
     f22:	b0 e0       	ldi	r27, 0x00	; 0
     f24:	bc 01       	movw	r22, r24
     f26:	cd 01       	movw	r24, r26
     f28:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <__floatunsisf>
     f2c:	dc 01       	movw	r26, r24
     f2e:	cb 01       	movw	r24, r22
     f30:	bc 01       	movw	r22, r24
     f32:	cd 01       	movw	r24, r26
     f34:	28 e2       	ldi	r18, 0x28	; 40
     f36:	3e e7       	ldi	r19, 0x7E	; 126
     f38:	4c e0       	ldi	r20, 0x0C	; 12
     f3a:	5d e3       	ldi	r21, 0x3D	; 61
     f3c:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__mulsf3>
     f40:	dc 01       	movw	r26, r24
     f42:	cb 01       	movw	r24, r22
     f44:	bc 01       	movw	r22, r24
     f46:	cd 01       	movw	r24, r26
     f48:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     f4c:	dc 01       	movw	r26, r24
     f4e:	cb 01       	movw	r24, r22
     f50:	90 93 25 03 	sts	0x0325, r25
     f54:	80 93 24 03 	sts	0x0324, r24
     f58:	2b c0       	rjmp	.+86     	; 0xfb0 <__vector_31+0x1e6>
    }
    else if(agv_ultrasoon_current_sensor == 0b00100000)
     f5a:	80 91 00 02 	lds	r24, 0x0200
     f5e:	80 32       	cpi	r24, 0x20	; 32
     f60:	39 f5       	brne	.+78     	; 0xfb0 <__vector_31+0x1e6>
    {
        agv_ultrasoon_voor_links = (ICR3 - 4454)/4*0.0343;
     f62:	e6 e9       	ldi	r30, 0x96	; 150
     f64:	f0 e0       	ldi	r31, 0x00	; 0
     f66:	80 81       	ld	r24, Z
     f68:	91 81       	ldd	r25, Z+1	; 0x01
     f6a:	86 56       	subi	r24, 0x66	; 102
     f6c:	91 41       	sbci	r25, 0x11	; 17
     f6e:	96 95       	lsr	r25
     f70:	87 95       	ror	r24
     f72:	96 95       	lsr	r25
     f74:	87 95       	ror	r24
     f76:	cc 01       	movw	r24, r24
     f78:	a0 e0       	ldi	r26, 0x00	; 0
     f7a:	b0 e0       	ldi	r27, 0x00	; 0
     f7c:	bc 01       	movw	r22, r24
     f7e:	cd 01       	movw	r24, r26
     f80:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <__floatunsisf>
     f84:	dc 01       	movw	r26, r24
     f86:	cb 01       	movw	r24, r22
     f88:	bc 01       	movw	r22, r24
     f8a:	cd 01       	movw	r24, r26
     f8c:	28 e2       	ldi	r18, 0x28	; 40
     f8e:	3e e7       	ldi	r19, 0x7E	; 126
     f90:	4c e0       	ldi	r20, 0x0C	; 12
     f92:	5d e3       	ldi	r21, 0x3D	; 61
     f94:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__mulsf3>
     f98:	dc 01       	movw	r26, r24
     f9a:	cb 01       	movw	r24, r22
     f9c:	bc 01       	movw	r22, r24
     f9e:	cd 01       	movw	r24, r26
     fa0:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
     fa4:	dc 01       	movw	r26, r24
     fa6:	cb 01       	movw	r24, r22
     fa8:	90 93 23 03 	sts	0x0323, r25
     fac:	80 93 22 03 	sts	0x0322, r24
    }
    PCMSK2 = 0;
     fb0:	ed e6       	ldi	r30, 0x6D	; 109
     fb2:	f0 e0       	ldi	r31, 0x00	; 0
     fb4:	10 82       	st	Z, r1

}
     fb6:	cf 91       	pop	r28
     fb8:	df 91       	pop	r29
     fba:	ff 91       	pop	r31
     fbc:	ef 91       	pop	r30
     fbe:	bf 91       	pop	r27
     fc0:	af 91       	pop	r26
     fc2:	9f 91       	pop	r25
     fc4:	8f 91       	pop	r24
     fc6:	7f 91       	pop	r23
     fc8:	6f 91       	pop	r22
     fca:	5f 91       	pop	r21
     fcc:	4f 91       	pop	r20
     fce:	3f 91       	pop	r19
     fd0:	2f 91       	pop	r18
     fd2:	0f 90       	pop	r0
     fd4:	00 92 5b 00 	sts	0x005B, r0
     fd8:	0f 90       	pop	r0
     fda:	0f be       	out	0x3f, r0	; 63
     fdc:	0f 90       	pop	r0
     fde:	1f 90       	pop	r1
     fe0:	18 95       	reti

00000fe2 <__vector_11>:

ISR(PCINT2_vect)
{
     fe2:	1f 92       	push	r1
     fe4:	0f 92       	push	r0
     fe6:	0f b6       	in	r0, 0x3f	; 63
     fe8:	0f 92       	push	r0
     fea:	00 90 5b 00 	lds	r0, 0x005B
     fee:	0f 92       	push	r0
     ff0:	11 24       	eor	r1, r1
     ff2:	2f 93       	push	r18
     ff4:	3f 93       	push	r19
     ff6:	4f 93       	push	r20
     ff8:	5f 93       	push	r21
     ffa:	6f 93       	push	r22
     ffc:	7f 93       	push	r23
     ffe:	8f 93       	push	r24
    1000:	9f 93       	push	r25
    1002:	af 93       	push	r26
    1004:	bf 93       	push	r27
    1006:	ef 93       	push	r30
    1008:	ff 93       	push	r31
    100a:	df 93       	push	r29
    100c:	cf 93       	push	r28
    100e:	cd b7       	in	r28, 0x3d	; 61
    1010:	de b7       	in	r29, 0x3e	; 62
    if(agv_ultrasoon_current_sensor == 0b00000010)
    1012:	80 91 00 02 	lds	r24, 0x0200
    1016:	82 30       	cpi	r24, 0x02	; 2
    1018:	79 f5       	brne	.+94     	; 0x1078 <__vector_11+0x96>
    {
        agv_ultrasoon_boom_rechts = (TCNT3 - 4454)/4*0.0343;
    101a:	e4 e9       	ldi	r30, 0x94	; 148
    101c:	f0 e0       	ldi	r31, 0x00	; 0
    101e:	80 81       	ld	r24, Z
    1020:	91 81       	ldd	r25, Z+1	; 0x01
    1022:	86 56       	subi	r24, 0x66	; 102
    1024:	91 41       	sbci	r25, 0x11	; 17
    1026:	96 95       	lsr	r25
    1028:	87 95       	ror	r24
    102a:	96 95       	lsr	r25
    102c:	87 95       	ror	r24
    102e:	cc 01       	movw	r24, r24
    1030:	a0 e0       	ldi	r26, 0x00	; 0
    1032:	b0 e0       	ldi	r27, 0x00	; 0
    1034:	bc 01       	movw	r22, r24
    1036:	cd 01       	movw	r24, r26
    1038:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <__floatunsisf>
    103c:	dc 01       	movw	r26, r24
    103e:	cb 01       	movw	r24, r22
    1040:	bc 01       	movw	r22, r24
    1042:	cd 01       	movw	r24, r26
    1044:	28 e2       	ldi	r18, 0x28	; 40
    1046:	3e e7       	ldi	r19, 0x7E	; 126
    1048:	4c e0       	ldi	r20, 0x0C	; 12
    104a:	5d e3       	ldi	r21, 0x3D	; 61
    104c:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__mulsf3>
    1050:	dc 01       	movw	r26, r24
    1052:	cb 01       	movw	r24, r22
    1054:	bc 01       	movw	r22, r24
    1056:	cd 01       	movw	r24, r26
    1058:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
    105c:	dc 01       	movw	r26, r24
    105e:	cb 01       	movw	r24, r22
    1060:	90 93 21 03 	sts	0x0321, r25
    1064:	80 93 20 03 	sts	0x0320, r24
        PORTA &= ~(0b00000001);
    1068:	a2 e2       	ldi	r26, 0x22	; 34
    106a:	b0 e0       	ldi	r27, 0x00	; 0
    106c:	e2 e2       	ldi	r30, 0x22	; 34
    106e:	f0 e0       	ldi	r31, 0x00	; 0
    1070:	80 81       	ld	r24, Z
    1072:	8e 7f       	andi	r24, 0xFE	; 254
    1074:	8c 93       	st	X, r24
    1076:	cb c0       	rjmp	.+406    	; 0x120e <__vector_11+0x22c>
    }
    else if(agv_ultrasoon_current_sensor == 0b00000100)
    1078:	80 91 00 02 	lds	r24, 0x0200
    107c:	84 30       	cpi	r24, 0x04	; 4
    107e:	79 f5       	brne	.+94     	; 0x10de <__vector_11+0xfc>
    {
        agv_ultrasoon_boom_links = (TCNT3 - 4454)/4*0.0343;
    1080:	e4 e9       	ldi	r30, 0x94	; 148
    1082:	f0 e0       	ldi	r31, 0x00	; 0
    1084:	80 81       	ld	r24, Z
    1086:	91 81       	ldd	r25, Z+1	; 0x01
    1088:	86 56       	subi	r24, 0x66	; 102
    108a:	91 41       	sbci	r25, 0x11	; 17
    108c:	96 95       	lsr	r25
    108e:	87 95       	ror	r24
    1090:	96 95       	lsr	r25
    1092:	87 95       	ror	r24
    1094:	cc 01       	movw	r24, r24
    1096:	a0 e0       	ldi	r26, 0x00	; 0
    1098:	b0 e0       	ldi	r27, 0x00	; 0
    109a:	bc 01       	movw	r22, r24
    109c:	cd 01       	movw	r24, r26
    109e:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <__floatunsisf>
    10a2:	dc 01       	movw	r26, r24
    10a4:	cb 01       	movw	r24, r22
    10a6:	bc 01       	movw	r22, r24
    10a8:	cd 01       	movw	r24, r26
    10aa:	28 e2       	ldi	r18, 0x28	; 40
    10ac:	3e e7       	ldi	r19, 0x7E	; 126
    10ae:	4c e0       	ldi	r20, 0x0C	; 12
    10b0:	5d e3       	ldi	r21, 0x3D	; 61
    10b2:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__mulsf3>
    10b6:	dc 01       	movw	r26, r24
    10b8:	cb 01       	movw	r24, r22
    10ba:	bc 01       	movw	r22, r24
    10bc:	cd 01       	movw	r24, r26
    10be:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
    10c2:	dc 01       	movw	r26, r24
    10c4:	cb 01       	movw	r24, r22
    10c6:	90 93 1f 03 	sts	0x031F, r25
    10ca:	80 93 1e 03 	sts	0x031E, r24
        PORTA &= ~(0b00000010);
    10ce:	a2 e2       	ldi	r26, 0x22	; 34
    10d0:	b0 e0       	ldi	r27, 0x00	; 0
    10d2:	e2 e2       	ldi	r30, 0x22	; 34
    10d4:	f0 e0       	ldi	r31, 0x00	; 0
    10d6:	80 81       	ld	r24, Z
    10d8:	8d 7f       	andi	r24, 0xFD	; 253
    10da:	8c 93       	st	X, r24
    10dc:	98 c0       	rjmp	.+304    	; 0x120e <__vector_11+0x22c>
    }
    else if(agv_ultrasoon_current_sensor == 0b00001000)
    10de:	80 91 00 02 	lds	r24, 0x0200
    10e2:	88 30       	cpi	r24, 0x08	; 8
    10e4:	79 f5       	brne	.+94     	; 0x1144 <__vector_11+0x162>
    {
        agv_ultrasoon_voor_rechts = (TCNT3 - 4454)/4*0.0343;
    10e6:	e4 e9       	ldi	r30, 0x94	; 148
    10e8:	f0 e0       	ldi	r31, 0x00	; 0
    10ea:	80 81       	ld	r24, Z
    10ec:	91 81       	ldd	r25, Z+1	; 0x01
    10ee:	86 56       	subi	r24, 0x66	; 102
    10f0:	91 41       	sbci	r25, 0x11	; 17
    10f2:	96 95       	lsr	r25
    10f4:	87 95       	ror	r24
    10f6:	96 95       	lsr	r25
    10f8:	87 95       	ror	r24
    10fa:	cc 01       	movw	r24, r24
    10fc:	a0 e0       	ldi	r26, 0x00	; 0
    10fe:	b0 e0       	ldi	r27, 0x00	; 0
    1100:	bc 01       	movw	r22, r24
    1102:	cd 01       	movw	r24, r26
    1104:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <__floatunsisf>
    1108:	dc 01       	movw	r26, r24
    110a:	cb 01       	movw	r24, r22
    110c:	bc 01       	movw	r22, r24
    110e:	cd 01       	movw	r24, r26
    1110:	28 e2       	ldi	r18, 0x28	; 40
    1112:	3e e7       	ldi	r19, 0x7E	; 126
    1114:	4c e0       	ldi	r20, 0x0C	; 12
    1116:	5d e3       	ldi	r21, 0x3D	; 61
    1118:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__mulsf3>
    111c:	dc 01       	movw	r26, r24
    111e:	cb 01       	movw	r24, r22
    1120:	bc 01       	movw	r22, r24
    1122:	cd 01       	movw	r24, r26
    1124:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
    1128:	dc 01       	movw	r26, r24
    112a:	cb 01       	movw	r24, r22
    112c:	90 93 27 03 	sts	0x0327, r25
    1130:	80 93 26 03 	sts	0x0326, r24
        PORTA &= ~(0b0000100);
    1134:	a2 e2       	ldi	r26, 0x22	; 34
    1136:	b0 e0       	ldi	r27, 0x00	; 0
    1138:	e2 e2       	ldi	r30, 0x22	; 34
    113a:	f0 e0       	ldi	r31, 0x00	; 0
    113c:	80 81       	ld	r24, Z
    113e:	8b 7f       	andi	r24, 0xFB	; 251
    1140:	8c 93       	st	X, r24
    1142:	65 c0       	rjmp	.+202    	; 0x120e <__vector_11+0x22c>
    }
    else if(agv_ultrasoon_current_sensor == 0b00010000)
    1144:	80 91 00 02 	lds	r24, 0x0200
    1148:	80 31       	cpi	r24, 0x10	; 16
    114a:	79 f5       	brne	.+94     	; 0x11aa <__vector_11+0x1c8>
    {
        agv_ultrasoon_voor_midden = (TCNT3 - 4454)/4*0.0343;
    114c:	e4 e9       	ldi	r30, 0x94	; 148
    114e:	f0 e0       	ldi	r31, 0x00	; 0
    1150:	80 81       	ld	r24, Z
    1152:	91 81       	ldd	r25, Z+1	; 0x01
    1154:	86 56       	subi	r24, 0x66	; 102
    1156:	91 41       	sbci	r25, 0x11	; 17
    1158:	96 95       	lsr	r25
    115a:	87 95       	ror	r24
    115c:	96 95       	lsr	r25
    115e:	87 95       	ror	r24
    1160:	cc 01       	movw	r24, r24
    1162:	a0 e0       	ldi	r26, 0x00	; 0
    1164:	b0 e0       	ldi	r27, 0x00	; 0
    1166:	bc 01       	movw	r22, r24
    1168:	cd 01       	movw	r24, r26
    116a:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <__floatunsisf>
    116e:	dc 01       	movw	r26, r24
    1170:	cb 01       	movw	r24, r22
    1172:	bc 01       	movw	r22, r24
    1174:	cd 01       	movw	r24, r26
    1176:	28 e2       	ldi	r18, 0x28	; 40
    1178:	3e e7       	ldi	r19, 0x7E	; 126
    117a:	4c e0       	ldi	r20, 0x0C	; 12
    117c:	5d e3       	ldi	r21, 0x3D	; 61
    117e:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__mulsf3>
    1182:	dc 01       	movw	r26, r24
    1184:	cb 01       	movw	r24, r22
    1186:	bc 01       	movw	r22, r24
    1188:	cd 01       	movw	r24, r26
    118a:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
    118e:	dc 01       	movw	r26, r24
    1190:	cb 01       	movw	r24, r22
    1192:	90 93 25 03 	sts	0x0325, r25
    1196:	80 93 24 03 	sts	0x0324, r24
        PORTA &= ~(0b00001000);
    119a:	a2 e2       	ldi	r26, 0x22	; 34
    119c:	b0 e0       	ldi	r27, 0x00	; 0
    119e:	e2 e2       	ldi	r30, 0x22	; 34
    11a0:	f0 e0       	ldi	r31, 0x00	; 0
    11a2:	80 81       	ld	r24, Z
    11a4:	87 7f       	andi	r24, 0xF7	; 247
    11a6:	8c 93       	st	X, r24
    11a8:	32 c0       	rjmp	.+100    	; 0x120e <__vector_11+0x22c>
    }
    else if(agv_ultrasoon_current_sensor == 0b00100000)
    11aa:	80 91 00 02 	lds	r24, 0x0200
    11ae:	80 32       	cpi	r24, 0x20	; 32
    11b0:	71 f5       	brne	.+92     	; 0x120e <__vector_11+0x22c>
    {
        agv_ultrasoon_voor_links = (TCNT3 - 4454)/4*0.0343;
    11b2:	e4 e9       	ldi	r30, 0x94	; 148
    11b4:	f0 e0       	ldi	r31, 0x00	; 0
    11b6:	80 81       	ld	r24, Z
    11b8:	91 81       	ldd	r25, Z+1	; 0x01
    11ba:	86 56       	subi	r24, 0x66	; 102
    11bc:	91 41       	sbci	r25, 0x11	; 17
    11be:	96 95       	lsr	r25
    11c0:	87 95       	ror	r24
    11c2:	96 95       	lsr	r25
    11c4:	87 95       	ror	r24
    11c6:	cc 01       	movw	r24, r24
    11c8:	a0 e0       	ldi	r26, 0x00	; 0
    11ca:	b0 e0       	ldi	r27, 0x00	; 0
    11cc:	bc 01       	movw	r22, r24
    11ce:	cd 01       	movw	r24, r26
    11d0:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <__floatunsisf>
    11d4:	dc 01       	movw	r26, r24
    11d6:	cb 01       	movw	r24, r22
    11d8:	bc 01       	movw	r22, r24
    11da:	cd 01       	movw	r24, r26
    11dc:	28 e2       	ldi	r18, 0x28	; 40
    11de:	3e e7       	ldi	r19, 0x7E	; 126
    11e0:	4c e0       	ldi	r20, 0x0C	; 12
    11e2:	5d e3       	ldi	r21, 0x3D	; 61
    11e4:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__mulsf3>
    11e8:	dc 01       	movw	r26, r24
    11ea:	cb 01       	movw	r24, r22
    11ec:	bc 01       	movw	r22, r24
    11ee:	cd 01       	movw	r24, r26
    11f0:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__fixunssfsi>
    11f4:	dc 01       	movw	r26, r24
    11f6:	cb 01       	movw	r24, r22
    11f8:	90 93 23 03 	sts	0x0323, r25
    11fc:	80 93 22 03 	sts	0x0322, r24
        PORTA &= ~(0b00010000);
    1200:	a2 e2       	ldi	r26, 0x22	; 34
    1202:	b0 e0       	ldi	r27, 0x00	; 0
    1204:	e2 e2       	ldi	r30, 0x22	; 34
    1206:	f0 e0       	ldi	r31, 0x00	; 0
    1208:	80 81       	ld	r24, Z
    120a:	8f 7e       	andi	r24, 0xEF	; 239
    120c:	8c 93       	st	X, r24
    }
    //check welke sensor en schrijf timer3 waarde naar sensorwaarde
    TIMSK3 &= ~(1<<ICIE3);
    120e:	a1 e7       	ldi	r26, 0x71	; 113
    1210:	b0 e0       	ldi	r27, 0x00	; 0
    1212:	e1 e7       	ldi	r30, 0x71	; 113
    1214:	f0 e0       	ldi	r31, 0x00	; 0
    1216:	80 81       	ld	r24, Z
    1218:	8f 7d       	andi	r24, 0xDF	; 223
    121a:	8c 93       	st	X, r24
    //zet timer3 overflow flag uit
    PCMSK2 = 0;
    121c:	ed e6       	ldi	r30, 0x6D	; 109
    121e:	f0 e0       	ldi	r31, 0x00	; 0
    1220:	10 82       	st	Z, r1
}
    1222:	cf 91       	pop	r28
    1224:	df 91       	pop	r29
    1226:	ff 91       	pop	r31
    1228:	ef 91       	pop	r30
    122a:	bf 91       	pop	r27
    122c:	af 91       	pop	r26
    122e:	9f 91       	pop	r25
    1230:	8f 91       	pop	r24
    1232:	7f 91       	pop	r23
    1234:	6f 91       	pop	r22
    1236:	5f 91       	pop	r21
    1238:	4f 91       	pop	r20
    123a:	3f 91       	pop	r19
    123c:	2f 91       	pop	r18
    123e:	0f 90       	pop	r0
    1240:	00 92 5b 00 	sts	0x005B, r0
    1244:	0f 90       	pop	r0
    1246:	0f be       	out	0x3f, r0	; 63
    1248:	0f 90       	pop	r0
    124a:	1f 90       	pop	r1
    124c:	18 95       	reti

0000124e <volgmodus>:
#include <avr/io.h>
#include <avr/delay.h>
#include "agv_ultrasoon.h"
#include "agv_motor.h"
int volgmodus(void)
{
    124e:	df 93       	push	r29
    1250:	cf 93       	push	r28
    1252:	0f 92       	push	r0
    1254:	0f 92       	push	r0
    1256:	cd b7       	in	r28, 0x3d	; 61
    1258:	de b7       	in	r29, 0x3e	; 62
    if (agv_ultrasoon_voor_links <= 20)
    125a:	80 91 22 03 	lds	r24, 0x0322
    125e:	90 91 23 03 	lds	r25, 0x0323
    1262:	85 31       	cpi	r24, 0x15	; 21
    1264:	91 05       	cpc	r25, r1
    1266:	58 f4       	brcc	.+22     	; 0x127e <volgmodus+0x30>
    {
        DirectieMotorL = 0;
    1268:	10 92 0b 03 	sts	0x030B, r1
    126c:	10 92 0a 03 	sts	0x030A, r1
        DirectieMotorR = 1;
    1270:	81 e0       	ldi	r24, 0x01	; 1
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	90 93 0d 03 	sts	0x030D, r25
    1278:	80 93 0c 03 	sts	0x030C, r24
    127c:	2e c0       	rjmp	.+92     	; 0x12da <volgmodus+0x8c>

    }
    else if (agv_ultrasoon_voor_rechts <= 20)
    127e:	80 91 26 03 	lds	r24, 0x0326
    1282:	90 91 27 03 	lds	r25, 0x0327
    1286:	85 31       	cpi	r24, 0x15	; 21
    1288:	91 05       	cpc	r25, r1
    128a:	58 f4       	brcc	.+22     	; 0x12a2 <volgmodus+0x54>
    {
        DirectieMotorL = 1;
    128c:	81 e0       	ldi	r24, 0x01	; 1
    128e:	90 e0       	ldi	r25, 0x00	; 0
    1290:	90 93 0b 03 	sts	0x030B, r25
    1294:	80 93 0a 03 	sts	0x030A, r24
        DirectieMotorR = 0;
    1298:	10 92 0d 03 	sts	0x030D, r1
    129c:	10 92 0c 03 	sts	0x030C, r1
    12a0:	1c c0       	rjmp	.+56     	; 0x12da <volgmodus+0x8c>

    }
    else if (agv_ultrasoon_voor_midden <= 20)
    12a2:	80 91 24 03 	lds	r24, 0x0324
    12a6:	90 91 25 03 	lds	r25, 0x0325
    12aa:	85 31       	cpi	r24, 0x15	; 21
    12ac:	91 05       	cpc	r25, r1
    12ae:	68 f4       	brcc	.+26     	; 0x12ca <volgmodus+0x7c>
    {
        DirectieMotorL = 1;
    12b0:	81 e0       	ldi	r24, 0x01	; 1
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	90 93 0b 03 	sts	0x030B, r25
    12b8:	80 93 0a 03 	sts	0x030A, r24
        DirectieMotorR = 1;
    12bc:	81 e0       	ldi	r24, 0x01	; 1
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	90 93 0d 03 	sts	0x030D, r25
    12c4:	80 93 0c 03 	sts	0x030C, r24
    12c8:	08 c0       	rjmp	.+16     	; 0x12da <volgmodus+0x8c>
    }
    else
    {
        DirectieMotorL = 0;
    12ca:	10 92 0b 03 	sts	0x030B, r1
    12ce:	10 92 0a 03 	sts	0x030A, r1
        DirectieMotorR = 0;
    12d2:	10 92 0d 03 	sts	0x030D, r1
    12d6:	10 92 0c 03 	sts	0x030C, r1
    }
}
    12da:	0f 90       	pop	r0
    12dc:	0f 90       	pop	r0
    12de:	cf 91       	pop	r28
    12e0:	df 91       	pop	r29
    12e2:	08 95       	ret

000012e4 <rijden>:
#define margeminder 45
int firstL = 0;
int firstR = 0;

void rijden(int tv, int ta)    //tv = TOFvoorwaarde
{                             //ta = TOFachterwaarde
    12e4:	df 93       	push	r29
    12e6:	cf 93       	push	r28
    12e8:	00 d0       	rcall	.+0      	; 0x12ea <rijden+0x6>
    12ea:	0f 92       	push	r0
    12ec:	cd b7       	in	r28, 0x3d	; 61
    12ee:	de b7       	in	r29, 0x3e	; 62
    12f0:	9a 83       	std	Y+2, r25	; 0x02
    12f2:	89 83       	std	Y+1, r24	; 0x01
    12f4:	7c 83       	std	Y+4, r23	; 0x04
    12f6:	6b 83       	std	Y+3, r22	; 0x03
    if((tv > margemeer) && (ta > margemeer)){
    12f8:	89 81       	ldd	r24, Y+1	; 0x01
    12fa:	9a 81       	ldd	r25, Y+2	; 0x02
    12fc:	88 33       	cpi	r24, 0x38	; 56
    12fe:	91 05       	cpc	r25, r1
    1300:	a4 f1       	brlt	.+104    	; 0x136a <rijden+0x86>
    1302:	8b 81       	ldd	r24, Y+3	; 0x03
    1304:	9c 81       	ldd	r25, Y+4	; 0x04
    1306:	88 33       	cpi	r24, 0x38	; 56
    1308:	91 05       	cpc	r25, r1
    130a:	7c f1       	brlt	.+94     	; 0x136a <rijden+0x86>
        //motor langzaam rechts
        if (firstL == 0){
    130c:	80 91 28 03 	lds	r24, 0x0328
    1310:	90 91 29 03 	lds	r25, 0x0329
    1314:	00 97       	sbiw	r24, 0x00	; 0
    1316:	51 f4       	brne	.+20     	; 0x132c <rijden+0x48>
            MotorTrackingPositieL = 0;
    1318:	10 92 0f 03 	sts	0x030F, r1
    131c:	10 92 0e 03 	sts	0x030E, r1
            firstL = 1;
    1320:	81 e0       	ldi	r24, 0x01	; 1
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	90 93 29 03 	sts	0x0329, r25
    1328:	80 93 28 03 	sts	0x0328, r24
        }
        if (MotorTrackingPositieL <4){
    132c:	80 91 0e 03 	lds	r24, 0x030E
    1330:	90 91 0f 03 	lds	r25, 0x030F
    1334:	84 30       	cpi	r24, 0x04	; 4
    1336:	91 05       	cpc	r25, r1
    1338:	5c f4       	brge	.+22     	; 0x1350 <rijden+0x6c>
        DirectieMotorL = 1;
    133a:	81 e0       	ldi	r24, 0x01	; 1
    133c:	90 e0       	ldi	r25, 0x00	; 0
    133e:	90 93 0b 03 	sts	0x030B, r25
    1342:	80 93 0a 03 	sts	0x030A, r24
        DirectieMotorR = 0;
    1346:	10 92 0d 03 	sts	0x030D, r1
    134a:	10 92 0c 03 	sts	0x030C, r1
    134e:	87 c0       	rjmp	.+270    	; 0x145e <rijden+0x17a>
        }
        else {
            DirectieMotorL = 1;
    1350:	81 e0       	ldi	r24, 0x01	; 1
    1352:	90 e0       	ldi	r25, 0x00	; 0
    1354:	90 93 0b 03 	sts	0x030B, r25
    1358:	80 93 0a 03 	sts	0x030A, r24
            DirectieMotorR = 1;
    135c:	81 e0       	ldi	r24, 0x01	; 1
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	90 93 0d 03 	sts	0x030D, r25
    1364:	80 93 0c 03 	sts	0x030C, r24
    1368:	7a c0       	rjmp	.+244    	; 0x145e <rijden+0x17a>
        }
    }

    else if(tv < margeminder && ta < margeminder){
    136a:	89 81       	ldd	r24, Y+1	; 0x01
    136c:	9a 81       	ldd	r25, Y+2	; 0x02
    136e:	8d 32       	cpi	r24, 0x2D	; 45
    1370:	91 05       	cpc	r25, r1
    1372:	a4 f5       	brge	.+104    	; 0x13dc <rijden+0xf8>
    1374:	8b 81       	ldd	r24, Y+3	; 0x03
    1376:	9c 81       	ldd	r25, Y+4	; 0x04
    1378:	8d 32       	cpi	r24, 0x2D	; 45
    137a:	91 05       	cpc	r25, r1
    137c:	7c f5       	brge	.+94     	; 0x13dc <rijden+0xf8>
        //motor langzaam links
        if (firstR == 0){
    137e:	80 91 2a 03 	lds	r24, 0x032A
    1382:	90 91 2b 03 	lds	r25, 0x032B
    1386:	00 97       	sbiw	r24, 0x00	; 0
    1388:	51 f4       	brne	.+20     	; 0x139e <rijden+0xba>
            MotorTrackingPositieR = 0;
    138a:	10 92 11 03 	sts	0x0311, r1
    138e:	10 92 10 03 	sts	0x0310, r1
            firstR = 1;
    1392:	81 e0       	ldi	r24, 0x01	; 1
    1394:	90 e0       	ldi	r25, 0x00	; 0
    1396:	90 93 2b 03 	sts	0x032B, r25
    139a:	80 93 2a 03 	sts	0x032A, r24
        }
        if (MotorTrackingPositieR <4){
    139e:	80 91 10 03 	lds	r24, 0x0310
    13a2:	90 91 11 03 	lds	r25, 0x0311
    13a6:	84 30       	cpi	r24, 0x04	; 4
    13a8:	91 05       	cpc	r25, r1
    13aa:	5c f4       	brge	.+22     	; 0x13c2 <rijden+0xde>
        DirectieMotorL = 0;
    13ac:	10 92 0b 03 	sts	0x030B, r1
    13b0:	10 92 0a 03 	sts	0x030A, r1
        DirectieMotorR = 1;
    13b4:	81 e0       	ldi	r24, 0x01	; 1
    13b6:	90 e0       	ldi	r25, 0x00	; 0
    13b8:	90 93 0d 03 	sts	0x030D, r25
    13bc:	80 93 0c 03 	sts	0x030C, r24
    13c0:	4e c0       	rjmp	.+156    	; 0x145e <rijden+0x17a>
        }
        else {
            DirectieMotorL = 1;
    13c2:	81 e0       	ldi	r24, 0x01	; 1
    13c4:	90 e0       	ldi	r25, 0x00	; 0
    13c6:	90 93 0b 03 	sts	0x030B, r25
    13ca:	80 93 0a 03 	sts	0x030A, r24
            DirectieMotorR = 1;
    13ce:	81 e0       	ldi	r24, 0x01	; 1
    13d0:	90 e0       	ldi	r25, 0x00	; 0
    13d2:	90 93 0d 03 	sts	0x030D, r25
    13d6:	80 93 0c 03 	sts	0x030C, r24
    13da:	41 c0       	rjmp	.+130    	; 0x145e <rijden+0x17a>
        }
    }

    else if(tv == ta){
    13dc:	29 81       	ldd	r18, Y+1	; 0x01
    13de:	3a 81       	ldd	r19, Y+2	; 0x02
    13e0:	8b 81       	ldd	r24, Y+3	; 0x03
    13e2:	9c 81       	ldd	r25, Y+4	; 0x04
    13e4:	28 17       	cp	r18, r24
    13e6:	39 07       	cpc	r19, r25
    13e8:	69 f4       	brne	.+26     	; 0x1404 <rijden+0x120>
        //rechtdoorrijden
        DirectieMotorL = 1;
    13ea:	81 e0       	ldi	r24, 0x01	; 1
    13ec:	90 e0       	ldi	r25, 0x00	; 0
    13ee:	90 93 0b 03 	sts	0x030B, r25
    13f2:	80 93 0a 03 	sts	0x030A, r24
        DirectieMotorR = 1;
    13f6:	81 e0       	ldi	r24, 0x01	; 1
    13f8:	90 e0       	ldi	r25, 0x00	; 0
    13fa:	90 93 0d 03 	sts	0x030D, r25
    13fe:	80 93 0c 03 	sts	0x030C, r24
    1402:	2d c0       	rjmp	.+90     	; 0x145e <rijden+0x17a>
    }
    else if(tv > ta){
    1404:	29 81       	ldd	r18, Y+1	; 0x01
    1406:	3a 81       	ldd	r19, Y+2	; 0x02
    1408:	8b 81       	ldd	r24, Y+3	; 0x03
    140a:	9c 81       	ldd	r25, Y+4	; 0x04
    140c:	82 17       	cp	r24, r18
    140e:	93 07       	cpc	r25, r19
    1410:	84 f4       	brge	.+32     	; 0x1432 <rijden+0x14e>
        if(tv >= afstandmuur){
    1412:	89 81       	ldd	r24, Y+1	; 0x01
    1414:	9a 81       	ldd	r25, Y+2	; 0x02
    1416:	82 33       	cpi	r24, 0x32	; 50
    1418:	91 05       	cpc	r25, r1
    141a:	0c f1       	brlt	.+66     	; 0x145e <rijden+0x17a>
            //motorheel rechts
            DirectieMotorL = 1;
    141c:	81 e0       	ldi	r24, 0x01	; 1
    141e:	90 e0       	ldi	r25, 0x00	; 0
    1420:	90 93 0b 03 	sts	0x030B, r25
    1424:	80 93 0a 03 	sts	0x030A, r24
            DirectieMotorR = 0;
    1428:	10 92 0d 03 	sts	0x030D, r1
    142c:	10 92 0c 03 	sts	0x030C, r1
    1430:	16 c0       	rjmp	.+44     	; 0x145e <rijden+0x17a>
        }
    }
    else if(tv < ta){
    1432:	29 81       	ldd	r18, Y+1	; 0x01
    1434:	3a 81       	ldd	r19, Y+2	; 0x02
    1436:	8b 81       	ldd	r24, Y+3	; 0x03
    1438:	9c 81       	ldd	r25, Y+4	; 0x04
    143a:	28 17       	cp	r18, r24
    143c:	39 07       	cpc	r19, r25
    143e:	7c f4       	brge	.+30     	; 0x145e <rijden+0x17a>
        if(tv < afstandmuur){
    1440:	89 81       	ldd	r24, Y+1	; 0x01
    1442:	9a 81       	ldd	r25, Y+2	; 0x02
    1444:	82 33       	cpi	r24, 0x32	; 50
    1446:	91 05       	cpc	r25, r1
    1448:	54 f4       	brge	.+20     	; 0x145e <rijden+0x17a>
            //motor veel links
            DirectieMotorL = 0;
    144a:	10 92 0b 03 	sts	0x030B, r1
    144e:	10 92 0a 03 	sts	0x030A, r1
            DirectieMotorR = 1;
    1452:	81 e0       	ldi	r24, 0x01	; 1
    1454:	90 e0       	ldi	r25, 0x00	; 0
    1456:	90 93 0d 03 	sts	0x030D, r25
    145a:	80 93 0c 03 	sts	0x030C, r24
        }
    }

    if (!(tv > margemeer && ta > margemeer)){
    145e:	89 81       	ldd	r24, Y+1	; 0x01
    1460:	9a 81       	ldd	r25, Y+2	; 0x02
    1462:	88 33       	cpi	r24, 0x38	; 56
    1464:	91 05       	cpc	r25, r1
    1466:	2c f0       	brlt	.+10     	; 0x1472 <rijden+0x18e>
    1468:	8b 81       	ldd	r24, Y+3	; 0x03
    146a:	9c 81       	ldd	r25, Y+4	; 0x04
    146c:	88 33       	cpi	r24, 0x38	; 56
    146e:	91 05       	cpc	r25, r1
    1470:	44 f4       	brge	.+16     	; 0x1482 <rijden+0x19e>
        MotorTrackingPositieL = 0;
    1472:	10 92 0f 03 	sts	0x030F, r1
    1476:	10 92 0e 03 	sts	0x030E, r1
        firstL = 0;
    147a:	10 92 29 03 	sts	0x0329, r1
    147e:	10 92 28 03 	sts	0x0328, r1
    }

    if (!(tv < margeminder && ta < margeminder)){
    1482:	89 81       	ldd	r24, Y+1	; 0x01
    1484:	9a 81       	ldd	r25, Y+2	; 0x02
    1486:	8d 32       	cpi	r24, 0x2D	; 45
    1488:	91 05       	cpc	r25, r1
    148a:	2c f4       	brge	.+10     	; 0x1496 <rijden+0x1b2>
    148c:	8b 81       	ldd	r24, Y+3	; 0x03
    148e:	9c 81       	ldd	r25, Y+4	; 0x04
    1490:	8d 32       	cpi	r24, 0x2D	; 45
    1492:	91 05       	cpc	r25, r1
    1494:	44 f0       	brlt	.+16     	; 0x14a6 <rijden+0x1c2>
        MotorTrackingPositieR = 0;
    1496:	10 92 11 03 	sts	0x0311, r1
    149a:	10 92 10 03 	sts	0x0310, r1
        firstR = 0;
    149e:	10 92 2b 03 	sts	0x032B, r1
    14a2:	10 92 2a 03 	sts	0x032A, r1
    }
}
    14a6:	0f 90       	pop	r0
    14a8:	0f 90       	pop	r0
    14aa:	0f 90       	pop	r0
    14ac:	0f 90       	pop	r0
    14ae:	cf 91       	pop	r28
    14b0:	df 91       	pop	r29
    14b2:	08 95       	ret

000014b4 <blind_rijden>:

void blind_rijden (void){
    14b4:	df 93       	push	r29
    14b6:	cf 93       	push	r28
    14b8:	cd b7       	in	r28, 0x3d	; 61
    14ba:	de b7       	in	r29, 0x3e	; 62
    DirectieMotorL = 1;
    14bc:	81 e0       	ldi	r24, 0x01	; 1
    14be:	90 e0       	ldi	r25, 0x00	; 0
    14c0:	90 93 0b 03 	sts	0x030B, r25
    14c4:	80 93 0a 03 	sts	0x030A, r24
    DirectieMotorR = 1;
    14c8:	81 e0       	ldi	r24, 0x01	; 1
    14ca:	90 e0       	ldi	r25, 0x00	; 0
    14cc:	90 93 0d 03 	sts	0x030D, r25
    14d0:	80 93 0c 03 	sts	0x030C, r24
}
    14d4:	cf 91       	pop	r28
    14d6:	df 91       	pop	r29
    14d8:	08 95       	ret

000014da <main>:
#include "agv_buzzer.h"
#include "agv_motor.h"


int main(void)
{
    14da:	df 93       	push	r29
    14dc:	cf 93       	push	r28
    14de:	cd b7       	in	r28, 0x3d	; 61
    14e0:	de b7       	in	r29, 0x3e	; 62
   agv_buzzer_init();
    14e2:	0e 94 c7 02 	call	0x58e	; 0x58e <agv_buzzer_init>
   agv_ultrasoon_init();
    14e6:	0e 94 6f 06 	call	0xcde	; 0xcde <agv_ultrasoon_init>

   //agv_buzzer_aan();
   //_delay_ms(1000);
   //agv_buzzer_uit();
   //_delay_ms(1000);
   agv_motor_init();
    14ea:	0e 94 09 03 	call	0x612	; 0x612 <agv_motor_init>
   PredefinedBocht();
    14ee:	0e 94 c5 05 	call	0xb8a	; 0xb8a <PredefinedBocht>
   //DirectieMotorL = -1;
   //DirectieMotorR = 1;
   while(1){

    //boomdetectie();
    obstakeldetectie();
    14f2:	0e 94 98 02 	call	0x530	; 0x530 <obstakeldetectie>
    14f6:	fd cf       	rjmp	.-6      	; 0x14f2 <main+0x18>

000014f8 <__fixunssfsi>:
    14f8:	ef 92       	push	r14
    14fa:	ff 92       	push	r15
    14fc:	0f 93       	push	r16
    14fe:	1f 93       	push	r17
    1500:	7b 01       	movw	r14, r22
    1502:	8c 01       	movw	r16, r24
    1504:	20 e0       	ldi	r18, 0x00	; 0
    1506:	30 e0       	ldi	r19, 0x00	; 0
    1508:	40 e0       	ldi	r20, 0x00	; 0
    150a:	5f e4       	ldi	r21, 0x4F	; 79
    150c:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <__gesf2>
    1510:	88 23       	and	r24, r24
    1512:	8c f0       	brlt	.+34     	; 0x1536 <__fixunssfsi+0x3e>
    1514:	c8 01       	movw	r24, r16
    1516:	b7 01       	movw	r22, r14
    1518:	20 e0       	ldi	r18, 0x00	; 0
    151a:	30 e0       	ldi	r19, 0x00	; 0
    151c:	40 e0       	ldi	r20, 0x00	; 0
    151e:	5f e4       	ldi	r21, 0x4F	; 79
    1520:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <__subsf3>
    1524:	0e 94 dc 0d 	call	0x1bb8	; 0x1bb8 <__fixsfsi>
    1528:	9b 01       	movw	r18, r22
    152a:	ac 01       	movw	r20, r24
    152c:	20 50       	subi	r18, 0x00	; 0
    152e:	30 40       	sbci	r19, 0x00	; 0
    1530:	40 40       	sbci	r20, 0x00	; 0
    1532:	50 48       	sbci	r21, 0x80	; 128
    1534:	06 c0       	rjmp	.+12     	; 0x1542 <__fixunssfsi+0x4a>
    1536:	c8 01       	movw	r24, r16
    1538:	b7 01       	movw	r22, r14
    153a:	0e 94 dc 0d 	call	0x1bb8	; 0x1bb8 <__fixsfsi>
    153e:	9b 01       	movw	r18, r22
    1540:	ac 01       	movw	r20, r24
    1542:	b9 01       	movw	r22, r18
    1544:	ca 01       	movw	r24, r20
    1546:	1f 91       	pop	r17
    1548:	0f 91       	pop	r16
    154a:	ff 90       	pop	r15
    154c:	ef 90       	pop	r14
    154e:	08 95       	ret

00001550 <_fpadd_parts>:
    1550:	a0 e0       	ldi	r26, 0x00	; 0
    1552:	b0 e0       	ldi	r27, 0x00	; 0
    1554:	ee ea       	ldi	r30, 0xAE	; 174
    1556:	fa e0       	ldi	r31, 0x0A	; 10
    1558:	0c 94 9e 10 	jmp	0x213c	; 0x213c <__prologue_saves__>
    155c:	dc 01       	movw	r26, r24
    155e:	2b 01       	movw	r4, r22
    1560:	fa 01       	movw	r30, r20
    1562:	9c 91       	ld	r25, X
    1564:	92 30       	cpi	r25, 0x02	; 2
    1566:	08 f4       	brcc	.+2      	; 0x156a <_fpadd_parts+0x1a>
    1568:	39 c1       	rjmp	.+626    	; 0x17dc <_fpadd_parts+0x28c>
    156a:	eb 01       	movw	r28, r22
    156c:	88 81       	ld	r24, Y
    156e:	82 30       	cpi	r24, 0x02	; 2
    1570:	08 f4       	brcc	.+2      	; 0x1574 <_fpadd_parts+0x24>
    1572:	33 c1       	rjmp	.+614    	; 0x17da <_fpadd_parts+0x28a>
    1574:	94 30       	cpi	r25, 0x04	; 4
    1576:	69 f4       	brne	.+26     	; 0x1592 <_fpadd_parts+0x42>
    1578:	84 30       	cpi	r24, 0x04	; 4
    157a:	09 f0       	breq	.+2      	; 0x157e <_fpadd_parts+0x2e>
    157c:	2f c1       	rjmp	.+606    	; 0x17dc <_fpadd_parts+0x28c>
    157e:	11 96       	adiw	r26, 0x01	; 1
    1580:	9c 91       	ld	r25, X
    1582:	11 97       	sbiw	r26, 0x01	; 1
    1584:	89 81       	ldd	r24, Y+1	; 0x01
    1586:	98 17       	cp	r25, r24
    1588:	09 f4       	brne	.+2      	; 0x158c <_fpadd_parts+0x3c>
    158a:	28 c1       	rjmp	.+592    	; 0x17dc <_fpadd_parts+0x28c>
    158c:	a1 e0       	ldi	r26, 0x01	; 1
    158e:	b2 e0       	ldi	r27, 0x02	; 2
    1590:	25 c1       	rjmp	.+586    	; 0x17dc <_fpadd_parts+0x28c>
    1592:	84 30       	cpi	r24, 0x04	; 4
    1594:	09 f4       	brne	.+2      	; 0x1598 <_fpadd_parts+0x48>
    1596:	21 c1       	rjmp	.+578    	; 0x17da <_fpadd_parts+0x28a>
    1598:	82 30       	cpi	r24, 0x02	; 2
    159a:	a9 f4       	brne	.+42     	; 0x15c6 <_fpadd_parts+0x76>
    159c:	92 30       	cpi	r25, 0x02	; 2
    159e:	09 f0       	breq	.+2      	; 0x15a2 <_fpadd_parts+0x52>
    15a0:	1d c1       	rjmp	.+570    	; 0x17dc <_fpadd_parts+0x28c>
    15a2:	9a 01       	movw	r18, r20
    15a4:	ad 01       	movw	r20, r26
    15a6:	88 e0       	ldi	r24, 0x08	; 8
    15a8:	ea 01       	movw	r28, r20
    15aa:	09 90       	ld	r0, Y+
    15ac:	ae 01       	movw	r20, r28
    15ae:	e9 01       	movw	r28, r18
    15b0:	09 92       	st	Y+, r0
    15b2:	9e 01       	movw	r18, r28
    15b4:	81 50       	subi	r24, 0x01	; 1
    15b6:	c1 f7       	brne	.-16     	; 0x15a8 <_fpadd_parts+0x58>
    15b8:	e2 01       	movw	r28, r4
    15ba:	89 81       	ldd	r24, Y+1	; 0x01
    15bc:	11 96       	adiw	r26, 0x01	; 1
    15be:	9c 91       	ld	r25, X
    15c0:	89 23       	and	r24, r25
    15c2:	81 83       	std	Z+1, r24	; 0x01
    15c4:	08 c1       	rjmp	.+528    	; 0x17d6 <_fpadd_parts+0x286>
    15c6:	92 30       	cpi	r25, 0x02	; 2
    15c8:	09 f4       	brne	.+2      	; 0x15cc <_fpadd_parts+0x7c>
    15ca:	07 c1       	rjmp	.+526    	; 0x17da <_fpadd_parts+0x28a>
    15cc:	12 96       	adiw	r26, 0x02	; 2
    15ce:	2d 90       	ld	r2, X+
    15d0:	3c 90       	ld	r3, X
    15d2:	13 97       	sbiw	r26, 0x03	; 3
    15d4:	eb 01       	movw	r28, r22
    15d6:	8a 81       	ldd	r24, Y+2	; 0x02
    15d8:	9b 81       	ldd	r25, Y+3	; 0x03
    15da:	14 96       	adiw	r26, 0x04	; 4
    15dc:	ad 90       	ld	r10, X+
    15de:	bd 90       	ld	r11, X+
    15e0:	cd 90       	ld	r12, X+
    15e2:	dc 90       	ld	r13, X
    15e4:	17 97       	sbiw	r26, 0x07	; 7
    15e6:	ec 80       	ldd	r14, Y+4	; 0x04
    15e8:	fd 80       	ldd	r15, Y+5	; 0x05
    15ea:	0e 81       	ldd	r16, Y+6	; 0x06
    15ec:	1f 81       	ldd	r17, Y+7	; 0x07
    15ee:	91 01       	movw	r18, r2
    15f0:	28 1b       	sub	r18, r24
    15f2:	39 0b       	sbc	r19, r25
    15f4:	b9 01       	movw	r22, r18
    15f6:	37 ff       	sbrs	r19, 7
    15f8:	04 c0       	rjmp	.+8      	; 0x1602 <_fpadd_parts+0xb2>
    15fa:	66 27       	eor	r22, r22
    15fc:	77 27       	eor	r23, r23
    15fe:	62 1b       	sub	r22, r18
    1600:	73 0b       	sbc	r23, r19
    1602:	60 32       	cpi	r22, 0x20	; 32
    1604:	71 05       	cpc	r23, r1
    1606:	0c f0       	brlt	.+2      	; 0x160a <_fpadd_parts+0xba>
    1608:	61 c0       	rjmp	.+194    	; 0x16cc <_fpadd_parts+0x17c>
    160a:	12 16       	cp	r1, r18
    160c:	13 06       	cpc	r1, r19
    160e:	6c f5       	brge	.+90     	; 0x166a <_fpadd_parts+0x11a>
    1610:	37 01       	movw	r6, r14
    1612:	48 01       	movw	r8, r16
    1614:	06 2e       	mov	r0, r22
    1616:	04 c0       	rjmp	.+8      	; 0x1620 <_fpadd_parts+0xd0>
    1618:	96 94       	lsr	r9
    161a:	87 94       	ror	r8
    161c:	77 94       	ror	r7
    161e:	67 94       	ror	r6
    1620:	0a 94       	dec	r0
    1622:	d2 f7       	brpl	.-12     	; 0x1618 <_fpadd_parts+0xc8>
    1624:	21 e0       	ldi	r18, 0x01	; 1
    1626:	30 e0       	ldi	r19, 0x00	; 0
    1628:	40 e0       	ldi	r20, 0x00	; 0
    162a:	50 e0       	ldi	r21, 0x00	; 0
    162c:	04 c0       	rjmp	.+8      	; 0x1636 <_fpadd_parts+0xe6>
    162e:	22 0f       	add	r18, r18
    1630:	33 1f       	adc	r19, r19
    1632:	44 1f       	adc	r20, r20
    1634:	55 1f       	adc	r21, r21
    1636:	6a 95       	dec	r22
    1638:	d2 f7       	brpl	.-12     	; 0x162e <_fpadd_parts+0xde>
    163a:	21 50       	subi	r18, 0x01	; 1
    163c:	30 40       	sbci	r19, 0x00	; 0
    163e:	40 40       	sbci	r20, 0x00	; 0
    1640:	50 40       	sbci	r21, 0x00	; 0
    1642:	2e 21       	and	r18, r14
    1644:	3f 21       	and	r19, r15
    1646:	40 23       	and	r20, r16
    1648:	51 23       	and	r21, r17
    164a:	21 15       	cp	r18, r1
    164c:	31 05       	cpc	r19, r1
    164e:	41 05       	cpc	r20, r1
    1650:	51 05       	cpc	r21, r1
    1652:	21 f0       	breq	.+8      	; 0x165c <_fpadd_parts+0x10c>
    1654:	21 e0       	ldi	r18, 0x01	; 1
    1656:	30 e0       	ldi	r19, 0x00	; 0
    1658:	40 e0       	ldi	r20, 0x00	; 0
    165a:	50 e0       	ldi	r21, 0x00	; 0
    165c:	79 01       	movw	r14, r18
    165e:	8a 01       	movw	r16, r20
    1660:	e6 28       	or	r14, r6
    1662:	f7 28       	or	r15, r7
    1664:	08 29       	or	r16, r8
    1666:	19 29       	or	r17, r9
    1668:	3c c0       	rjmp	.+120    	; 0x16e2 <_fpadd_parts+0x192>
    166a:	23 2b       	or	r18, r19
    166c:	d1 f1       	breq	.+116    	; 0x16e2 <_fpadd_parts+0x192>
    166e:	26 0e       	add	r2, r22
    1670:	37 1e       	adc	r3, r23
    1672:	35 01       	movw	r6, r10
    1674:	46 01       	movw	r8, r12
    1676:	06 2e       	mov	r0, r22
    1678:	04 c0       	rjmp	.+8      	; 0x1682 <_fpadd_parts+0x132>
    167a:	96 94       	lsr	r9
    167c:	87 94       	ror	r8
    167e:	77 94       	ror	r7
    1680:	67 94       	ror	r6
    1682:	0a 94       	dec	r0
    1684:	d2 f7       	brpl	.-12     	; 0x167a <_fpadd_parts+0x12a>
    1686:	21 e0       	ldi	r18, 0x01	; 1
    1688:	30 e0       	ldi	r19, 0x00	; 0
    168a:	40 e0       	ldi	r20, 0x00	; 0
    168c:	50 e0       	ldi	r21, 0x00	; 0
    168e:	04 c0       	rjmp	.+8      	; 0x1698 <_fpadd_parts+0x148>
    1690:	22 0f       	add	r18, r18
    1692:	33 1f       	adc	r19, r19
    1694:	44 1f       	adc	r20, r20
    1696:	55 1f       	adc	r21, r21
    1698:	6a 95       	dec	r22
    169a:	d2 f7       	brpl	.-12     	; 0x1690 <_fpadd_parts+0x140>
    169c:	21 50       	subi	r18, 0x01	; 1
    169e:	30 40       	sbci	r19, 0x00	; 0
    16a0:	40 40       	sbci	r20, 0x00	; 0
    16a2:	50 40       	sbci	r21, 0x00	; 0
    16a4:	2a 21       	and	r18, r10
    16a6:	3b 21       	and	r19, r11
    16a8:	4c 21       	and	r20, r12
    16aa:	5d 21       	and	r21, r13
    16ac:	21 15       	cp	r18, r1
    16ae:	31 05       	cpc	r19, r1
    16b0:	41 05       	cpc	r20, r1
    16b2:	51 05       	cpc	r21, r1
    16b4:	21 f0       	breq	.+8      	; 0x16be <_fpadd_parts+0x16e>
    16b6:	21 e0       	ldi	r18, 0x01	; 1
    16b8:	30 e0       	ldi	r19, 0x00	; 0
    16ba:	40 e0       	ldi	r20, 0x00	; 0
    16bc:	50 e0       	ldi	r21, 0x00	; 0
    16be:	59 01       	movw	r10, r18
    16c0:	6a 01       	movw	r12, r20
    16c2:	a6 28       	or	r10, r6
    16c4:	b7 28       	or	r11, r7
    16c6:	c8 28       	or	r12, r8
    16c8:	d9 28       	or	r13, r9
    16ca:	0b c0       	rjmp	.+22     	; 0x16e2 <_fpadd_parts+0x192>
    16cc:	82 15       	cp	r24, r2
    16ce:	93 05       	cpc	r25, r3
    16d0:	2c f0       	brlt	.+10     	; 0x16dc <_fpadd_parts+0x18c>
    16d2:	1c 01       	movw	r2, r24
    16d4:	aa 24       	eor	r10, r10
    16d6:	bb 24       	eor	r11, r11
    16d8:	65 01       	movw	r12, r10
    16da:	03 c0       	rjmp	.+6      	; 0x16e2 <_fpadd_parts+0x192>
    16dc:	ee 24       	eor	r14, r14
    16de:	ff 24       	eor	r15, r15
    16e0:	87 01       	movw	r16, r14
    16e2:	11 96       	adiw	r26, 0x01	; 1
    16e4:	9c 91       	ld	r25, X
    16e6:	d2 01       	movw	r26, r4
    16e8:	11 96       	adiw	r26, 0x01	; 1
    16ea:	8c 91       	ld	r24, X
    16ec:	98 17       	cp	r25, r24
    16ee:	09 f4       	brne	.+2      	; 0x16f2 <_fpadd_parts+0x1a2>
    16f0:	45 c0       	rjmp	.+138    	; 0x177c <_fpadd_parts+0x22c>
    16f2:	99 23       	and	r25, r25
    16f4:	39 f0       	breq	.+14     	; 0x1704 <_fpadd_parts+0x1b4>
    16f6:	a8 01       	movw	r20, r16
    16f8:	97 01       	movw	r18, r14
    16fa:	2a 19       	sub	r18, r10
    16fc:	3b 09       	sbc	r19, r11
    16fe:	4c 09       	sbc	r20, r12
    1700:	5d 09       	sbc	r21, r13
    1702:	06 c0       	rjmp	.+12     	; 0x1710 <_fpadd_parts+0x1c0>
    1704:	a6 01       	movw	r20, r12
    1706:	95 01       	movw	r18, r10
    1708:	2e 19       	sub	r18, r14
    170a:	3f 09       	sbc	r19, r15
    170c:	40 0b       	sbc	r20, r16
    170e:	51 0b       	sbc	r21, r17
    1710:	57 fd       	sbrc	r21, 7
    1712:	08 c0       	rjmp	.+16     	; 0x1724 <_fpadd_parts+0x1d4>
    1714:	11 82       	std	Z+1, r1	; 0x01
    1716:	33 82       	std	Z+3, r3	; 0x03
    1718:	22 82       	std	Z+2, r2	; 0x02
    171a:	24 83       	std	Z+4, r18	; 0x04
    171c:	35 83       	std	Z+5, r19	; 0x05
    171e:	46 83       	std	Z+6, r20	; 0x06
    1720:	57 83       	std	Z+7, r21	; 0x07
    1722:	1d c0       	rjmp	.+58     	; 0x175e <_fpadd_parts+0x20e>
    1724:	81 e0       	ldi	r24, 0x01	; 1
    1726:	81 83       	std	Z+1, r24	; 0x01
    1728:	33 82       	std	Z+3, r3	; 0x03
    172a:	22 82       	std	Z+2, r2	; 0x02
    172c:	88 27       	eor	r24, r24
    172e:	99 27       	eor	r25, r25
    1730:	dc 01       	movw	r26, r24
    1732:	82 1b       	sub	r24, r18
    1734:	93 0b       	sbc	r25, r19
    1736:	a4 0b       	sbc	r26, r20
    1738:	b5 0b       	sbc	r27, r21
    173a:	84 83       	std	Z+4, r24	; 0x04
    173c:	95 83       	std	Z+5, r25	; 0x05
    173e:	a6 83       	std	Z+6, r26	; 0x06
    1740:	b7 83       	std	Z+7, r27	; 0x07
    1742:	0d c0       	rjmp	.+26     	; 0x175e <_fpadd_parts+0x20e>
    1744:	22 0f       	add	r18, r18
    1746:	33 1f       	adc	r19, r19
    1748:	44 1f       	adc	r20, r20
    174a:	55 1f       	adc	r21, r21
    174c:	24 83       	std	Z+4, r18	; 0x04
    174e:	35 83       	std	Z+5, r19	; 0x05
    1750:	46 83       	std	Z+6, r20	; 0x06
    1752:	57 83       	std	Z+7, r21	; 0x07
    1754:	82 81       	ldd	r24, Z+2	; 0x02
    1756:	93 81       	ldd	r25, Z+3	; 0x03
    1758:	01 97       	sbiw	r24, 0x01	; 1
    175a:	93 83       	std	Z+3, r25	; 0x03
    175c:	82 83       	std	Z+2, r24	; 0x02
    175e:	24 81       	ldd	r18, Z+4	; 0x04
    1760:	35 81       	ldd	r19, Z+5	; 0x05
    1762:	46 81       	ldd	r20, Z+6	; 0x06
    1764:	57 81       	ldd	r21, Z+7	; 0x07
    1766:	da 01       	movw	r26, r20
    1768:	c9 01       	movw	r24, r18
    176a:	01 97       	sbiw	r24, 0x01	; 1
    176c:	a1 09       	sbc	r26, r1
    176e:	b1 09       	sbc	r27, r1
    1770:	8f 5f       	subi	r24, 0xFF	; 255
    1772:	9f 4f       	sbci	r25, 0xFF	; 255
    1774:	af 4f       	sbci	r26, 0xFF	; 255
    1776:	bf 43       	sbci	r27, 0x3F	; 63
    1778:	28 f3       	brcs	.-54     	; 0x1744 <_fpadd_parts+0x1f4>
    177a:	0b c0       	rjmp	.+22     	; 0x1792 <_fpadd_parts+0x242>
    177c:	91 83       	std	Z+1, r25	; 0x01
    177e:	33 82       	std	Z+3, r3	; 0x03
    1780:	22 82       	std	Z+2, r2	; 0x02
    1782:	ea 0c       	add	r14, r10
    1784:	fb 1c       	adc	r15, r11
    1786:	0c 1d       	adc	r16, r12
    1788:	1d 1d       	adc	r17, r13
    178a:	e4 82       	std	Z+4, r14	; 0x04
    178c:	f5 82       	std	Z+5, r15	; 0x05
    178e:	06 83       	std	Z+6, r16	; 0x06
    1790:	17 83       	std	Z+7, r17	; 0x07
    1792:	83 e0       	ldi	r24, 0x03	; 3
    1794:	80 83       	st	Z, r24
    1796:	24 81       	ldd	r18, Z+4	; 0x04
    1798:	35 81       	ldd	r19, Z+5	; 0x05
    179a:	46 81       	ldd	r20, Z+6	; 0x06
    179c:	57 81       	ldd	r21, Z+7	; 0x07
    179e:	57 ff       	sbrs	r21, 7
    17a0:	1a c0       	rjmp	.+52     	; 0x17d6 <_fpadd_parts+0x286>
    17a2:	c9 01       	movw	r24, r18
    17a4:	aa 27       	eor	r26, r26
    17a6:	97 fd       	sbrc	r25, 7
    17a8:	a0 95       	com	r26
    17aa:	ba 2f       	mov	r27, r26
    17ac:	81 70       	andi	r24, 0x01	; 1
    17ae:	90 70       	andi	r25, 0x00	; 0
    17b0:	a0 70       	andi	r26, 0x00	; 0
    17b2:	b0 70       	andi	r27, 0x00	; 0
    17b4:	56 95       	lsr	r21
    17b6:	47 95       	ror	r20
    17b8:	37 95       	ror	r19
    17ba:	27 95       	ror	r18
    17bc:	82 2b       	or	r24, r18
    17be:	93 2b       	or	r25, r19
    17c0:	a4 2b       	or	r26, r20
    17c2:	b5 2b       	or	r27, r21
    17c4:	84 83       	std	Z+4, r24	; 0x04
    17c6:	95 83       	std	Z+5, r25	; 0x05
    17c8:	a6 83       	std	Z+6, r26	; 0x06
    17ca:	b7 83       	std	Z+7, r27	; 0x07
    17cc:	82 81       	ldd	r24, Z+2	; 0x02
    17ce:	93 81       	ldd	r25, Z+3	; 0x03
    17d0:	01 96       	adiw	r24, 0x01	; 1
    17d2:	93 83       	std	Z+3, r25	; 0x03
    17d4:	82 83       	std	Z+2, r24	; 0x02
    17d6:	df 01       	movw	r26, r30
    17d8:	01 c0       	rjmp	.+2      	; 0x17dc <_fpadd_parts+0x28c>
    17da:	d2 01       	movw	r26, r4
    17dc:	cd 01       	movw	r24, r26
    17de:	cd b7       	in	r28, 0x3d	; 61
    17e0:	de b7       	in	r29, 0x3e	; 62
    17e2:	e2 e1       	ldi	r30, 0x12	; 18
    17e4:	0c 94 ba 10 	jmp	0x2174	; 0x2174 <__epilogue_restores__>

000017e8 <__subsf3>:
    17e8:	a0 e2       	ldi	r26, 0x20	; 32
    17ea:	b0 e0       	ldi	r27, 0x00	; 0
    17ec:	ea ef       	ldi	r30, 0xFA	; 250
    17ee:	fb e0       	ldi	r31, 0x0B	; 11
    17f0:	0c 94 aa 10 	jmp	0x2154	; 0x2154 <__prologue_saves__+0x18>
    17f4:	69 83       	std	Y+1, r22	; 0x01
    17f6:	7a 83       	std	Y+2, r23	; 0x02
    17f8:	8b 83       	std	Y+3, r24	; 0x03
    17fa:	9c 83       	std	Y+4, r25	; 0x04
    17fc:	2d 83       	std	Y+5, r18	; 0x05
    17fe:	3e 83       	std	Y+6, r19	; 0x06
    1800:	4f 83       	std	Y+7, r20	; 0x07
    1802:	58 87       	std	Y+8, r21	; 0x08
    1804:	e9 e0       	ldi	r30, 0x09	; 9
    1806:	ee 2e       	mov	r14, r30
    1808:	f1 2c       	mov	r15, r1
    180a:	ec 0e       	add	r14, r28
    180c:	fd 1e       	adc	r15, r29
    180e:	ce 01       	movw	r24, r28
    1810:	01 96       	adiw	r24, 0x01	; 1
    1812:	b7 01       	movw	r22, r14
    1814:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__unpack_f>
    1818:	8e 01       	movw	r16, r28
    181a:	0f 5e       	subi	r16, 0xEF	; 239
    181c:	1f 4f       	sbci	r17, 0xFF	; 255
    181e:	ce 01       	movw	r24, r28
    1820:	05 96       	adiw	r24, 0x05	; 5
    1822:	b8 01       	movw	r22, r16
    1824:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__unpack_f>
    1828:	8a 89       	ldd	r24, Y+18	; 0x12
    182a:	91 e0       	ldi	r25, 0x01	; 1
    182c:	89 27       	eor	r24, r25
    182e:	8a 8b       	std	Y+18, r24	; 0x12
    1830:	c7 01       	movw	r24, r14
    1832:	b8 01       	movw	r22, r16
    1834:	ae 01       	movw	r20, r28
    1836:	47 5e       	subi	r20, 0xE7	; 231
    1838:	5f 4f       	sbci	r21, 0xFF	; 255
    183a:	0e 94 a8 0a 	call	0x1550	; 0x1550 <_fpadd_parts>
    183e:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <__pack_f>
    1842:	a0 96       	adiw	r28, 0x20	; 32
    1844:	e6 e0       	ldi	r30, 0x06	; 6
    1846:	0c 94 c6 10 	jmp	0x218c	; 0x218c <__epilogue_restores__+0x18>

0000184a <__addsf3>:
    184a:	a0 e2       	ldi	r26, 0x20	; 32
    184c:	b0 e0       	ldi	r27, 0x00	; 0
    184e:	eb e2       	ldi	r30, 0x2B	; 43
    1850:	fc e0       	ldi	r31, 0x0C	; 12
    1852:	0c 94 aa 10 	jmp	0x2154	; 0x2154 <__prologue_saves__+0x18>
    1856:	69 83       	std	Y+1, r22	; 0x01
    1858:	7a 83       	std	Y+2, r23	; 0x02
    185a:	8b 83       	std	Y+3, r24	; 0x03
    185c:	9c 83       	std	Y+4, r25	; 0x04
    185e:	2d 83       	std	Y+5, r18	; 0x05
    1860:	3e 83       	std	Y+6, r19	; 0x06
    1862:	4f 83       	std	Y+7, r20	; 0x07
    1864:	58 87       	std	Y+8, r21	; 0x08
    1866:	f9 e0       	ldi	r31, 0x09	; 9
    1868:	ef 2e       	mov	r14, r31
    186a:	f1 2c       	mov	r15, r1
    186c:	ec 0e       	add	r14, r28
    186e:	fd 1e       	adc	r15, r29
    1870:	ce 01       	movw	r24, r28
    1872:	01 96       	adiw	r24, 0x01	; 1
    1874:	b7 01       	movw	r22, r14
    1876:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__unpack_f>
    187a:	8e 01       	movw	r16, r28
    187c:	0f 5e       	subi	r16, 0xEF	; 239
    187e:	1f 4f       	sbci	r17, 0xFF	; 255
    1880:	ce 01       	movw	r24, r28
    1882:	05 96       	adiw	r24, 0x05	; 5
    1884:	b8 01       	movw	r22, r16
    1886:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__unpack_f>
    188a:	c7 01       	movw	r24, r14
    188c:	b8 01       	movw	r22, r16
    188e:	ae 01       	movw	r20, r28
    1890:	47 5e       	subi	r20, 0xE7	; 231
    1892:	5f 4f       	sbci	r21, 0xFF	; 255
    1894:	0e 94 a8 0a 	call	0x1550	; 0x1550 <_fpadd_parts>
    1898:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <__pack_f>
    189c:	a0 96       	adiw	r28, 0x20	; 32
    189e:	e6 e0       	ldi	r30, 0x06	; 6
    18a0:	0c 94 c6 10 	jmp	0x218c	; 0x218c <__epilogue_restores__+0x18>

000018a4 <__mulsf3>:
    18a4:	a0 e2       	ldi	r26, 0x20	; 32
    18a6:	b0 e0       	ldi	r27, 0x00	; 0
    18a8:	e8 e5       	ldi	r30, 0x58	; 88
    18aa:	fc e0       	ldi	r31, 0x0C	; 12
    18ac:	0c 94 9e 10 	jmp	0x213c	; 0x213c <__prologue_saves__>
    18b0:	69 83       	std	Y+1, r22	; 0x01
    18b2:	7a 83       	std	Y+2, r23	; 0x02
    18b4:	8b 83       	std	Y+3, r24	; 0x03
    18b6:	9c 83       	std	Y+4, r25	; 0x04
    18b8:	2d 83       	std	Y+5, r18	; 0x05
    18ba:	3e 83       	std	Y+6, r19	; 0x06
    18bc:	4f 83       	std	Y+7, r20	; 0x07
    18be:	58 87       	std	Y+8, r21	; 0x08
    18c0:	ce 01       	movw	r24, r28
    18c2:	01 96       	adiw	r24, 0x01	; 1
    18c4:	be 01       	movw	r22, r28
    18c6:	67 5f       	subi	r22, 0xF7	; 247
    18c8:	7f 4f       	sbci	r23, 0xFF	; 255
    18ca:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__unpack_f>
    18ce:	ce 01       	movw	r24, r28
    18d0:	05 96       	adiw	r24, 0x05	; 5
    18d2:	be 01       	movw	r22, r28
    18d4:	6f 5e       	subi	r22, 0xEF	; 239
    18d6:	7f 4f       	sbci	r23, 0xFF	; 255
    18d8:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__unpack_f>
    18dc:	99 85       	ldd	r25, Y+9	; 0x09
    18de:	92 30       	cpi	r25, 0x02	; 2
    18e0:	88 f0       	brcs	.+34     	; 0x1904 <__mulsf3+0x60>
    18e2:	89 89       	ldd	r24, Y+17	; 0x11
    18e4:	82 30       	cpi	r24, 0x02	; 2
    18e6:	c8 f0       	brcs	.+50     	; 0x191a <__mulsf3+0x76>
    18e8:	94 30       	cpi	r25, 0x04	; 4
    18ea:	19 f4       	brne	.+6      	; 0x18f2 <__mulsf3+0x4e>
    18ec:	82 30       	cpi	r24, 0x02	; 2
    18ee:	51 f4       	brne	.+20     	; 0x1904 <__mulsf3+0x60>
    18f0:	04 c0       	rjmp	.+8      	; 0x18fa <__mulsf3+0x56>
    18f2:	84 30       	cpi	r24, 0x04	; 4
    18f4:	29 f4       	brne	.+10     	; 0x1900 <__mulsf3+0x5c>
    18f6:	92 30       	cpi	r25, 0x02	; 2
    18f8:	81 f4       	brne	.+32     	; 0x191a <__mulsf3+0x76>
    18fa:	81 e0       	ldi	r24, 0x01	; 1
    18fc:	92 e0       	ldi	r25, 0x02	; 2
    18fe:	c6 c0       	rjmp	.+396    	; 0x1a8c <__mulsf3+0x1e8>
    1900:	92 30       	cpi	r25, 0x02	; 2
    1902:	49 f4       	brne	.+18     	; 0x1916 <__mulsf3+0x72>
    1904:	20 e0       	ldi	r18, 0x00	; 0
    1906:	9a 85       	ldd	r25, Y+10	; 0x0a
    1908:	8a 89       	ldd	r24, Y+18	; 0x12
    190a:	98 13       	cpse	r25, r24
    190c:	21 e0       	ldi	r18, 0x01	; 1
    190e:	2a 87       	std	Y+10, r18	; 0x0a
    1910:	ce 01       	movw	r24, r28
    1912:	09 96       	adiw	r24, 0x09	; 9
    1914:	bb c0       	rjmp	.+374    	; 0x1a8c <__mulsf3+0x1e8>
    1916:	82 30       	cpi	r24, 0x02	; 2
    1918:	49 f4       	brne	.+18     	; 0x192c <__mulsf3+0x88>
    191a:	20 e0       	ldi	r18, 0x00	; 0
    191c:	9a 85       	ldd	r25, Y+10	; 0x0a
    191e:	8a 89       	ldd	r24, Y+18	; 0x12
    1920:	98 13       	cpse	r25, r24
    1922:	21 e0       	ldi	r18, 0x01	; 1
    1924:	2a 8b       	std	Y+18, r18	; 0x12
    1926:	ce 01       	movw	r24, r28
    1928:	41 96       	adiw	r24, 0x11	; 17
    192a:	b0 c0       	rjmp	.+352    	; 0x1a8c <__mulsf3+0x1e8>
    192c:	2d 84       	ldd	r2, Y+13	; 0x0d
    192e:	3e 84       	ldd	r3, Y+14	; 0x0e
    1930:	4f 84       	ldd	r4, Y+15	; 0x0f
    1932:	58 88       	ldd	r5, Y+16	; 0x10
    1934:	6d 88       	ldd	r6, Y+21	; 0x15
    1936:	7e 88       	ldd	r7, Y+22	; 0x16
    1938:	8f 88       	ldd	r8, Y+23	; 0x17
    193a:	98 8c       	ldd	r9, Y+24	; 0x18
    193c:	ee 24       	eor	r14, r14
    193e:	ff 24       	eor	r15, r15
    1940:	87 01       	movw	r16, r14
    1942:	aa 24       	eor	r10, r10
    1944:	bb 24       	eor	r11, r11
    1946:	65 01       	movw	r12, r10
    1948:	40 e0       	ldi	r20, 0x00	; 0
    194a:	50 e0       	ldi	r21, 0x00	; 0
    194c:	60 e0       	ldi	r22, 0x00	; 0
    194e:	70 e0       	ldi	r23, 0x00	; 0
    1950:	e0 e0       	ldi	r30, 0x00	; 0
    1952:	f0 e0       	ldi	r31, 0x00	; 0
    1954:	c1 01       	movw	r24, r2
    1956:	81 70       	andi	r24, 0x01	; 1
    1958:	90 70       	andi	r25, 0x00	; 0
    195a:	89 2b       	or	r24, r25
    195c:	e9 f0       	breq	.+58     	; 0x1998 <__mulsf3+0xf4>
    195e:	e6 0c       	add	r14, r6
    1960:	f7 1c       	adc	r15, r7
    1962:	08 1d       	adc	r16, r8
    1964:	19 1d       	adc	r17, r9
    1966:	9a 01       	movw	r18, r20
    1968:	ab 01       	movw	r20, r22
    196a:	2a 0d       	add	r18, r10
    196c:	3b 1d       	adc	r19, r11
    196e:	4c 1d       	adc	r20, r12
    1970:	5d 1d       	adc	r21, r13
    1972:	80 e0       	ldi	r24, 0x00	; 0
    1974:	90 e0       	ldi	r25, 0x00	; 0
    1976:	a0 e0       	ldi	r26, 0x00	; 0
    1978:	b0 e0       	ldi	r27, 0x00	; 0
    197a:	e6 14       	cp	r14, r6
    197c:	f7 04       	cpc	r15, r7
    197e:	08 05       	cpc	r16, r8
    1980:	19 05       	cpc	r17, r9
    1982:	20 f4       	brcc	.+8      	; 0x198c <__mulsf3+0xe8>
    1984:	81 e0       	ldi	r24, 0x01	; 1
    1986:	90 e0       	ldi	r25, 0x00	; 0
    1988:	a0 e0       	ldi	r26, 0x00	; 0
    198a:	b0 e0       	ldi	r27, 0x00	; 0
    198c:	ba 01       	movw	r22, r20
    198e:	a9 01       	movw	r20, r18
    1990:	48 0f       	add	r20, r24
    1992:	59 1f       	adc	r21, r25
    1994:	6a 1f       	adc	r22, r26
    1996:	7b 1f       	adc	r23, r27
    1998:	aa 0c       	add	r10, r10
    199a:	bb 1c       	adc	r11, r11
    199c:	cc 1c       	adc	r12, r12
    199e:	dd 1c       	adc	r13, r13
    19a0:	97 fe       	sbrs	r9, 7
    19a2:	08 c0       	rjmp	.+16     	; 0x19b4 <__mulsf3+0x110>
    19a4:	81 e0       	ldi	r24, 0x01	; 1
    19a6:	90 e0       	ldi	r25, 0x00	; 0
    19a8:	a0 e0       	ldi	r26, 0x00	; 0
    19aa:	b0 e0       	ldi	r27, 0x00	; 0
    19ac:	a8 2a       	or	r10, r24
    19ae:	b9 2a       	or	r11, r25
    19b0:	ca 2a       	or	r12, r26
    19b2:	db 2a       	or	r13, r27
    19b4:	31 96       	adiw	r30, 0x01	; 1
    19b6:	e0 32       	cpi	r30, 0x20	; 32
    19b8:	f1 05       	cpc	r31, r1
    19ba:	49 f0       	breq	.+18     	; 0x19ce <__mulsf3+0x12a>
    19bc:	66 0c       	add	r6, r6
    19be:	77 1c       	adc	r7, r7
    19c0:	88 1c       	adc	r8, r8
    19c2:	99 1c       	adc	r9, r9
    19c4:	56 94       	lsr	r5
    19c6:	47 94       	ror	r4
    19c8:	37 94       	ror	r3
    19ca:	27 94       	ror	r2
    19cc:	c3 cf       	rjmp	.-122    	; 0x1954 <__mulsf3+0xb0>
    19ce:	fa 85       	ldd	r31, Y+10	; 0x0a
    19d0:	ea 89       	ldd	r30, Y+18	; 0x12
    19d2:	2b 89       	ldd	r18, Y+19	; 0x13
    19d4:	3c 89       	ldd	r19, Y+20	; 0x14
    19d6:	8b 85       	ldd	r24, Y+11	; 0x0b
    19d8:	9c 85       	ldd	r25, Y+12	; 0x0c
    19da:	28 0f       	add	r18, r24
    19dc:	39 1f       	adc	r19, r25
    19de:	2e 5f       	subi	r18, 0xFE	; 254
    19e0:	3f 4f       	sbci	r19, 0xFF	; 255
    19e2:	17 c0       	rjmp	.+46     	; 0x1a12 <__mulsf3+0x16e>
    19e4:	ca 01       	movw	r24, r20
    19e6:	81 70       	andi	r24, 0x01	; 1
    19e8:	90 70       	andi	r25, 0x00	; 0
    19ea:	89 2b       	or	r24, r25
    19ec:	61 f0       	breq	.+24     	; 0x1a06 <__mulsf3+0x162>
    19ee:	16 95       	lsr	r17
    19f0:	07 95       	ror	r16
    19f2:	f7 94       	ror	r15
    19f4:	e7 94       	ror	r14
    19f6:	80 e0       	ldi	r24, 0x00	; 0
    19f8:	90 e0       	ldi	r25, 0x00	; 0
    19fa:	a0 e0       	ldi	r26, 0x00	; 0
    19fc:	b0 e8       	ldi	r27, 0x80	; 128
    19fe:	e8 2a       	or	r14, r24
    1a00:	f9 2a       	or	r15, r25
    1a02:	0a 2b       	or	r16, r26
    1a04:	1b 2b       	or	r17, r27
    1a06:	76 95       	lsr	r23
    1a08:	67 95       	ror	r22
    1a0a:	57 95       	ror	r21
    1a0c:	47 95       	ror	r20
    1a0e:	2f 5f       	subi	r18, 0xFF	; 255
    1a10:	3f 4f       	sbci	r19, 0xFF	; 255
    1a12:	77 fd       	sbrc	r23, 7
    1a14:	e7 cf       	rjmp	.-50     	; 0x19e4 <__mulsf3+0x140>
    1a16:	0c c0       	rjmp	.+24     	; 0x1a30 <__mulsf3+0x18c>
    1a18:	44 0f       	add	r20, r20
    1a1a:	55 1f       	adc	r21, r21
    1a1c:	66 1f       	adc	r22, r22
    1a1e:	77 1f       	adc	r23, r23
    1a20:	17 fd       	sbrc	r17, 7
    1a22:	41 60       	ori	r20, 0x01	; 1
    1a24:	ee 0c       	add	r14, r14
    1a26:	ff 1c       	adc	r15, r15
    1a28:	00 1f       	adc	r16, r16
    1a2a:	11 1f       	adc	r17, r17
    1a2c:	21 50       	subi	r18, 0x01	; 1
    1a2e:	30 40       	sbci	r19, 0x00	; 0
    1a30:	40 30       	cpi	r20, 0x00	; 0
    1a32:	90 e0       	ldi	r25, 0x00	; 0
    1a34:	59 07       	cpc	r21, r25
    1a36:	90 e0       	ldi	r25, 0x00	; 0
    1a38:	69 07       	cpc	r22, r25
    1a3a:	90 e4       	ldi	r25, 0x40	; 64
    1a3c:	79 07       	cpc	r23, r25
    1a3e:	60 f3       	brcs	.-40     	; 0x1a18 <__mulsf3+0x174>
    1a40:	2b 8f       	std	Y+27, r18	; 0x1b
    1a42:	3c 8f       	std	Y+28, r19	; 0x1c
    1a44:	db 01       	movw	r26, r22
    1a46:	ca 01       	movw	r24, r20
    1a48:	8f 77       	andi	r24, 0x7F	; 127
    1a4a:	90 70       	andi	r25, 0x00	; 0
    1a4c:	a0 70       	andi	r26, 0x00	; 0
    1a4e:	b0 70       	andi	r27, 0x00	; 0
    1a50:	80 34       	cpi	r24, 0x40	; 64
    1a52:	91 05       	cpc	r25, r1
    1a54:	a1 05       	cpc	r26, r1
    1a56:	b1 05       	cpc	r27, r1
    1a58:	61 f4       	brne	.+24     	; 0x1a72 <__mulsf3+0x1ce>
    1a5a:	47 fd       	sbrc	r20, 7
    1a5c:	0a c0       	rjmp	.+20     	; 0x1a72 <__mulsf3+0x1ce>
    1a5e:	e1 14       	cp	r14, r1
    1a60:	f1 04       	cpc	r15, r1
    1a62:	01 05       	cpc	r16, r1
    1a64:	11 05       	cpc	r17, r1
    1a66:	29 f0       	breq	.+10     	; 0x1a72 <__mulsf3+0x1ce>
    1a68:	40 5c       	subi	r20, 0xC0	; 192
    1a6a:	5f 4f       	sbci	r21, 0xFF	; 255
    1a6c:	6f 4f       	sbci	r22, 0xFF	; 255
    1a6e:	7f 4f       	sbci	r23, 0xFF	; 255
    1a70:	40 78       	andi	r20, 0x80	; 128
    1a72:	1a 8e       	std	Y+26, r1	; 0x1a
    1a74:	fe 17       	cp	r31, r30
    1a76:	11 f0       	breq	.+4      	; 0x1a7c <__mulsf3+0x1d8>
    1a78:	81 e0       	ldi	r24, 0x01	; 1
    1a7a:	8a 8f       	std	Y+26, r24	; 0x1a
    1a7c:	4d 8f       	std	Y+29, r20	; 0x1d
    1a7e:	5e 8f       	std	Y+30, r21	; 0x1e
    1a80:	6f 8f       	std	Y+31, r22	; 0x1f
    1a82:	78 a3       	std	Y+32, r23	; 0x20
    1a84:	83 e0       	ldi	r24, 0x03	; 3
    1a86:	89 8f       	std	Y+25, r24	; 0x19
    1a88:	ce 01       	movw	r24, r28
    1a8a:	49 96       	adiw	r24, 0x19	; 25
    1a8c:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <__pack_f>
    1a90:	a0 96       	adiw	r28, 0x20	; 32
    1a92:	e2 e1       	ldi	r30, 0x12	; 18
    1a94:	0c 94 ba 10 	jmp	0x2174	; 0x2174 <__epilogue_restores__>

00001a98 <__gtsf2>:
    1a98:	a8 e1       	ldi	r26, 0x18	; 24
    1a9a:	b0 e0       	ldi	r27, 0x00	; 0
    1a9c:	e2 e5       	ldi	r30, 0x52	; 82
    1a9e:	fd e0       	ldi	r31, 0x0D	; 13
    1aa0:	0c 94 aa 10 	jmp	0x2154	; 0x2154 <__prologue_saves__+0x18>
    1aa4:	69 83       	std	Y+1, r22	; 0x01
    1aa6:	7a 83       	std	Y+2, r23	; 0x02
    1aa8:	8b 83       	std	Y+3, r24	; 0x03
    1aaa:	9c 83       	std	Y+4, r25	; 0x04
    1aac:	2d 83       	std	Y+5, r18	; 0x05
    1aae:	3e 83       	std	Y+6, r19	; 0x06
    1ab0:	4f 83       	std	Y+7, r20	; 0x07
    1ab2:	58 87       	std	Y+8, r21	; 0x08
    1ab4:	89 e0       	ldi	r24, 0x09	; 9
    1ab6:	e8 2e       	mov	r14, r24
    1ab8:	f1 2c       	mov	r15, r1
    1aba:	ec 0e       	add	r14, r28
    1abc:	fd 1e       	adc	r15, r29
    1abe:	ce 01       	movw	r24, r28
    1ac0:	01 96       	adiw	r24, 0x01	; 1
    1ac2:	b7 01       	movw	r22, r14
    1ac4:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__unpack_f>
    1ac8:	8e 01       	movw	r16, r28
    1aca:	0f 5e       	subi	r16, 0xEF	; 239
    1acc:	1f 4f       	sbci	r17, 0xFF	; 255
    1ace:	ce 01       	movw	r24, r28
    1ad0:	05 96       	adiw	r24, 0x05	; 5
    1ad2:	b8 01       	movw	r22, r16
    1ad4:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__unpack_f>
    1ad8:	89 85       	ldd	r24, Y+9	; 0x09
    1ada:	82 30       	cpi	r24, 0x02	; 2
    1adc:	40 f0       	brcs	.+16     	; 0x1aee <__gtsf2+0x56>
    1ade:	89 89       	ldd	r24, Y+17	; 0x11
    1ae0:	82 30       	cpi	r24, 0x02	; 2
    1ae2:	28 f0       	brcs	.+10     	; 0x1aee <__gtsf2+0x56>
    1ae4:	c7 01       	movw	r24, r14
    1ae6:	b8 01       	movw	r22, r16
    1ae8:	0e 94 45 10 	call	0x208a	; 0x208a <__fpcmp_parts_f>
    1aec:	01 c0       	rjmp	.+2      	; 0x1af0 <__gtsf2+0x58>
    1aee:	8f ef       	ldi	r24, 0xFF	; 255
    1af0:	68 96       	adiw	r28, 0x18	; 24
    1af2:	e6 e0       	ldi	r30, 0x06	; 6
    1af4:	0c 94 c6 10 	jmp	0x218c	; 0x218c <__epilogue_restores__+0x18>

00001af8 <__gesf2>:
    1af8:	a8 e1       	ldi	r26, 0x18	; 24
    1afa:	b0 e0       	ldi	r27, 0x00	; 0
    1afc:	e2 e8       	ldi	r30, 0x82	; 130
    1afe:	fd e0       	ldi	r31, 0x0D	; 13
    1b00:	0c 94 aa 10 	jmp	0x2154	; 0x2154 <__prologue_saves__+0x18>
    1b04:	69 83       	std	Y+1, r22	; 0x01
    1b06:	7a 83       	std	Y+2, r23	; 0x02
    1b08:	8b 83       	std	Y+3, r24	; 0x03
    1b0a:	9c 83       	std	Y+4, r25	; 0x04
    1b0c:	2d 83       	std	Y+5, r18	; 0x05
    1b0e:	3e 83       	std	Y+6, r19	; 0x06
    1b10:	4f 83       	std	Y+7, r20	; 0x07
    1b12:	58 87       	std	Y+8, r21	; 0x08
    1b14:	89 e0       	ldi	r24, 0x09	; 9
    1b16:	e8 2e       	mov	r14, r24
    1b18:	f1 2c       	mov	r15, r1
    1b1a:	ec 0e       	add	r14, r28
    1b1c:	fd 1e       	adc	r15, r29
    1b1e:	ce 01       	movw	r24, r28
    1b20:	01 96       	adiw	r24, 0x01	; 1
    1b22:	b7 01       	movw	r22, r14
    1b24:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__unpack_f>
    1b28:	8e 01       	movw	r16, r28
    1b2a:	0f 5e       	subi	r16, 0xEF	; 239
    1b2c:	1f 4f       	sbci	r17, 0xFF	; 255
    1b2e:	ce 01       	movw	r24, r28
    1b30:	05 96       	adiw	r24, 0x05	; 5
    1b32:	b8 01       	movw	r22, r16
    1b34:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__unpack_f>
    1b38:	89 85       	ldd	r24, Y+9	; 0x09
    1b3a:	82 30       	cpi	r24, 0x02	; 2
    1b3c:	40 f0       	brcs	.+16     	; 0x1b4e <__gesf2+0x56>
    1b3e:	89 89       	ldd	r24, Y+17	; 0x11
    1b40:	82 30       	cpi	r24, 0x02	; 2
    1b42:	28 f0       	brcs	.+10     	; 0x1b4e <__gesf2+0x56>
    1b44:	c7 01       	movw	r24, r14
    1b46:	b8 01       	movw	r22, r16
    1b48:	0e 94 45 10 	call	0x208a	; 0x208a <__fpcmp_parts_f>
    1b4c:	01 c0       	rjmp	.+2      	; 0x1b50 <__gesf2+0x58>
    1b4e:	8f ef       	ldi	r24, 0xFF	; 255
    1b50:	68 96       	adiw	r28, 0x18	; 24
    1b52:	e6 e0       	ldi	r30, 0x06	; 6
    1b54:	0c 94 c6 10 	jmp	0x218c	; 0x218c <__epilogue_restores__+0x18>

00001b58 <__ltsf2>:
    1b58:	a8 e1       	ldi	r26, 0x18	; 24
    1b5a:	b0 e0       	ldi	r27, 0x00	; 0
    1b5c:	e2 eb       	ldi	r30, 0xB2	; 178
    1b5e:	fd e0       	ldi	r31, 0x0D	; 13
    1b60:	0c 94 aa 10 	jmp	0x2154	; 0x2154 <__prologue_saves__+0x18>
    1b64:	69 83       	std	Y+1, r22	; 0x01
    1b66:	7a 83       	std	Y+2, r23	; 0x02
    1b68:	8b 83       	std	Y+3, r24	; 0x03
    1b6a:	9c 83       	std	Y+4, r25	; 0x04
    1b6c:	2d 83       	std	Y+5, r18	; 0x05
    1b6e:	3e 83       	std	Y+6, r19	; 0x06
    1b70:	4f 83       	std	Y+7, r20	; 0x07
    1b72:	58 87       	std	Y+8, r21	; 0x08
    1b74:	89 e0       	ldi	r24, 0x09	; 9
    1b76:	e8 2e       	mov	r14, r24
    1b78:	f1 2c       	mov	r15, r1
    1b7a:	ec 0e       	add	r14, r28
    1b7c:	fd 1e       	adc	r15, r29
    1b7e:	ce 01       	movw	r24, r28
    1b80:	01 96       	adiw	r24, 0x01	; 1
    1b82:	b7 01       	movw	r22, r14
    1b84:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__unpack_f>
    1b88:	8e 01       	movw	r16, r28
    1b8a:	0f 5e       	subi	r16, 0xEF	; 239
    1b8c:	1f 4f       	sbci	r17, 0xFF	; 255
    1b8e:	ce 01       	movw	r24, r28
    1b90:	05 96       	adiw	r24, 0x05	; 5
    1b92:	b8 01       	movw	r22, r16
    1b94:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__unpack_f>
    1b98:	89 85       	ldd	r24, Y+9	; 0x09
    1b9a:	82 30       	cpi	r24, 0x02	; 2
    1b9c:	40 f0       	brcs	.+16     	; 0x1bae <__ltsf2+0x56>
    1b9e:	89 89       	ldd	r24, Y+17	; 0x11
    1ba0:	82 30       	cpi	r24, 0x02	; 2
    1ba2:	28 f0       	brcs	.+10     	; 0x1bae <__ltsf2+0x56>
    1ba4:	c7 01       	movw	r24, r14
    1ba6:	b8 01       	movw	r22, r16
    1ba8:	0e 94 45 10 	call	0x208a	; 0x208a <__fpcmp_parts_f>
    1bac:	01 c0       	rjmp	.+2      	; 0x1bb0 <__ltsf2+0x58>
    1bae:	81 e0       	ldi	r24, 0x01	; 1
    1bb0:	68 96       	adiw	r28, 0x18	; 24
    1bb2:	e6 e0       	ldi	r30, 0x06	; 6
    1bb4:	0c 94 c6 10 	jmp	0x218c	; 0x218c <__epilogue_restores__+0x18>

00001bb8 <__fixsfsi>:
    1bb8:	ac e0       	ldi	r26, 0x0C	; 12
    1bba:	b0 e0       	ldi	r27, 0x00	; 0
    1bbc:	e2 ee       	ldi	r30, 0xE2	; 226
    1bbe:	fd e0       	ldi	r31, 0x0D	; 13
    1bc0:	0c 94 ae 10 	jmp	0x215c	; 0x215c <__prologue_saves__+0x20>
    1bc4:	69 83       	std	Y+1, r22	; 0x01
    1bc6:	7a 83       	std	Y+2, r23	; 0x02
    1bc8:	8b 83       	std	Y+3, r24	; 0x03
    1bca:	9c 83       	std	Y+4, r25	; 0x04
    1bcc:	ce 01       	movw	r24, r28
    1bce:	01 96       	adiw	r24, 0x01	; 1
    1bd0:	be 01       	movw	r22, r28
    1bd2:	6b 5f       	subi	r22, 0xFB	; 251
    1bd4:	7f 4f       	sbci	r23, 0xFF	; 255
    1bd6:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__unpack_f>
    1bda:	8d 81       	ldd	r24, Y+5	; 0x05
    1bdc:	82 30       	cpi	r24, 0x02	; 2
    1bde:	61 f1       	breq	.+88     	; 0x1c38 <__fixsfsi+0x80>
    1be0:	82 30       	cpi	r24, 0x02	; 2
    1be2:	50 f1       	brcs	.+84     	; 0x1c38 <__fixsfsi+0x80>
    1be4:	84 30       	cpi	r24, 0x04	; 4
    1be6:	21 f4       	brne	.+8      	; 0x1bf0 <__fixsfsi+0x38>
    1be8:	8e 81       	ldd	r24, Y+6	; 0x06
    1bea:	88 23       	and	r24, r24
    1bec:	51 f1       	breq	.+84     	; 0x1c42 <__fixsfsi+0x8a>
    1bee:	2e c0       	rjmp	.+92     	; 0x1c4c <__fixsfsi+0x94>
    1bf0:	2f 81       	ldd	r18, Y+7	; 0x07
    1bf2:	38 85       	ldd	r19, Y+8	; 0x08
    1bf4:	37 fd       	sbrc	r19, 7
    1bf6:	20 c0       	rjmp	.+64     	; 0x1c38 <__fixsfsi+0x80>
    1bf8:	6e 81       	ldd	r22, Y+6	; 0x06
    1bfa:	2f 31       	cpi	r18, 0x1F	; 31
    1bfc:	31 05       	cpc	r19, r1
    1bfe:	1c f0       	brlt	.+6      	; 0x1c06 <__fixsfsi+0x4e>
    1c00:	66 23       	and	r22, r22
    1c02:	f9 f0       	breq	.+62     	; 0x1c42 <__fixsfsi+0x8a>
    1c04:	23 c0       	rjmp	.+70     	; 0x1c4c <__fixsfsi+0x94>
    1c06:	8e e1       	ldi	r24, 0x1E	; 30
    1c08:	90 e0       	ldi	r25, 0x00	; 0
    1c0a:	82 1b       	sub	r24, r18
    1c0c:	93 0b       	sbc	r25, r19
    1c0e:	29 85       	ldd	r18, Y+9	; 0x09
    1c10:	3a 85       	ldd	r19, Y+10	; 0x0a
    1c12:	4b 85       	ldd	r20, Y+11	; 0x0b
    1c14:	5c 85       	ldd	r21, Y+12	; 0x0c
    1c16:	04 c0       	rjmp	.+8      	; 0x1c20 <__fixsfsi+0x68>
    1c18:	56 95       	lsr	r21
    1c1a:	47 95       	ror	r20
    1c1c:	37 95       	ror	r19
    1c1e:	27 95       	ror	r18
    1c20:	8a 95       	dec	r24
    1c22:	d2 f7       	brpl	.-12     	; 0x1c18 <__fixsfsi+0x60>
    1c24:	66 23       	and	r22, r22
    1c26:	b1 f0       	breq	.+44     	; 0x1c54 <__fixsfsi+0x9c>
    1c28:	50 95       	com	r21
    1c2a:	40 95       	com	r20
    1c2c:	30 95       	com	r19
    1c2e:	21 95       	neg	r18
    1c30:	3f 4f       	sbci	r19, 0xFF	; 255
    1c32:	4f 4f       	sbci	r20, 0xFF	; 255
    1c34:	5f 4f       	sbci	r21, 0xFF	; 255
    1c36:	0e c0       	rjmp	.+28     	; 0x1c54 <__fixsfsi+0x9c>
    1c38:	20 e0       	ldi	r18, 0x00	; 0
    1c3a:	30 e0       	ldi	r19, 0x00	; 0
    1c3c:	40 e0       	ldi	r20, 0x00	; 0
    1c3e:	50 e0       	ldi	r21, 0x00	; 0
    1c40:	09 c0       	rjmp	.+18     	; 0x1c54 <__fixsfsi+0x9c>
    1c42:	2f ef       	ldi	r18, 0xFF	; 255
    1c44:	3f ef       	ldi	r19, 0xFF	; 255
    1c46:	4f ef       	ldi	r20, 0xFF	; 255
    1c48:	5f e7       	ldi	r21, 0x7F	; 127
    1c4a:	04 c0       	rjmp	.+8      	; 0x1c54 <__fixsfsi+0x9c>
    1c4c:	20 e0       	ldi	r18, 0x00	; 0
    1c4e:	30 e0       	ldi	r19, 0x00	; 0
    1c50:	40 e0       	ldi	r20, 0x00	; 0
    1c52:	50 e8       	ldi	r21, 0x80	; 128
    1c54:	b9 01       	movw	r22, r18
    1c56:	ca 01       	movw	r24, r20
    1c58:	2c 96       	adiw	r28, 0x0c	; 12
    1c5a:	e2 e0       	ldi	r30, 0x02	; 2
    1c5c:	0c 94 ca 10 	jmp	0x2194	; 0x2194 <__epilogue_restores__+0x20>

00001c60 <__floatunsisf>:
    1c60:	a8 e0       	ldi	r26, 0x08	; 8
    1c62:	b0 e0       	ldi	r27, 0x00	; 0
    1c64:	e6 e3       	ldi	r30, 0x36	; 54
    1c66:	fe e0       	ldi	r31, 0x0E	; 14
    1c68:	0c 94 a6 10 	jmp	0x214c	; 0x214c <__prologue_saves__+0x10>
    1c6c:	7b 01       	movw	r14, r22
    1c6e:	8c 01       	movw	r16, r24
    1c70:	61 15       	cp	r22, r1
    1c72:	71 05       	cpc	r23, r1
    1c74:	81 05       	cpc	r24, r1
    1c76:	91 05       	cpc	r25, r1
    1c78:	19 f4       	brne	.+6      	; 0x1c80 <__floatunsisf+0x20>
    1c7a:	82 e0       	ldi	r24, 0x02	; 2
    1c7c:	89 83       	std	Y+1, r24	; 0x01
    1c7e:	60 c0       	rjmp	.+192    	; 0x1d40 <__floatunsisf+0xe0>
    1c80:	83 e0       	ldi	r24, 0x03	; 3
    1c82:	89 83       	std	Y+1, r24	; 0x01
    1c84:	8e e1       	ldi	r24, 0x1E	; 30
    1c86:	c8 2e       	mov	r12, r24
    1c88:	d1 2c       	mov	r13, r1
    1c8a:	dc 82       	std	Y+4, r13	; 0x04
    1c8c:	cb 82       	std	Y+3, r12	; 0x03
    1c8e:	ed 82       	std	Y+5, r14	; 0x05
    1c90:	fe 82       	std	Y+6, r15	; 0x06
    1c92:	0f 83       	std	Y+7, r16	; 0x07
    1c94:	18 87       	std	Y+8, r17	; 0x08
    1c96:	c8 01       	movw	r24, r16
    1c98:	b7 01       	movw	r22, r14
    1c9a:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <__clzsi2>
    1c9e:	fc 01       	movw	r30, r24
    1ca0:	31 97       	sbiw	r30, 0x01	; 1
    1ca2:	f7 ff       	sbrs	r31, 7
    1ca4:	3b c0       	rjmp	.+118    	; 0x1d1c <__floatunsisf+0xbc>
    1ca6:	22 27       	eor	r18, r18
    1ca8:	33 27       	eor	r19, r19
    1caa:	2e 1b       	sub	r18, r30
    1cac:	3f 0b       	sbc	r19, r31
    1cae:	57 01       	movw	r10, r14
    1cb0:	68 01       	movw	r12, r16
    1cb2:	02 2e       	mov	r0, r18
    1cb4:	04 c0       	rjmp	.+8      	; 0x1cbe <__floatunsisf+0x5e>
    1cb6:	d6 94       	lsr	r13
    1cb8:	c7 94       	ror	r12
    1cba:	b7 94       	ror	r11
    1cbc:	a7 94       	ror	r10
    1cbe:	0a 94       	dec	r0
    1cc0:	d2 f7       	brpl	.-12     	; 0x1cb6 <__floatunsisf+0x56>
    1cc2:	40 e0       	ldi	r20, 0x00	; 0
    1cc4:	50 e0       	ldi	r21, 0x00	; 0
    1cc6:	60 e0       	ldi	r22, 0x00	; 0
    1cc8:	70 e0       	ldi	r23, 0x00	; 0
    1cca:	81 e0       	ldi	r24, 0x01	; 1
    1ccc:	90 e0       	ldi	r25, 0x00	; 0
    1cce:	a0 e0       	ldi	r26, 0x00	; 0
    1cd0:	b0 e0       	ldi	r27, 0x00	; 0
    1cd2:	04 c0       	rjmp	.+8      	; 0x1cdc <__floatunsisf+0x7c>
    1cd4:	88 0f       	add	r24, r24
    1cd6:	99 1f       	adc	r25, r25
    1cd8:	aa 1f       	adc	r26, r26
    1cda:	bb 1f       	adc	r27, r27
    1cdc:	2a 95       	dec	r18
    1cde:	d2 f7       	brpl	.-12     	; 0x1cd4 <__floatunsisf+0x74>
    1ce0:	01 97       	sbiw	r24, 0x01	; 1
    1ce2:	a1 09       	sbc	r26, r1
    1ce4:	b1 09       	sbc	r27, r1
    1ce6:	8e 21       	and	r24, r14
    1ce8:	9f 21       	and	r25, r15
    1cea:	a0 23       	and	r26, r16
    1cec:	b1 23       	and	r27, r17
    1cee:	00 97       	sbiw	r24, 0x00	; 0
    1cf0:	a1 05       	cpc	r26, r1
    1cf2:	b1 05       	cpc	r27, r1
    1cf4:	21 f0       	breq	.+8      	; 0x1cfe <__floatunsisf+0x9e>
    1cf6:	41 e0       	ldi	r20, 0x01	; 1
    1cf8:	50 e0       	ldi	r21, 0x00	; 0
    1cfa:	60 e0       	ldi	r22, 0x00	; 0
    1cfc:	70 e0       	ldi	r23, 0x00	; 0
    1cfe:	4a 29       	or	r20, r10
    1d00:	5b 29       	or	r21, r11
    1d02:	6c 29       	or	r22, r12
    1d04:	7d 29       	or	r23, r13
    1d06:	4d 83       	std	Y+5, r20	; 0x05
    1d08:	5e 83       	std	Y+6, r21	; 0x06
    1d0a:	6f 83       	std	Y+7, r22	; 0x07
    1d0c:	78 87       	std	Y+8, r23	; 0x08
    1d0e:	8e e1       	ldi	r24, 0x1E	; 30
    1d10:	90 e0       	ldi	r25, 0x00	; 0
    1d12:	8e 1b       	sub	r24, r30
    1d14:	9f 0b       	sbc	r25, r31
    1d16:	9c 83       	std	Y+4, r25	; 0x04
    1d18:	8b 83       	std	Y+3, r24	; 0x03
    1d1a:	12 c0       	rjmp	.+36     	; 0x1d40 <__floatunsisf+0xe0>
    1d1c:	30 97       	sbiw	r30, 0x00	; 0
    1d1e:	81 f0       	breq	.+32     	; 0x1d40 <__floatunsisf+0xe0>
    1d20:	0e 2e       	mov	r0, r30
    1d22:	04 c0       	rjmp	.+8      	; 0x1d2c <__floatunsisf+0xcc>
    1d24:	ee 0c       	add	r14, r14
    1d26:	ff 1c       	adc	r15, r15
    1d28:	00 1f       	adc	r16, r16
    1d2a:	11 1f       	adc	r17, r17
    1d2c:	0a 94       	dec	r0
    1d2e:	d2 f7       	brpl	.-12     	; 0x1d24 <__floatunsisf+0xc4>
    1d30:	ed 82       	std	Y+5, r14	; 0x05
    1d32:	fe 82       	std	Y+6, r15	; 0x06
    1d34:	0f 83       	std	Y+7, r16	; 0x07
    1d36:	18 87       	std	Y+8, r17	; 0x08
    1d38:	ce 1a       	sub	r12, r30
    1d3a:	df 0a       	sbc	r13, r31
    1d3c:	dc 82       	std	Y+4, r13	; 0x04
    1d3e:	cb 82       	std	Y+3, r12	; 0x03
    1d40:	1a 82       	std	Y+2, r1	; 0x02
    1d42:	ce 01       	movw	r24, r28
    1d44:	01 96       	adiw	r24, 0x01	; 1
    1d46:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <__pack_f>
    1d4a:	28 96       	adiw	r28, 0x08	; 8
    1d4c:	ea e0       	ldi	r30, 0x0A	; 10
    1d4e:	0c 94 c2 10 	jmp	0x2184	; 0x2184 <__epilogue_restores__+0x10>

00001d52 <__clzsi2>:
    1d52:	ef 92       	push	r14
    1d54:	ff 92       	push	r15
    1d56:	0f 93       	push	r16
    1d58:	1f 93       	push	r17
    1d5a:	7b 01       	movw	r14, r22
    1d5c:	8c 01       	movw	r16, r24
    1d5e:	80 e0       	ldi	r24, 0x00	; 0
    1d60:	e8 16       	cp	r14, r24
    1d62:	80 e0       	ldi	r24, 0x00	; 0
    1d64:	f8 06       	cpc	r15, r24
    1d66:	81 e0       	ldi	r24, 0x01	; 1
    1d68:	08 07       	cpc	r16, r24
    1d6a:	80 e0       	ldi	r24, 0x00	; 0
    1d6c:	18 07       	cpc	r17, r24
    1d6e:	88 f4       	brcc	.+34     	; 0x1d92 <__clzsi2+0x40>
    1d70:	8f ef       	ldi	r24, 0xFF	; 255
    1d72:	e8 16       	cp	r14, r24
    1d74:	f1 04       	cpc	r15, r1
    1d76:	01 05       	cpc	r16, r1
    1d78:	11 05       	cpc	r17, r1
    1d7a:	31 f0       	breq	.+12     	; 0x1d88 <__clzsi2+0x36>
    1d7c:	28 f0       	brcs	.+10     	; 0x1d88 <__clzsi2+0x36>
    1d7e:	88 e0       	ldi	r24, 0x08	; 8
    1d80:	90 e0       	ldi	r25, 0x00	; 0
    1d82:	a0 e0       	ldi	r26, 0x00	; 0
    1d84:	b0 e0       	ldi	r27, 0x00	; 0
    1d86:	17 c0       	rjmp	.+46     	; 0x1db6 <__clzsi2+0x64>
    1d88:	80 e0       	ldi	r24, 0x00	; 0
    1d8a:	90 e0       	ldi	r25, 0x00	; 0
    1d8c:	a0 e0       	ldi	r26, 0x00	; 0
    1d8e:	b0 e0       	ldi	r27, 0x00	; 0
    1d90:	12 c0       	rjmp	.+36     	; 0x1db6 <__clzsi2+0x64>
    1d92:	80 e0       	ldi	r24, 0x00	; 0
    1d94:	e8 16       	cp	r14, r24
    1d96:	80 e0       	ldi	r24, 0x00	; 0
    1d98:	f8 06       	cpc	r15, r24
    1d9a:	80 e0       	ldi	r24, 0x00	; 0
    1d9c:	08 07       	cpc	r16, r24
    1d9e:	81 e0       	ldi	r24, 0x01	; 1
    1da0:	18 07       	cpc	r17, r24
    1da2:	28 f0       	brcs	.+10     	; 0x1dae <__clzsi2+0x5c>
    1da4:	88 e1       	ldi	r24, 0x18	; 24
    1da6:	90 e0       	ldi	r25, 0x00	; 0
    1da8:	a0 e0       	ldi	r26, 0x00	; 0
    1daa:	b0 e0       	ldi	r27, 0x00	; 0
    1dac:	04 c0       	rjmp	.+8      	; 0x1db6 <__clzsi2+0x64>
    1dae:	80 e1       	ldi	r24, 0x10	; 16
    1db0:	90 e0       	ldi	r25, 0x00	; 0
    1db2:	a0 e0       	ldi	r26, 0x00	; 0
    1db4:	b0 e0       	ldi	r27, 0x00	; 0
    1db6:	20 e2       	ldi	r18, 0x20	; 32
    1db8:	30 e0       	ldi	r19, 0x00	; 0
    1dba:	40 e0       	ldi	r20, 0x00	; 0
    1dbc:	50 e0       	ldi	r21, 0x00	; 0
    1dbe:	28 1b       	sub	r18, r24
    1dc0:	39 0b       	sbc	r19, r25
    1dc2:	4a 0b       	sbc	r20, r26
    1dc4:	5b 0b       	sbc	r21, r27
    1dc6:	04 c0       	rjmp	.+8      	; 0x1dd0 <__clzsi2+0x7e>
    1dc8:	16 95       	lsr	r17
    1dca:	07 95       	ror	r16
    1dcc:	f7 94       	ror	r15
    1dce:	e7 94       	ror	r14
    1dd0:	8a 95       	dec	r24
    1dd2:	d2 f7       	brpl	.-12     	; 0x1dc8 <__clzsi2+0x76>
    1dd4:	f7 01       	movw	r30, r14
    1dd6:	e7 5f       	subi	r30, 0xF7	; 247
    1dd8:	fd 4f       	sbci	r31, 0xFD	; 253
    1dda:	80 81       	ld	r24, Z
    1ddc:	28 1b       	sub	r18, r24
    1dde:	31 09       	sbc	r19, r1
    1de0:	41 09       	sbc	r20, r1
    1de2:	51 09       	sbc	r21, r1
    1de4:	c9 01       	movw	r24, r18
    1de6:	1f 91       	pop	r17
    1de8:	0f 91       	pop	r16
    1dea:	ff 90       	pop	r15
    1dec:	ef 90       	pop	r14
    1dee:	08 95       	ret

00001df0 <__pack_f>:
    1df0:	df 92       	push	r13
    1df2:	ef 92       	push	r14
    1df4:	ff 92       	push	r15
    1df6:	0f 93       	push	r16
    1df8:	1f 93       	push	r17
    1dfa:	fc 01       	movw	r30, r24
    1dfc:	e4 80       	ldd	r14, Z+4	; 0x04
    1dfe:	f5 80       	ldd	r15, Z+5	; 0x05
    1e00:	06 81       	ldd	r16, Z+6	; 0x06
    1e02:	17 81       	ldd	r17, Z+7	; 0x07
    1e04:	d1 80       	ldd	r13, Z+1	; 0x01
    1e06:	80 81       	ld	r24, Z
    1e08:	82 30       	cpi	r24, 0x02	; 2
    1e0a:	48 f4       	brcc	.+18     	; 0x1e1e <__pack_f+0x2e>
    1e0c:	80 e0       	ldi	r24, 0x00	; 0
    1e0e:	90 e0       	ldi	r25, 0x00	; 0
    1e10:	a0 e1       	ldi	r26, 0x10	; 16
    1e12:	b0 e0       	ldi	r27, 0x00	; 0
    1e14:	e8 2a       	or	r14, r24
    1e16:	f9 2a       	or	r15, r25
    1e18:	0a 2b       	or	r16, r26
    1e1a:	1b 2b       	or	r17, r27
    1e1c:	a5 c0       	rjmp	.+330    	; 0x1f68 <__pack_f+0x178>
    1e1e:	84 30       	cpi	r24, 0x04	; 4
    1e20:	09 f4       	brne	.+2      	; 0x1e24 <__pack_f+0x34>
    1e22:	9f c0       	rjmp	.+318    	; 0x1f62 <__pack_f+0x172>
    1e24:	82 30       	cpi	r24, 0x02	; 2
    1e26:	21 f4       	brne	.+8      	; 0x1e30 <__pack_f+0x40>
    1e28:	ee 24       	eor	r14, r14
    1e2a:	ff 24       	eor	r15, r15
    1e2c:	87 01       	movw	r16, r14
    1e2e:	05 c0       	rjmp	.+10     	; 0x1e3a <__pack_f+0x4a>
    1e30:	e1 14       	cp	r14, r1
    1e32:	f1 04       	cpc	r15, r1
    1e34:	01 05       	cpc	r16, r1
    1e36:	11 05       	cpc	r17, r1
    1e38:	19 f4       	brne	.+6      	; 0x1e40 <__pack_f+0x50>
    1e3a:	e0 e0       	ldi	r30, 0x00	; 0
    1e3c:	f0 e0       	ldi	r31, 0x00	; 0
    1e3e:	96 c0       	rjmp	.+300    	; 0x1f6c <__pack_f+0x17c>
    1e40:	62 81       	ldd	r22, Z+2	; 0x02
    1e42:	73 81       	ldd	r23, Z+3	; 0x03
    1e44:	9f ef       	ldi	r25, 0xFF	; 255
    1e46:	62 38       	cpi	r22, 0x82	; 130
    1e48:	79 07       	cpc	r23, r25
    1e4a:	0c f0       	brlt	.+2      	; 0x1e4e <__pack_f+0x5e>
    1e4c:	5b c0       	rjmp	.+182    	; 0x1f04 <__pack_f+0x114>
    1e4e:	22 e8       	ldi	r18, 0x82	; 130
    1e50:	3f ef       	ldi	r19, 0xFF	; 255
    1e52:	26 1b       	sub	r18, r22
    1e54:	37 0b       	sbc	r19, r23
    1e56:	2a 31       	cpi	r18, 0x1A	; 26
    1e58:	31 05       	cpc	r19, r1
    1e5a:	2c f0       	brlt	.+10     	; 0x1e66 <__pack_f+0x76>
    1e5c:	20 e0       	ldi	r18, 0x00	; 0
    1e5e:	30 e0       	ldi	r19, 0x00	; 0
    1e60:	40 e0       	ldi	r20, 0x00	; 0
    1e62:	50 e0       	ldi	r21, 0x00	; 0
    1e64:	2a c0       	rjmp	.+84     	; 0x1eba <__pack_f+0xca>
    1e66:	b8 01       	movw	r22, r16
    1e68:	a7 01       	movw	r20, r14
    1e6a:	02 2e       	mov	r0, r18
    1e6c:	04 c0       	rjmp	.+8      	; 0x1e76 <__pack_f+0x86>
    1e6e:	76 95       	lsr	r23
    1e70:	67 95       	ror	r22
    1e72:	57 95       	ror	r21
    1e74:	47 95       	ror	r20
    1e76:	0a 94       	dec	r0
    1e78:	d2 f7       	brpl	.-12     	; 0x1e6e <__pack_f+0x7e>
    1e7a:	81 e0       	ldi	r24, 0x01	; 1
    1e7c:	90 e0       	ldi	r25, 0x00	; 0
    1e7e:	a0 e0       	ldi	r26, 0x00	; 0
    1e80:	b0 e0       	ldi	r27, 0x00	; 0
    1e82:	04 c0       	rjmp	.+8      	; 0x1e8c <__pack_f+0x9c>
    1e84:	88 0f       	add	r24, r24
    1e86:	99 1f       	adc	r25, r25
    1e88:	aa 1f       	adc	r26, r26
    1e8a:	bb 1f       	adc	r27, r27
    1e8c:	2a 95       	dec	r18
    1e8e:	d2 f7       	brpl	.-12     	; 0x1e84 <__pack_f+0x94>
    1e90:	01 97       	sbiw	r24, 0x01	; 1
    1e92:	a1 09       	sbc	r26, r1
    1e94:	b1 09       	sbc	r27, r1
    1e96:	8e 21       	and	r24, r14
    1e98:	9f 21       	and	r25, r15
    1e9a:	a0 23       	and	r26, r16
    1e9c:	b1 23       	and	r27, r17
    1e9e:	00 97       	sbiw	r24, 0x00	; 0
    1ea0:	a1 05       	cpc	r26, r1
    1ea2:	b1 05       	cpc	r27, r1
    1ea4:	21 f0       	breq	.+8      	; 0x1eae <__pack_f+0xbe>
    1ea6:	81 e0       	ldi	r24, 0x01	; 1
    1ea8:	90 e0       	ldi	r25, 0x00	; 0
    1eaa:	a0 e0       	ldi	r26, 0x00	; 0
    1eac:	b0 e0       	ldi	r27, 0x00	; 0
    1eae:	9a 01       	movw	r18, r20
    1eb0:	ab 01       	movw	r20, r22
    1eb2:	28 2b       	or	r18, r24
    1eb4:	39 2b       	or	r19, r25
    1eb6:	4a 2b       	or	r20, r26
    1eb8:	5b 2b       	or	r21, r27
    1eba:	da 01       	movw	r26, r20
    1ebc:	c9 01       	movw	r24, r18
    1ebe:	8f 77       	andi	r24, 0x7F	; 127
    1ec0:	90 70       	andi	r25, 0x00	; 0
    1ec2:	a0 70       	andi	r26, 0x00	; 0
    1ec4:	b0 70       	andi	r27, 0x00	; 0
    1ec6:	80 34       	cpi	r24, 0x40	; 64
    1ec8:	91 05       	cpc	r25, r1
    1eca:	a1 05       	cpc	r26, r1
    1ecc:	b1 05       	cpc	r27, r1
    1ece:	39 f4       	brne	.+14     	; 0x1ede <__pack_f+0xee>
    1ed0:	27 ff       	sbrs	r18, 7
    1ed2:	09 c0       	rjmp	.+18     	; 0x1ee6 <__pack_f+0xf6>
    1ed4:	20 5c       	subi	r18, 0xC0	; 192
    1ed6:	3f 4f       	sbci	r19, 0xFF	; 255
    1ed8:	4f 4f       	sbci	r20, 0xFF	; 255
    1eda:	5f 4f       	sbci	r21, 0xFF	; 255
    1edc:	04 c0       	rjmp	.+8      	; 0x1ee6 <__pack_f+0xf6>
    1ede:	21 5c       	subi	r18, 0xC1	; 193
    1ee0:	3f 4f       	sbci	r19, 0xFF	; 255
    1ee2:	4f 4f       	sbci	r20, 0xFF	; 255
    1ee4:	5f 4f       	sbci	r21, 0xFF	; 255
    1ee6:	e0 e0       	ldi	r30, 0x00	; 0
    1ee8:	f0 e0       	ldi	r31, 0x00	; 0
    1eea:	20 30       	cpi	r18, 0x00	; 0
    1eec:	a0 e0       	ldi	r26, 0x00	; 0
    1eee:	3a 07       	cpc	r19, r26
    1ef0:	a0 e0       	ldi	r26, 0x00	; 0
    1ef2:	4a 07       	cpc	r20, r26
    1ef4:	a0 e4       	ldi	r26, 0x40	; 64
    1ef6:	5a 07       	cpc	r21, r26
    1ef8:	10 f0       	brcs	.+4      	; 0x1efe <__pack_f+0x10e>
    1efa:	e1 e0       	ldi	r30, 0x01	; 1
    1efc:	f0 e0       	ldi	r31, 0x00	; 0
    1efe:	79 01       	movw	r14, r18
    1f00:	8a 01       	movw	r16, r20
    1f02:	27 c0       	rjmp	.+78     	; 0x1f52 <__pack_f+0x162>
    1f04:	60 38       	cpi	r22, 0x80	; 128
    1f06:	71 05       	cpc	r23, r1
    1f08:	64 f5       	brge	.+88     	; 0x1f62 <__pack_f+0x172>
    1f0a:	fb 01       	movw	r30, r22
    1f0c:	e1 58       	subi	r30, 0x81	; 129
    1f0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f10:	d8 01       	movw	r26, r16
    1f12:	c7 01       	movw	r24, r14
    1f14:	8f 77       	andi	r24, 0x7F	; 127
    1f16:	90 70       	andi	r25, 0x00	; 0
    1f18:	a0 70       	andi	r26, 0x00	; 0
    1f1a:	b0 70       	andi	r27, 0x00	; 0
    1f1c:	80 34       	cpi	r24, 0x40	; 64
    1f1e:	91 05       	cpc	r25, r1
    1f20:	a1 05       	cpc	r26, r1
    1f22:	b1 05       	cpc	r27, r1
    1f24:	39 f4       	brne	.+14     	; 0x1f34 <__pack_f+0x144>
    1f26:	e7 fe       	sbrs	r14, 7
    1f28:	0d c0       	rjmp	.+26     	; 0x1f44 <__pack_f+0x154>
    1f2a:	80 e4       	ldi	r24, 0x40	; 64
    1f2c:	90 e0       	ldi	r25, 0x00	; 0
    1f2e:	a0 e0       	ldi	r26, 0x00	; 0
    1f30:	b0 e0       	ldi	r27, 0x00	; 0
    1f32:	04 c0       	rjmp	.+8      	; 0x1f3c <__pack_f+0x14c>
    1f34:	8f e3       	ldi	r24, 0x3F	; 63
    1f36:	90 e0       	ldi	r25, 0x00	; 0
    1f38:	a0 e0       	ldi	r26, 0x00	; 0
    1f3a:	b0 e0       	ldi	r27, 0x00	; 0
    1f3c:	e8 0e       	add	r14, r24
    1f3e:	f9 1e       	adc	r15, r25
    1f40:	0a 1f       	adc	r16, r26
    1f42:	1b 1f       	adc	r17, r27
    1f44:	17 ff       	sbrs	r17, 7
    1f46:	05 c0       	rjmp	.+10     	; 0x1f52 <__pack_f+0x162>
    1f48:	16 95       	lsr	r17
    1f4a:	07 95       	ror	r16
    1f4c:	f7 94       	ror	r15
    1f4e:	e7 94       	ror	r14
    1f50:	31 96       	adiw	r30, 0x01	; 1
    1f52:	87 e0       	ldi	r24, 0x07	; 7
    1f54:	16 95       	lsr	r17
    1f56:	07 95       	ror	r16
    1f58:	f7 94       	ror	r15
    1f5a:	e7 94       	ror	r14
    1f5c:	8a 95       	dec	r24
    1f5e:	d1 f7       	brne	.-12     	; 0x1f54 <__pack_f+0x164>
    1f60:	05 c0       	rjmp	.+10     	; 0x1f6c <__pack_f+0x17c>
    1f62:	ee 24       	eor	r14, r14
    1f64:	ff 24       	eor	r15, r15
    1f66:	87 01       	movw	r16, r14
    1f68:	ef ef       	ldi	r30, 0xFF	; 255
    1f6a:	f0 e0       	ldi	r31, 0x00	; 0
    1f6c:	6e 2f       	mov	r22, r30
    1f6e:	67 95       	ror	r22
    1f70:	66 27       	eor	r22, r22
    1f72:	67 95       	ror	r22
    1f74:	90 2f       	mov	r25, r16
    1f76:	9f 77       	andi	r25, 0x7F	; 127
    1f78:	d7 94       	ror	r13
    1f7a:	dd 24       	eor	r13, r13
    1f7c:	d7 94       	ror	r13
    1f7e:	8e 2f       	mov	r24, r30
    1f80:	86 95       	lsr	r24
    1f82:	49 2f       	mov	r20, r25
    1f84:	46 2b       	or	r20, r22
    1f86:	58 2f       	mov	r21, r24
    1f88:	5d 29       	or	r21, r13
    1f8a:	b7 01       	movw	r22, r14
    1f8c:	ca 01       	movw	r24, r20
    1f8e:	1f 91       	pop	r17
    1f90:	0f 91       	pop	r16
    1f92:	ff 90       	pop	r15
    1f94:	ef 90       	pop	r14
    1f96:	df 90       	pop	r13
    1f98:	08 95       	ret

00001f9a <__unpack_f>:
    1f9a:	fc 01       	movw	r30, r24
    1f9c:	db 01       	movw	r26, r22
    1f9e:	40 81       	ld	r20, Z
    1fa0:	51 81       	ldd	r21, Z+1	; 0x01
    1fa2:	22 81       	ldd	r18, Z+2	; 0x02
    1fa4:	62 2f       	mov	r22, r18
    1fa6:	6f 77       	andi	r22, 0x7F	; 127
    1fa8:	70 e0       	ldi	r23, 0x00	; 0
    1faa:	22 1f       	adc	r18, r18
    1fac:	22 27       	eor	r18, r18
    1fae:	22 1f       	adc	r18, r18
    1fb0:	93 81       	ldd	r25, Z+3	; 0x03
    1fb2:	89 2f       	mov	r24, r25
    1fb4:	88 0f       	add	r24, r24
    1fb6:	82 2b       	or	r24, r18
    1fb8:	28 2f       	mov	r18, r24
    1fba:	30 e0       	ldi	r19, 0x00	; 0
    1fbc:	99 1f       	adc	r25, r25
    1fbe:	99 27       	eor	r25, r25
    1fc0:	99 1f       	adc	r25, r25
    1fc2:	11 96       	adiw	r26, 0x01	; 1
    1fc4:	9c 93       	st	X, r25
    1fc6:	11 97       	sbiw	r26, 0x01	; 1
    1fc8:	21 15       	cp	r18, r1
    1fca:	31 05       	cpc	r19, r1
    1fcc:	a9 f5       	brne	.+106    	; 0x2038 <__unpack_f+0x9e>
    1fce:	41 15       	cp	r20, r1
    1fd0:	51 05       	cpc	r21, r1
    1fd2:	61 05       	cpc	r22, r1
    1fd4:	71 05       	cpc	r23, r1
    1fd6:	11 f4       	brne	.+4      	; 0x1fdc <__unpack_f+0x42>
    1fd8:	82 e0       	ldi	r24, 0x02	; 2
    1fda:	37 c0       	rjmp	.+110    	; 0x204a <__unpack_f+0xb0>
    1fdc:	82 e8       	ldi	r24, 0x82	; 130
    1fde:	9f ef       	ldi	r25, 0xFF	; 255
    1fe0:	13 96       	adiw	r26, 0x03	; 3
    1fe2:	9c 93       	st	X, r25
    1fe4:	8e 93       	st	-X, r24
    1fe6:	12 97       	sbiw	r26, 0x02	; 2
    1fe8:	9a 01       	movw	r18, r20
    1fea:	ab 01       	movw	r20, r22
    1fec:	67 e0       	ldi	r22, 0x07	; 7
    1fee:	22 0f       	add	r18, r18
    1ff0:	33 1f       	adc	r19, r19
    1ff2:	44 1f       	adc	r20, r20
    1ff4:	55 1f       	adc	r21, r21
    1ff6:	6a 95       	dec	r22
    1ff8:	d1 f7       	brne	.-12     	; 0x1fee <__unpack_f+0x54>
    1ffa:	83 e0       	ldi	r24, 0x03	; 3
    1ffc:	8c 93       	st	X, r24
    1ffe:	0d c0       	rjmp	.+26     	; 0x201a <__unpack_f+0x80>
    2000:	22 0f       	add	r18, r18
    2002:	33 1f       	adc	r19, r19
    2004:	44 1f       	adc	r20, r20
    2006:	55 1f       	adc	r21, r21
    2008:	12 96       	adiw	r26, 0x02	; 2
    200a:	8d 91       	ld	r24, X+
    200c:	9c 91       	ld	r25, X
    200e:	13 97       	sbiw	r26, 0x03	; 3
    2010:	01 97       	sbiw	r24, 0x01	; 1
    2012:	13 96       	adiw	r26, 0x03	; 3
    2014:	9c 93       	st	X, r25
    2016:	8e 93       	st	-X, r24
    2018:	12 97       	sbiw	r26, 0x02	; 2
    201a:	20 30       	cpi	r18, 0x00	; 0
    201c:	80 e0       	ldi	r24, 0x00	; 0
    201e:	38 07       	cpc	r19, r24
    2020:	80 e0       	ldi	r24, 0x00	; 0
    2022:	48 07       	cpc	r20, r24
    2024:	80 e4       	ldi	r24, 0x40	; 64
    2026:	58 07       	cpc	r21, r24
    2028:	58 f3       	brcs	.-42     	; 0x2000 <__unpack_f+0x66>
    202a:	14 96       	adiw	r26, 0x04	; 4
    202c:	2d 93       	st	X+, r18
    202e:	3d 93       	st	X+, r19
    2030:	4d 93       	st	X+, r20
    2032:	5c 93       	st	X, r21
    2034:	17 97       	sbiw	r26, 0x07	; 7
    2036:	08 95       	ret
    2038:	2f 3f       	cpi	r18, 0xFF	; 255
    203a:	31 05       	cpc	r19, r1
    203c:	79 f4       	brne	.+30     	; 0x205c <__unpack_f+0xc2>
    203e:	41 15       	cp	r20, r1
    2040:	51 05       	cpc	r21, r1
    2042:	61 05       	cpc	r22, r1
    2044:	71 05       	cpc	r23, r1
    2046:	19 f4       	brne	.+6      	; 0x204e <__unpack_f+0xb4>
    2048:	84 e0       	ldi	r24, 0x04	; 4
    204a:	8c 93       	st	X, r24
    204c:	08 95       	ret
    204e:	64 ff       	sbrs	r22, 4
    2050:	03 c0       	rjmp	.+6      	; 0x2058 <__unpack_f+0xbe>
    2052:	81 e0       	ldi	r24, 0x01	; 1
    2054:	8c 93       	st	X, r24
    2056:	12 c0       	rjmp	.+36     	; 0x207c <__unpack_f+0xe2>
    2058:	1c 92       	st	X, r1
    205a:	10 c0       	rjmp	.+32     	; 0x207c <__unpack_f+0xe2>
    205c:	2f 57       	subi	r18, 0x7F	; 127
    205e:	30 40       	sbci	r19, 0x00	; 0
    2060:	13 96       	adiw	r26, 0x03	; 3
    2062:	3c 93       	st	X, r19
    2064:	2e 93       	st	-X, r18
    2066:	12 97       	sbiw	r26, 0x02	; 2
    2068:	83 e0       	ldi	r24, 0x03	; 3
    206a:	8c 93       	st	X, r24
    206c:	87 e0       	ldi	r24, 0x07	; 7
    206e:	44 0f       	add	r20, r20
    2070:	55 1f       	adc	r21, r21
    2072:	66 1f       	adc	r22, r22
    2074:	77 1f       	adc	r23, r23
    2076:	8a 95       	dec	r24
    2078:	d1 f7       	brne	.-12     	; 0x206e <__unpack_f+0xd4>
    207a:	70 64       	ori	r23, 0x40	; 64
    207c:	14 96       	adiw	r26, 0x04	; 4
    207e:	4d 93       	st	X+, r20
    2080:	5d 93       	st	X+, r21
    2082:	6d 93       	st	X+, r22
    2084:	7c 93       	st	X, r23
    2086:	17 97       	sbiw	r26, 0x07	; 7
    2088:	08 95       	ret

0000208a <__fpcmp_parts_f>:
    208a:	1f 93       	push	r17
    208c:	dc 01       	movw	r26, r24
    208e:	fb 01       	movw	r30, r22
    2090:	9c 91       	ld	r25, X
    2092:	92 30       	cpi	r25, 0x02	; 2
    2094:	08 f4       	brcc	.+2      	; 0x2098 <__fpcmp_parts_f+0xe>
    2096:	47 c0       	rjmp	.+142    	; 0x2126 <__fpcmp_parts_f+0x9c>
    2098:	80 81       	ld	r24, Z
    209a:	82 30       	cpi	r24, 0x02	; 2
    209c:	08 f4       	brcc	.+2      	; 0x20a0 <__fpcmp_parts_f+0x16>
    209e:	43 c0       	rjmp	.+134    	; 0x2126 <__fpcmp_parts_f+0x9c>
    20a0:	94 30       	cpi	r25, 0x04	; 4
    20a2:	51 f4       	brne	.+20     	; 0x20b8 <__fpcmp_parts_f+0x2e>
    20a4:	11 96       	adiw	r26, 0x01	; 1
    20a6:	1c 91       	ld	r17, X
    20a8:	84 30       	cpi	r24, 0x04	; 4
    20aa:	99 f5       	brne	.+102    	; 0x2112 <__fpcmp_parts_f+0x88>
    20ac:	81 81       	ldd	r24, Z+1	; 0x01
    20ae:	68 2f       	mov	r22, r24
    20b0:	70 e0       	ldi	r23, 0x00	; 0
    20b2:	61 1b       	sub	r22, r17
    20b4:	71 09       	sbc	r23, r1
    20b6:	3f c0       	rjmp	.+126    	; 0x2136 <__fpcmp_parts_f+0xac>
    20b8:	84 30       	cpi	r24, 0x04	; 4
    20ba:	21 f0       	breq	.+8      	; 0x20c4 <__fpcmp_parts_f+0x3a>
    20bc:	92 30       	cpi	r25, 0x02	; 2
    20be:	31 f4       	brne	.+12     	; 0x20cc <__fpcmp_parts_f+0x42>
    20c0:	82 30       	cpi	r24, 0x02	; 2
    20c2:	b9 f1       	breq	.+110    	; 0x2132 <__fpcmp_parts_f+0xa8>
    20c4:	81 81       	ldd	r24, Z+1	; 0x01
    20c6:	88 23       	and	r24, r24
    20c8:	89 f1       	breq	.+98     	; 0x212c <__fpcmp_parts_f+0xa2>
    20ca:	2d c0       	rjmp	.+90     	; 0x2126 <__fpcmp_parts_f+0x9c>
    20cc:	11 96       	adiw	r26, 0x01	; 1
    20ce:	1c 91       	ld	r17, X
    20d0:	11 97       	sbiw	r26, 0x01	; 1
    20d2:	82 30       	cpi	r24, 0x02	; 2
    20d4:	f1 f0       	breq	.+60     	; 0x2112 <__fpcmp_parts_f+0x88>
    20d6:	81 81       	ldd	r24, Z+1	; 0x01
    20d8:	18 17       	cp	r17, r24
    20da:	d9 f4       	brne	.+54     	; 0x2112 <__fpcmp_parts_f+0x88>
    20dc:	12 96       	adiw	r26, 0x02	; 2
    20de:	2d 91       	ld	r18, X+
    20e0:	3c 91       	ld	r19, X
    20e2:	13 97       	sbiw	r26, 0x03	; 3
    20e4:	82 81       	ldd	r24, Z+2	; 0x02
    20e6:	93 81       	ldd	r25, Z+3	; 0x03
    20e8:	82 17       	cp	r24, r18
    20ea:	93 07       	cpc	r25, r19
    20ec:	94 f0       	brlt	.+36     	; 0x2112 <__fpcmp_parts_f+0x88>
    20ee:	28 17       	cp	r18, r24
    20f0:	39 07       	cpc	r19, r25
    20f2:	bc f0       	brlt	.+46     	; 0x2122 <__fpcmp_parts_f+0x98>
    20f4:	14 96       	adiw	r26, 0x04	; 4
    20f6:	8d 91       	ld	r24, X+
    20f8:	9d 91       	ld	r25, X+
    20fa:	0d 90       	ld	r0, X+
    20fc:	bc 91       	ld	r27, X
    20fe:	a0 2d       	mov	r26, r0
    2100:	24 81       	ldd	r18, Z+4	; 0x04
    2102:	35 81       	ldd	r19, Z+5	; 0x05
    2104:	46 81       	ldd	r20, Z+6	; 0x06
    2106:	57 81       	ldd	r21, Z+7	; 0x07
    2108:	28 17       	cp	r18, r24
    210a:	39 07       	cpc	r19, r25
    210c:	4a 07       	cpc	r20, r26
    210e:	5b 07       	cpc	r21, r27
    2110:	18 f4       	brcc	.+6      	; 0x2118 <__fpcmp_parts_f+0x8e>
    2112:	11 23       	and	r17, r17
    2114:	41 f0       	breq	.+16     	; 0x2126 <__fpcmp_parts_f+0x9c>
    2116:	0a c0       	rjmp	.+20     	; 0x212c <__fpcmp_parts_f+0xa2>
    2118:	82 17       	cp	r24, r18
    211a:	93 07       	cpc	r25, r19
    211c:	a4 07       	cpc	r26, r20
    211e:	b5 07       	cpc	r27, r21
    2120:	40 f4       	brcc	.+16     	; 0x2132 <__fpcmp_parts_f+0xa8>
    2122:	11 23       	and	r17, r17
    2124:	19 f0       	breq	.+6      	; 0x212c <__fpcmp_parts_f+0xa2>
    2126:	61 e0       	ldi	r22, 0x01	; 1
    2128:	70 e0       	ldi	r23, 0x00	; 0
    212a:	05 c0       	rjmp	.+10     	; 0x2136 <__fpcmp_parts_f+0xac>
    212c:	6f ef       	ldi	r22, 0xFF	; 255
    212e:	7f ef       	ldi	r23, 0xFF	; 255
    2130:	02 c0       	rjmp	.+4      	; 0x2136 <__fpcmp_parts_f+0xac>
    2132:	60 e0       	ldi	r22, 0x00	; 0
    2134:	70 e0       	ldi	r23, 0x00	; 0
    2136:	cb 01       	movw	r24, r22
    2138:	1f 91       	pop	r17
    213a:	08 95       	ret

0000213c <__prologue_saves__>:
    213c:	2f 92       	push	r2
    213e:	3f 92       	push	r3
    2140:	4f 92       	push	r4
    2142:	5f 92       	push	r5
    2144:	6f 92       	push	r6
    2146:	7f 92       	push	r7
    2148:	8f 92       	push	r8
    214a:	9f 92       	push	r9
    214c:	af 92       	push	r10
    214e:	bf 92       	push	r11
    2150:	cf 92       	push	r12
    2152:	df 92       	push	r13
    2154:	ef 92       	push	r14
    2156:	ff 92       	push	r15
    2158:	0f 93       	push	r16
    215a:	1f 93       	push	r17
    215c:	cf 93       	push	r28
    215e:	df 93       	push	r29
    2160:	cd b7       	in	r28, 0x3d	; 61
    2162:	de b7       	in	r29, 0x3e	; 62
    2164:	ca 1b       	sub	r28, r26
    2166:	db 0b       	sbc	r29, r27
    2168:	0f b6       	in	r0, 0x3f	; 63
    216a:	f8 94       	cli
    216c:	de bf       	out	0x3e, r29	; 62
    216e:	0f be       	out	0x3f, r0	; 63
    2170:	cd bf       	out	0x3d, r28	; 61
    2172:	19 94       	eijmp

00002174 <__epilogue_restores__>:
    2174:	2a 88       	ldd	r2, Y+18	; 0x12
    2176:	39 88       	ldd	r3, Y+17	; 0x11
    2178:	48 88       	ldd	r4, Y+16	; 0x10
    217a:	5f 84       	ldd	r5, Y+15	; 0x0f
    217c:	6e 84       	ldd	r6, Y+14	; 0x0e
    217e:	7d 84       	ldd	r7, Y+13	; 0x0d
    2180:	8c 84       	ldd	r8, Y+12	; 0x0c
    2182:	9b 84       	ldd	r9, Y+11	; 0x0b
    2184:	aa 84       	ldd	r10, Y+10	; 0x0a
    2186:	b9 84       	ldd	r11, Y+9	; 0x09
    2188:	c8 84       	ldd	r12, Y+8	; 0x08
    218a:	df 80       	ldd	r13, Y+7	; 0x07
    218c:	ee 80       	ldd	r14, Y+6	; 0x06
    218e:	fd 80       	ldd	r15, Y+5	; 0x05
    2190:	0c 81       	ldd	r16, Y+4	; 0x04
    2192:	1b 81       	ldd	r17, Y+3	; 0x03
    2194:	aa 81       	ldd	r26, Y+2	; 0x02
    2196:	b9 81       	ldd	r27, Y+1	; 0x01
    2198:	ce 0f       	add	r28, r30
    219a:	d1 1d       	adc	r29, r1
    219c:	0f b6       	in	r0, 0x3f	; 63
    219e:	f8 94       	cli
    21a0:	de bf       	out	0x3e, r29	; 62
    21a2:	0f be       	out	0x3f, r0	; 63
    21a4:	cd bf       	out	0x3d, r28	; 61
    21a6:	ed 01       	movw	r28, r26
    21a8:	08 95       	ret

000021aa <_exit>:
    21aa:	f8 94       	cli

000021ac <__stop_program>:
    21ac:	ff cf       	rjmp	.-2      	; 0x21ac <__stop_program>
